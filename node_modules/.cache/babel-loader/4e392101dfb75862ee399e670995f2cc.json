{"ast":null,"code":"import * as THREE from './lib/three.min.js';\nimport { SceneDirections as _SceneDirections } from './bin/ScreenDirector.js';\nimport { CSS3DObject } from './jsm/renderers/CSS3DRenderer.js';\n\nclass SceneDirections extends _SceneDirections {\n  constructor() {\n    super(...arguments);\n\n    this.enter_splash = async screenplay => {\n      console.log('SceneDirections.enter_splash');\n      let scene = screenplay.scene;\n      let ui_scene = screenplay.ui_scene;\n      screenplay.SetSceneBackground();\n      screenplay.lights.point_light.position.set(0, 0, 0);\n      scene.add(screenplay.lights.point_light);\n      scene.add(screenplay.lights.ambient_light);\n      let ship = await screenplay.actors.Ship;\n      screenplay.cameras = ship.cameras;\n      ship.position.addVectors(screenplay.actors.Earth.position, screenplay.actors.Earth.orbital_vector);\n      ship.lookAt(screenplay.actors.Earth.position);\n      scene.add(ship);\n      scene.add(ship.warp_tunnel);\n      ship.warp_tunnel.children.forEach(warp_shell_cone => {\n        warp_shell_cone.visible = false;\n        screenplay.actives.push(warp_shell_cone);\n      });\n      ship.updateMatrixWorld(true);\n      var rotationMatrix = new THREE.Matrix4().extractRotation(ship.matrixWorld);\n      var up_now = new THREE.Vector3(0, 1, 0).applyMatrix4(rotationMatrix).normalize();\n      ship.up = up_now;\n      screenplay.active_cam.up = up_now;\n      screenplay.active_cam.position.addVectors(ship.position, new THREE.Vector3(0, 0, 0));\n      let sight_target = new THREE.Vector3();\n      ship.NavDots.sight_target.getWorldPosition(sight_target);\n      screenplay.active_cam.lookAt(sight_target);\n      screenplay.active_cam.updateProjectionMatrix();\n      let distance_scale = 0.1 / screenplay.actors.Neptune.surface_distance / 30000;\n      let model_scale = 0.01 / screenplay.actors.Neptune.surface_distance;\n      let holo_neptune = screenplay.actors.Neptune.clone();\n      let neptune_scale = 0.02 / screenplay.actors.Neptune.surface_distance;\n      holo_neptune.scale.multiplyScalar(neptune_scale);\n      holo_neptune.position.multiplyScalar(distance_scale * 0.7).add(new THREE.Vector3(0, 0.07, 0));\n      holo_neptune.position.setZ(holo_neptune.position.z / 2);\n\n      holo_neptune.click = () => {\n        screenplay.actions.warp_to(screenplay.actors.Neptune);\n      };\n\n      screenplay.interactives.push(holo_neptune);\n      ship.ops_station.add(holo_neptune);\n      let holo_uranus = screenplay.actors.Uranus.clone();\n      let uranus_scale = 0.02 / screenplay.actors.Uranus.surface_distance;\n      holo_uranus.scale.multiplyScalar(uranus_scale);\n      holo_uranus.position.multiplyScalar(distance_scale * 0.95).add(new THREE.Vector3(0, 0.07, 0));\n      holo_uranus.position.setZ(holo_uranus.position.z / 2);\n\n      holo_uranus.click = () => {\n        screenplay.actions.warp_to(screenplay.actors.Uranus);\n      };\n\n      screenplay.interactives.push(holo_uranus);\n      ship.ops_station.add(holo_uranus);\n      let holo_saturn = screenplay.actors.Saturn.clone();\n      let saturn_scale = 0.02 / screenplay.actors.Saturn.surface_distance;\n      holo_saturn.scale.multiplyScalar(saturn_scale);\n      holo_saturn.position.multiplyScalar(distance_scale * 1.5).add(new THREE.Vector3(0, 0.07, 0));\n      holo_saturn.position.setZ(holo_saturn.position.z / 2);\n\n      holo_saturn.click = () => {\n        screenplay.actions.warp_to(screenplay.actors.Saturn);\n      };\n\n      screenplay.interactives.push(holo_saturn);\n      ship.ops_station.add(holo_saturn);\n      let holo_jupiter = screenplay.actors.Jupiter.clone();\n      let jupiter_scale = 0.03 / screenplay.actors.Jupiter.surface_distance;\n      holo_jupiter.scale.multiplyScalar(jupiter_scale);\n      holo_jupiter.position.multiplyScalar(distance_scale * 1.9).add(new THREE.Vector3(0, 0.07, 0));\n      holo_jupiter.position.setZ(holo_jupiter.position.z / 2);\n\n      holo_jupiter.click = () => {\n        screenplay.actions.warp_to(screenplay.actors.Jupiter);\n      };\n\n      screenplay.interactives.push(holo_jupiter);\n      ship.ops_station.add(holo_jupiter);\n      let holo_mars = screenplay.actors.Mars.clone();\n      let mars_scale = 0.008 / screenplay.actors.Mars.surface_distance;\n      holo_mars.scale.multiplyScalar(mars_scale);\n      holo_mars.position.multiplyScalar(distance_scale * 4.5).add(new THREE.Vector3(0, 0.1, 0));\n\n      holo_mars.click = () => {\n        screenplay.actions.warp_to(screenplay.actors.Mars);\n      };\n\n      screenplay.interactives.push(holo_mars);\n      ship.ops_station.add(holo_mars);\n      let holo_earth = screenplay.actors.Earth.clone();\n      let earth_scale = 0.01 / screenplay.actors.Earth.surface_distance;\n      holo_earth.scale.multiplyScalar(earth_scale);\n      holo_earth.position.multiplyScalar(distance_scale * 5).add(new THREE.Vector3(0, 0.1, 0));\n\n      holo_earth.click = () => {\n        screenplay.actions.warp_to(screenplay.actors.Earth);\n      };\n\n      screenplay.interactives.push(holo_earth);\n      ship.ops_station.add(holo_earth);\n      let holo_moon = screenplay.actors.Moon.clone();\n      let moon_scale = 0.004 / screenplay.actors.Moon.surface_distance;\n      holo_moon.scale.multiplyScalar(moon_scale);\n      holo_moon.position.multiplyScalar(distance_scale * 5.75).add(new THREE.Vector3(0, 0.1, 0));\n\n      holo_moon.click = () => {\n        screenplay.actions.warp_to(screenplay.actors.Moon);\n      };\n\n      screenplay.interactives.push(holo_moon);\n      ship.ops_station.add(holo_moon);\n      let holo_venus = screenplay.actors.Venus.clone();\n      let venus_scale = 0.01 / screenplay.actors.Venus.surface_distance;\n      holo_venus.scale.multiplyScalar(venus_scale);\n      holo_venus.position.multiplyScalar(distance_scale * 5).add(new THREE.Vector3(0, 0.1, 0));\n\n      holo_venus.click = () => {\n        screenplay.actions.warp_to(screenplay.actors.Venus);\n      };\n\n      screenplay.interactives.push(holo_venus);\n      ship.ops_station.add(holo_venus);\n      let holo_mercury = screenplay.actors.Mercury.clone();\n      let mercury_scale = 0.008 / screenplay.actors.Mercury.surface_distance;\n      holo_mercury.scale.multiplyScalar(mercury_scale);\n      holo_mercury.position.multiplyScalar(distance_scale * 6).add(new THREE.Vector3(0, 0.1, 0));\n\n      holo_mercury.click = () => {\n        screenplay.actions.warp_to(screenplay.actors.Mercury);\n      };\n\n      screenplay.interactives.push(holo_mercury);\n      ship.ops_station.add(holo_mercury);\n      let holo_sun = screenplay.actors.Sun.clone();\n      let sun_scale = 0.04 / screenplay.actors.Sun.surface_distance;\n      holo_sun.scale.multiplyScalar(sun_scale);\n      holo_sun.position.multiplyScalar(distance_scale).add(new THREE.Vector3(0, 0.03, 0));\n\n      holo_sun.click = () => {\n        screenplay.actions.warp_to(screenplay.actors.Sun);\n      };\n\n      screenplay.interactives.push(holo_sun);\n      ship.ops_station.add(holo_sun); // TODO: Add Planet holograms as navigation controls inside ship.\n      //screenplay.actors.Neptune.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Neptune ) };\n      //screenplay.actors.Uranus.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Uranus ) };\n      //screenplay.actors.Saturn.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Saturn ) };\n      //screenplay.actors.Jupiter.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Jupiter ) };\n      //screenplay.actors.Mars.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Mars ) };\n      //screenplay.actors.Earth.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Earth ) };\n      //screenplay.actors.Moon.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Moon ) };\n      //screenplay.actors.Sun.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Sun ) };\n\n      scene.add(screenplay.actors.Neptune);\n      screenplay.interactives.push(screenplay.actors.Neptune);\n      screenplay.actives.push(screenplay.actors.Neptune);\n      scene.add(screenplay.actors.Uranus);\n      screenplay.interactives.push(screenplay.actors.Uranus);\n      screenplay.actives.push(screenplay.actors.Uranus); //scene.add( screenplay.actors.rings );\n\n      scene.add(screenplay.actors.Saturn);\n      screenplay.interactives.push(screenplay.actors.Saturn);\n      screenplay.actives.push(screenplay.actors.Saturn);\n      scene.add(screenplay.actors.Jupiter);\n      screenplay.interactives.push(screenplay.actors.Jupiter);\n      screenplay.actives.push(screenplay.actors.Jupiter);\n      scene.add(screenplay.actors.Mars);\n      screenplay.interactives.push(screenplay.actors.Mars);\n      screenplay.actives.push(screenplay.actors.Mars);\n      scene.add(screenplay.actors.Earth);\n      screenplay.interactives.push(screenplay.actors.Earth);\n      screenplay.actives.push(screenplay.actors.Earth);\n      scene.add(screenplay.actors.Moon);\n      screenplay.interactives.push(screenplay.actors.Moon);\n      screenplay.actives.push(screenplay.actors.Moon);\n      scene.add(screenplay.actors.Venus);\n      screenplay.interactives.push(screenplay.actors.Venus);\n      screenplay.actives.push(screenplay.actors.Venus);\n      scene.add(screenplay.actors.Mercury);\n      screenplay.interactives.push(screenplay.actors.Mercury);\n      screenplay.actives.push(screenplay.actors.Mercury);\n      scene.add(screenplay.actors.Sun);\n      screenplay.interactives.push(screenplay.actors.Sun);\n      screenplay.actives.push(screenplay.actors.Sun);\n      const gridHelper = new THREE.GridHelper(9000000000000, 10);\n      scene.add(gridHelper);\n      gridHelper.visible = false;\n    };\n\n    this.idle_on_splash = async screenplay => {\n      console.log('SceneDirections.idle_on_splash');\n    };\n\n    this.progress_splash = async screenplay => {\n      console.log('SceneDirections.progress_splash');\n    };\n\n    this.splash_failure = async screenplay => {\n      console.log('SceneDirections.splash_failure');\n    };\n\n    this.end_splash = async screenplay => {\n      console.log('SceneDirections.end_splash');\n    };\n\n    this.overlay_icons = async screenplay => {\n      console.log('SceneDirections.overlay_icons');\n    };\n\n    this.ready_for_neptune = async screenplay => {\n      console.log('SceneDirections.ready_for_neptune');\n    };\n\n    this.bezier_path_to_neptune = async screenplay => {\n      console.log('SceneDirections.bezier_path_to_neptune');\n    };\n\n    this.neptune_failure = async screenplay => {\n      console.log('SceneDirections.neptune_failure');\n    };\n\n    this.progress_neptune = async screenplay => {\n      console.log('SceneDirections.progress_neptune');\n    };\n\n    this.ready_for_uranus = async screenplay => {\n      console.log('SceneDirections.ready_for_uranus');\n    };\n\n    this.bezier_path_to_uranus = async screenplay => {\n      console.log('SceneDirections.bezier_path_to_uranus');\n    };\n\n    this.spin_in_place = async screenplay => {\n      console.log('SceneDirections.spin_in_place');\n    };\n\n    this.uranus_failure = async screenplay => {\n      console.log('SceneDirections.uranus_failure');\n    };\n\n    this.progress_uranus = async screenplay => {\n      console.log('SceneDirections.progress_uranus');\n    };\n\n    this.ready_for_saturn = async screenplay => {\n      console.log('SceneDirections.ready_for_saturn');\n    };\n\n    this.bezier_path_to_saturn = async screenplay => {\n      console.log('SceneDirections.bezier_path_to_saturn');\n    };\n\n    this.spin_with_orbit_ctrls = async screenplay => {\n      console.log('SceneDirections.spin_with_orbit_ctrls');\n    };\n\n    this.saturn_failure = async screenplay => {\n      console.log('SceneDirections.saturn_failure');\n    };\n\n    this.progress_saturn = async screenplay => {\n      console.log('SceneDirections.progress_saturn');\n    };\n\n    this.ready_for_jupiter = async screenplay => {\n      console.log('SceneDirections.ready_for_jupiter');\n    };\n\n    this.bezier_path_to_jupiter = async screenplay => {\n      console.log('SceneDirections.bezier_path_to_jupiter');\n    };\n\n    this.spin_with_orbit_ctrls = async screenplay => {\n      console.log('SceneDirections.spin_with_orbit_ctrls');\n    };\n\n    this.jupiter_failure = async screenplay => {\n      console.log('SceneDirections.jupiter_failure');\n    };\n\n    this.progress_jupiter = async screenplay => {\n      console.log('SceneDirections.progress_jupiter');\n    };\n\n    this.ready_for_mars = async screenplay => {\n      console.log('SceneDirections.ready_for_mars');\n    };\n\n    this.bezier_path_to_mars = async screenplay => {\n      console.log('SceneDirections.bezier_path_to_mars');\n    };\n\n    this.mars_failure = async screenplay => {\n      console.log('SceneDirections.mars_failure');\n    };\n\n    this.progress_mars = async screenplay => {\n      console.log('SceneDirections.progress_mars');\n    };\n\n    this.ready_for_earth = async screenplay => {\n      console.log('SceneDirections.ready_for_earth');\n    };\n\n    this.bezier_path_to_earth = async screenplay => {\n      console.log('SceneDirections.bezier_path_to_earth');\n    };\n\n    this.earth_failure = async screenplay => {\n      console.log('SceneDirections.earth_failure');\n    };\n\n    this.progress_earth = async screenplay => {\n      console.log('SceneDirections.progress_earth');\n    };\n\n    this.back_into_bridge = async screenplay => {\n      console.log('SceneDirections.back_into_bridge');\n    };\n\n    this.ready_for_ship = async screenplay => {\n      console.log('SceneDirections.ready_for_ship');\n    };\n\n    this.overlay_interface = async screenplay => {\n      console.log('SceneDirections.overlay_interface');\n    };\n\n    this.bridge_view = async screenplay => {\n      console.log('SceneDirections.bridge_view');\n    };\n\n    this.progress_ship = async screenplay => {\n      console.log('SceneDirections.progress_ship');\n    };\n\n    this.ship_failure = async screenplay => {\n      console.log('SceneDirections.ship_failure');\n    };\n\n    this.ready_for_anything = async screenplay => {\n      console.log('SceneDirections.ready_for_anything');\n    };\n  }\n\n}\n\nexport { SceneDirections };","map":{"version":3,"names":["THREE","SceneDirections","_SceneDirections","CSS3DObject","enter_splash","screenplay","console","log","scene","ui_scene","SetSceneBackground","lights","point_light","position","set","add","ambient_light","ship","actors","Ship","cameras","addVectors","Earth","orbital_vector","lookAt","warp_tunnel","children","forEach","warp_shell_cone","visible","actives","push","updateMatrixWorld","rotationMatrix","Matrix4","extractRotation","matrixWorld","up_now","Vector3","applyMatrix4","normalize","up","active_cam","sight_target","NavDots","getWorldPosition","updateProjectionMatrix","distance_scale","Neptune","surface_distance","model_scale","holo_neptune","clone","neptune_scale","scale","multiplyScalar","setZ","z","click","actions","warp_to","interactives","ops_station","holo_uranus","Uranus","uranus_scale","holo_saturn","Saturn","saturn_scale","holo_jupiter","Jupiter","jupiter_scale","holo_mars","Mars","mars_scale","holo_earth","earth_scale","holo_moon","Moon","moon_scale","holo_venus","Venus","venus_scale","holo_mercury","Mercury","mercury_scale","holo_sun","Sun","sun_scale","gridHelper","GridHelper","idle_on_splash","progress_splash","splash_failure","end_splash","overlay_icons","ready_for_neptune","bezier_path_to_neptune","neptune_failure","progress_neptune","ready_for_uranus","bezier_path_to_uranus","spin_in_place","uranus_failure","progress_uranus","ready_for_saturn","bezier_path_to_saturn","spin_with_orbit_ctrls","saturn_failure","progress_saturn","ready_for_jupiter","bezier_path_to_jupiter","jupiter_failure","progress_jupiter","ready_for_mars","bezier_path_to_mars","mars_failure","progress_mars","ready_for_earth","bezier_path_to_earth","earth_failure","progress_earth","back_into_bridge","ready_for_ship","overlay_interface","bridge_view","progress_ship","ship_failure","ready_for_anything"],"sources":["C:/Phox.Solutions/Workshop/GitHub-Repos/WeTheNetwork/scene-director/src/implementation/SceneDirections.js"],"sourcesContent":["import * as THREE from './lib/three.min.js';\r\nimport { SceneDirections as _SceneDirections } from './bin/ScreenDirector.js';\r\nimport { CSS3DObject } from './jsm/renderers/CSS3DRenderer.js';\r\n\r\nclass SceneDirections extends _SceneDirections {\r\n  enter_splash = async ( screenplay )=>{\r\n    console.log('SceneDirections.enter_splash');\r\n    let scene = screenplay.scene;\r\n    let ui_scene = screenplay.ui_scene;\r\n    screenplay.SetSceneBackground( );\r\n\r\n    screenplay.lights.point_light.position.set( 0, 0, 0 );\r\n    scene.add( screenplay.lights.point_light );\r\n    scene.add( screenplay.lights.ambient_light );\r\n\r\n    let ship = await screenplay.actors.Ship;\r\n    screenplay.cameras = ship.cameras;\r\n    ship.position.addVectors( screenplay.actors.Earth.position, screenplay.actors.Earth.orbital_vector );\r\n    ship.lookAt( screenplay.actors.Earth.position );\r\n\r\n    scene.add( ship );\r\n\r\n    scene.add( ship.warp_tunnel );\r\n    ship.warp_tunnel.children.forEach( ( warp_shell_cone )=>{\r\n      warp_shell_cone.visible = false;\r\n      screenplay.actives.push( warp_shell_cone );\r\n    });\r\n    ship.updateMatrixWorld( true );\r\n    var rotationMatrix = new THREE.Matrix4().extractRotation( ship.matrixWorld );\r\n    var up_now = new THREE.Vector3( 0, 1, 0 ).applyMatrix4( rotationMatrix ).normalize();\r\n    ship.up = up_now;\r\n    screenplay.active_cam.up = up_now;\r\n    screenplay.active_cam.position.addVectors( ship.position, new THREE.Vector3( 0,0,0 ) );\r\n    let sight_target = new THREE.Vector3();\r\n    ship.NavDots.sight_target.getWorldPosition( sight_target );\r\n    screenplay.active_cam.lookAt( sight_target );\r\n    screenplay.active_cam.updateProjectionMatrix();\r\n\r\n    let distance_scale = 0.1 / ( screenplay.actors.Neptune.surface_distance ) / 30000;\r\n    let model_scale = 0.01 / ( screenplay.actors.Neptune.surface_distance );\r\n\r\n    let holo_neptune = screenplay.actors.Neptune.clone( );\r\n    let neptune_scale = 0.02 / ( screenplay.actors.Neptune.surface_distance );\r\n    holo_neptune.scale.multiplyScalar( neptune_scale );\r\n    holo_neptune.position.multiplyScalar( distance_scale * 0.7).add( new THREE.Vector3( 0, 0.07, 0) );\r\n    holo_neptune.position.setZ( holo_neptune.position.z / 2 );\r\n    holo_neptune.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Neptune ) };\r\n    screenplay.interactives.push( holo_neptune );\r\n    ship.ops_station.add( holo_neptune );\r\n\r\n    let holo_uranus = screenplay.actors.Uranus.clone( );\r\n    let uranus_scale = 0.02 / ( screenplay.actors.Uranus.surface_distance );\r\n    holo_uranus.scale.multiplyScalar( uranus_scale );\r\n    holo_uranus.position.multiplyScalar( distance_scale * 0.95 ).add( new THREE.Vector3( 0, 0.07, 0) );\r\n    holo_uranus.position.setZ( holo_uranus.position.z / 2 );\r\n    holo_uranus.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Uranus ) };\r\n    screenplay.interactives.push( holo_uranus );\r\n    ship.ops_station.add( holo_uranus );\r\n\r\n    let holo_saturn = screenplay.actors.Saturn.clone( );\r\n    let saturn_scale = 0.02 / ( screenplay.actors.Saturn.surface_distance );\r\n    holo_saturn.scale.multiplyScalar( saturn_scale );\r\n    holo_saturn.position.multiplyScalar( distance_scale * 1.5 ).add( new THREE.Vector3( 0, 0.07, 0) );\r\n    holo_saturn.position.setZ( holo_saturn.position.z / 2 );\r\n    holo_saturn.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Saturn ) };\r\n    screenplay.interactives.push( holo_saturn );\r\n    ship.ops_station.add( holo_saturn );\r\n\r\n    let holo_jupiter = screenplay.actors.Jupiter.clone( );\r\n    let jupiter_scale = 0.03 / ( screenplay.actors.Jupiter.surface_distance );\r\n    holo_jupiter.scale.multiplyScalar( jupiter_scale );\r\n    holo_jupiter.position.multiplyScalar( distance_scale * 1.9 ).add( new THREE.Vector3( 0, 0.07, 0) );\r\n    holo_jupiter.position.setZ( holo_jupiter.position.z / 2 );\r\n    holo_jupiter.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Jupiter ) };\r\n    screenplay.interactives.push( holo_jupiter );\r\n    ship.ops_station.add( holo_jupiter );\r\n\r\n    let holo_mars = screenplay.actors.Mars.clone( );\r\n    let mars_scale = 0.008 / ( screenplay.actors.Mars.surface_distance );\r\n    holo_mars.scale.multiplyScalar( mars_scale );\r\n    holo_mars.position.multiplyScalar( distance_scale * 4.5 ).add( new THREE.Vector3( 0, 0.1, 0) );\r\n    holo_mars.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Mars ) };\r\n    screenplay.interactives.push( holo_mars );\r\n    ship.ops_station.add( holo_mars );\r\n\r\n    let holo_earth = screenplay.actors.Earth.clone( );\r\n    let earth_scale = 0.01 / ( screenplay.actors.Earth.surface_distance );\r\n    holo_earth.scale.multiplyScalar( earth_scale );\r\n    holo_earth.position.multiplyScalar( distance_scale * 5 ).add( new THREE.Vector3( 0, 0.1, 0) );\r\n    holo_earth.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Earth ) };\r\n    screenplay.interactives.push( holo_earth );\r\n    ship.ops_station.add( holo_earth );\r\n\r\n    let holo_moon = screenplay.actors.Moon.clone( );\r\n    let moon_scale = 0.004 / ( screenplay.actors.Moon.surface_distance );\r\n    holo_moon.scale.multiplyScalar( moon_scale );\r\n    holo_moon.position.multiplyScalar( distance_scale * 5.75 ).add( new THREE.Vector3( 0, 0.1, 0) );\r\n    holo_moon.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Moon ) };\r\n    screenplay.interactives.push( holo_moon );\r\n    ship.ops_station.add( holo_moon );\r\n\r\n    let holo_venus = screenplay.actors.Venus.clone( );\r\n    let venus_scale = 0.01 / ( screenplay.actors.Venus.surface_distance );\r\n    holo_venus.scale.multiplyScalar( venus_scale );\r\n    holo_venus.position.multiplyScalar( distance_scale * 5 ).add( new THREE.Vector3( 0, 0.1, 0) );\r\n    holo_venus.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Venus ) };\r\n    screenplay.interactives.push( holo_venus );\r\n    ship.ops_station.add( holo_venus );\r\n\r\n    let holo_mercury = screenplay.actors.Mercury.clone( );\r\n    let mercury_scale = 0.008 / ( screenplay.actors.Mercury.surface_distance );\r\n    holo_mercury.scale.multiplyScalar( mercury_scale );\r\n    holo_mercury.position.multiplyScalar( distance_scale * 6 ).add( new THREE.Vector3( 0, 0.1, 0) );\r\n    holo_mercury.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Mercury ) };\r\n    screenplay.interactives.push( holo_mercury );\r\n    ship.ops_station.add( holo_mercury );\r\n\r\n    let holo_sun = screenplay.actors.Sun.clone( );\r\n    let sun_scale = 0.04 / ( screenplay.actors.Sun.surface_distance );\r\n    holo_sun.scale.multiplyScalar( sun_scale );\r\n    holo_sun.position.multiplyScalar( distance_scale ).add( new THREE.Vector3( 0, 0.03, 0) );\r\n    holo_sun.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Sun ) };\r\n    screenplay.interactives.push( holo_sun );\r\n    ship.ops_station.add( holo_sun );\r\n\r\n    // TODO: Add Planet holograms as navigation controls inside ship.\r\n    //screenplay.actors.Neptune.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Neptune ) };\r\n    //screenplay.actors.Uranus.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Uranus ) };\r\n    //screenplay.actors.Saturn.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Saturn ) };\r\n    //screenplay.actors.Jupiter.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Jupiter ) };\r\n    //screenplay.actors.Mars.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Mars ) };\r\n    //screenplay.actors.Earth.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Earth ) };\r\n    //screenplay.actors.Moon.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Moon ) };\r\n    //screenplay.actors.Sun.click = ()=>{ screenplay.actions.warp_to( screenplay.actors.Sun ) };\r\n\r\n    scene.add( screenplay.actors.Neptune );\r\n    screenplay.interactives.push( screenplay.actors.Neptune );\r\n    screenplay.actives.push( screenplay.actors.Neptune );\r\n\r\n    scene.add( screenplay.actors.Uranus );\r\n    screenplay.interactives.push( screenplay.actors.Uranus );\r\n    screenplay.actives.push( screenplay.actors.Uranus );\r\n\r\n    //scene.add( screenplay.actors.rings );\r\n    scene.add( screenplay.actors.Saturn );\r\n    screenplay.interactives.push( screenplay.actors.Saturn );\r\n    screenplay.actives.push( screenplay.actors.Saturn );\r\n\r\n    scene.add( screenplay.actors.Jupiter );\r\n    screenplay.interactives.push( screenplay.actors.Jupiter );\r\n    screenplay.actives.push( screenplay.actors.Jupiter );\r\n\r\n    scene.add( screenplay.actors.Mars );\r\n    screenplay.interactives.push( screenplay.actors.Mars );\r\n    screenplay.actives.push( screenplay.actors.Mars );\r\n\r\n    scene.add( screenplay.actors.Earth );\r\n    screenplay.interactives.push( screenplay.actors.Earth );\r\n    screenplay.actives.push( screenplay.actors.Earth );\r\n\r\n    scene.add( screenplay.actors.Moon );\r\n    screenplay.interactives.push( screenplay.actors.Moon );\r\n    screenplay.actives.push( screenplay.actors.Moon );\r\n\r\n    scene.add( screenplay.actors.Venus );\r\n    screenplay.interactives.push( screenplay.actors.Venus );\r\n    screenplay.actives.push( screenplay.actors.Venus );\r\n\r\n    scene.add( screenplay.actors.Mercury );\r\n    screenplay.interactives.push( screenplay.actors.Mercury );\r\n    screenplay.actives.push( screenplay.actors.Mercury );\r\n\r\n    scene.add( screenplay.actors.Sun );\r\n    screenplay.interactives.push( screenplay.actors.Sun );\r\n    screenplay.actives.push( screenplay.actors.Sun );\r\n\r\n    const gridHelper = new THREE.GridHelper( 9000000000000, 10 );\r\n    scene.add( gridHelper );\r\n    gridHelper.visible = false;\r\n\r\n  };\r\n  idle_on_splash = async ( screenplay )=>{\r\n   console.log('SceneDirections.idle_on_splash');\r\n  };\r\n  progress_splash = async ( screenplay )=>{\r\n  console.log('SceneDirections.progress_splash');\r\n  };\r\n  splash_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.splash_failure');\r\n  };\r\n  end_splash = async ( screenplay )=>{\r\n   console.log('SceneDirections.end_splash');\r\n  };\r\n  overlay_icons = async ( screenplay )=>{\r\n   console.log('SceneDirections.overlay_icons');\r\n  };\r\n  ready_for_neptune = async ( screenplay )=>{\r\n   console.log('SceneDirections.ready_for_neptune');\r\n  };\r\n  bezier_path_to_neptune = async ( screenplay )=>{\r\n   console.log('SceneDirections.bezier_path_to_neptune');\r\n  };\r\n  neptune_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.neptune_failure');\r\n  };\r\n  progress_neptune = async ( screenplay )=>{\r\n   console.log('SceneDirections.progress_neptune');\r\n  };\r\n  ready_for_uranus = async ( screenplay )=>{\r\n   console.log('SceneDirections.ready_for_uranus');\r\n  };\r\n  bezier_path_to_uranus = async ( screenplay )=>{\r\n   console.log('SceneDirections.bezier_path_to_uranus');\r\n  };\r\n  spin_in_place = async ( screenplay )=>{\r\n   console.log('SceneDirections.spin_in_place');\r\n  };\r\n  uranus_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.uranus_failure');\r\n  };\r\n  progress_uranus = async ( screenplay )=>{\r\n   console.log('SceneDirections.progress_uranus');\r\n  };\r\n  ready_for_saturn = async ( screenplay )=>{\r\n   console.log('SceneDirections.ready_for_saturn');\r\n  };\r\n  bezier_path_to_saturn = async ( screenplay )=>{\r\n   console.log('SceneDirections.bezier_path_to_saturn');\r\n  };\r\n  spin_with_orbit_ctrls = async ( screenplay )=>{\r\n   console.log('SceneDirections.spin_with_orbit_ctrls');\r\n  };\r\n  saturn_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.saturn_failure');\r\n  };\r\n  progress_saturn = async ( screenplay )=>{\r\n   console.log('SceneDirections.progress_saturn');\r\n  };\r\n  ready_for_jupiter = async ( screenplay )=>{\r\n   console.log('SceneDirections.ready_for_jupiter');\r\n  };\r\n  bezier_path_to_jupiter = async ( screenplay )=>{\r\n   console.log('SceneDirections.bezier_path_to_jupiter');\r\n  };\r\n  spin_with_orbit_ctrls = async ( screenplay )=>{\r\n   console.log('SceneDirections.spin_with_orbit_ctrls');\r\n  };\r\n  jupiter_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.jupiter_failure');\r\n  };\r\n  progress_jupiter = async ( screenplay )=>{\r\n  console.log('SceneDirections.progress_jupiter');\r\n  };\r\n  ready_for_mars = async ( screenplay )=>{\r\n   console.log('SceneDirections.ready_for_mars');\r\n  };\r\n  bezier_path_to_mars = async ( screenplay )=>{\r\n   console.log('SceneDirections.bezier_path_to_mars');\r\n  };\r\n  mars_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.mars_failure');\r\n  };\r\n  progress_mars = async ( screenplay )=>{\r\n   console.log('SceneDirections.progress_mars');\r\n  };\r\n  ready_for_earth = async ( screenplay )=>{\r\n   console.log('SceneDirections.ready_for_earth');\r\n  };\r\n  bezier_path_to_earth = async ( screenplay )=>{\r\n   console.log('SceneDirections.bezier_path_to_earth');\r\n  };\r\n  earth_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.earth_failure');\r\n  };\r\n  progress_earth = async ( screenplay )=>{\r\n   console.log('SceneDirections.progress_earth');\r\n  };\r\n  back_into_bridge = async ( screenplay )=>{\r\n   console.log('SceneDirections.back_into_bridge');\r\n  };\r\n  ready_for_ship = async ( screenplay )=>{\r\n   console.log('SceneDirections.ready_for_ship');\r\n  };\r\n  overlay_interface = async ( screenplay )=>{\r\n   console.log('SceneDirections.overlay_interface');\r\n  };\r\n  bridge_view = async ( screenplay )=>{\r\n   console.log('SceneDirections.bridge_view');\r\n  };\r\n  progress_ship = async ( screenplay )=>{\r\n   console.log('SceneDirections.progress_ship');\r\n  };\r\n  ship_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.ship_failure');\r\n  };\r\n  ready_for_anything = async ( screenplay )=>{\r\n   console.log('SceneDirections.ready_for_anything');\r\n  }\r\n}\r\n\r\nexport { SceneDirections }\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,oBAAvB;AACA,SAASC,eAAe,IAAIC,gBAA5B,QAAoD,yBAApD;AACA,SAASC,WAAT,QAA4B,kCAA5B;;AAEA,MAAMF,eAAN,SAA8BC,gBAA9B,CAA+C;EAAA;IAAA;;IAAA,KAC7CE,YAD6C,GAC9B,MAAQC,UAAR,IAAsB;MACnCC,OAAO,CAACC,GAAR,CAAY,8BAAZ;MACA,IAAIC,KAAK,GAAGH,UAAU,CAACG,KAAvB;MACA,IAAIC,QAAQ,GAAGJ,UAAU,CAACI,QAA1B;MACAJ,UAAU,CAACK,kBAAX;MAEAL,UAAU,CAACM,MAAX,CAAkBC,WAAlB,CAA8BC,QAA9B,CAAuCC,GAAvC,CAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD;MACAN,KAAK,CAACO,GAAN,CAAWV,UAAU,CAACM,MAAX,CAAkBC,WAA7B;MACAJ,KAAK,CAACO,GAAN,CAAWV,UAAU,CAACM,MAAX,CAAkBK,aAA7B;MAEA,IAAIC,IAAI,GAAG,MAAMZ,UAAU,CAACa,MAAX,CAAkBC,IAAnC;MACAd,UAAU,CAACe,OAAX,GAAqBH,IAAI,CAACG,OAA1B;MACAH,IAAI,CAACJ,QAAL,CAAcQ,UAAd,CAA0BhB,UAAU,CAACa,MAAX,CAAkBI,KAAlB,CAAwBT,QAAlD,EAA4DR,UAAU,CAACa,MAAX,CAAkBI,KAAlB,CAAwBC,cAApF;MACAN,IAAI,CAACO,MAAL,CAAanB,UAAU,CAACa,MAAX,CAAkBI,KAAlB,CAAwBT,QAArC;MAEAL,KAAK,CAACO,GAAN,CAAWE,IAAX;MAEAT,KAAK,CAACO,GAAN,CAAWE,IAAI,CAACQ,WAAhB;MACAR,IAAI,CAACQ,WAAL,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAqCC,eAAF,IAAqB;QACtDA,eAAe,CAACC,OAAhB,GAA0B,KAA1B;QACAxB,UAAU,CAACyB,OAAX,CAAmBC,IAAnB,CAAyBH,eAAzB;MACD,CAHD;MAIAX,IAAI,CAACe,iBAAL,CAAwB,IAAxB;MACA,IAAIC,cAAc,GAAG,IAAIjC,KAAK,CAACkC,OAAV,GAAoBC,eAApB,CAAqClB,IAAI,CAACmB,WAA1C,CAArB;MACA,IAAIC,MAAM,GAAG,IAAIrC,KAAK,CAACsC,OAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA6BC,YAA7B,CAA2CN,cAA3C,EAA4DO,SAA5D,EAAb;MACAvB,IAAI,CAACwB,EAAL,GAAUJ,MAAV;MACAhC,UAAU,CAACqC,UAAX,CAAsBD,EAAtB,GAA2BJ,MAA3B;MACAhC,UAAU,CAACqC,UAAX,CAAsB7B,QAAtB,CAA+BQ,UAA/B,CAA2CJ,IAAI,CAACJ,QAAhD,EAA0D,IAAIb,KAAK,CAACsC,OAAV,CAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB,CAA1D;MACA,IAAIK,YAAY,GAAG,IAAI3C,KAAK,CAACsC,OAAV,EAAnB;MACArB,IAAI,CAAC2B,OAAL,CAAaD,YAAb,CAA0BE,gBAA1B,CAA4CF,YAA5C;MACAtC,UAAU,CAACqC,UAAX,CAAsBlB,MAAtB,CAA8BmB,YAA9B;MACAtC,UAAU,CAACqC,UAAX,CAAsBI,sBAAtB;MAEA,IAAIC,cAAc,GAAG,MAAQ1C,UAAU,CAACa,MAAX,CAAkB8B,OAAlB,CAA0BC,gBAAlC,GAAuD,KAA5E;MACA,IAAIC,WAAW,GAAG,OAAS7C,UAAU,CAACa,MAAX,CAAkB8B,OAAlB,CAA0BC,gBAArD;MAEA,IAAIE,YAAY,GAAG9C,UAAU,CAACa,MAAX,CAAkB8B,OAAlB,CAA0BI,KAA1B,EAAnB;MACA,IAAIC,aAAa,GAAG,OAAShD,UAAU,CAACa,MAAX,CAAkB8B,OAAlB,CAA0BC,gBAAvD;MACAE,YAAY,CAACG,KAAb,CAAmBC,cAAnB,CAAmCF,aAAnC;MACAF,YAAY,CAACtC,QAAb,CAAsB0C,cAAtB,CAAsCR,cAAc,GAAG,GAAvD,EAA4DhC,GAA5D,CAAiE,IAAIf,KAAK,CAACsC,OAAV,CAAmB,CAAnB,EAAsB,IAAtB,EAA4B,CAA5B,CAAjE;MACAa,YAAY,CAACtC,QAAb,CAAsB2C,IAAtB,CAA4BL,YAAY,CAACtC,QAAb,CAAsB4C,CAAtB,GAA0B,CAAtD;;MACAN,YAAY,CAACO,KAAb,GAAqB,MAAI;QAAErD,UAAU,CAACsD,OAAX,CAAmBC,OAAnB,CAA4BvD,UAAU,CAACa,MAAX,CAAkB8B,OAA9C;MAAyD,CAApF;;MACA3C,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8BoB,YAA9B;MACAlC,IAAI,CAAC6C,WAAL,CAAiB/C,GAAjB,CAAsBoC,YAAtB;MAEA,IAAIY,WAAW,GAAG1D,UAAU,CAACa,MAAX,CAAkB8C,MAAlB,CAAyBZ,KAAzB,EAAlB;MACA,IAAIa,YAAY,GAAG,OAAS5D,UAAU,CAACa,MAAX,CAAkB8C,MAAlB,CAAyBf,gBAArD;MACAc,WAAW,CAACT,KAAZ,CAAkBC,cAAlB,CAAkCU,YAAlC;MACAF,WAAW,CAAClD,QAAZ,CAAqB0C,cAArB,CAAqCR,cAAc,GAAG,IAAtD,EAA6DhC,GAA7D,CAAkE,IAAIf,KAAK,CAACsC,OAAV,CAAmB,CAAnB,EAAsB,IAAtB,EAA4B,CAA5B,CAAlE;MACAyB,WAAW,CAAClD,QAAZ,CAAqB2C,IAArB,CAA2BO,WAAW,CAAClD,QAAZ,CAAqB4C,CAArB,GAAyB,CAApD;;MACAM,WAAW,CAACL,KAAZ,GAAoB,MAAI;QAAErD,UAAU,CAACsD,OAAX,CAAmBC,OAAnB,CAA4BvD,UAAU,CAACa,MAAX,CAAkB8C,MAA9C;MAAwD,CAAlF;;MACA3D,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8BgC,WAA9B;MACA9C,IAAI,CAAC6C,WAAL,CAAiB/C,GAAjB,CAAsBgD,WAAtB;MAEA,IAAIG,WAAW,GAAG7D,UAAU,CAACa,MAAX,CAAkBiD,MAAlB,CAAyBf,KAAzB,EAAlB;MACA,IAAIgB,YAAY,GAAG,OAAS/D,UAAU,CAACa,MAAX,CAAkBiD,MAAlB,CAAyBlB,gBAArD;MACAiB,WAAW,CAACZ,KAAZ,CAAkBC,cAAlB,CAAkCa,YAAlC;MACAF,WAAW,CAACrD,QAAZ,CAAqB0C,cAArB,CAAqCR,cAAc,GAAG,GAAtD,EAA4DhC,GAA5D,CAAiE,IAAIf,KAAK,CAACsC,OAAV,CAAmB,CAAnB,EAAsB,IAAtB,EAA4B,CAA5B,CAAjE;MACA4B,WAAW,CAACrD,QAAZ,CAAqB2C,IAArB,CAA2BU,WAAW,CAACrD,QAAZ,CAAqB4C,CAArB,GAAyB,CAApD;;MACAS,WAAW,CAACR,KAAZ,GAAoB,MAAI;QAAErD,UAAU,CAACsD,OAAX,CAAmBC,OAAnB,CAA4BvD,UAAU,CAACa,MAAX,CAAkBiD,MAA9C;MAAwD,CAAlF;;MACA9D,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8BmC,WAA9B;MACAjD,IAAI,CAAC6C,WAAL,CAAiB/C,GAAjB,CAAsBmD,WAAtB;MAEA,IAAIG,YAAY,GAAGhE,UAAU,CAACa,MAAX,CAAkBoD,OAAlB,CAA0BlB,KAA1B,EAAnB;MACA,IAAImB,aAAa,GAAG,OAASlE,UAAU,CAACa,MAAX,CAAkBoD,OAAlB,CAA0BrB,gBAAvD;MACAoB,YAAY,CAACf,KAAb,CAAmBC,cAAnB,CAAmCgB,aAAnC;MACAF,YAAY,CAACxD,QAAb,CAAsB0C,cAAtB,CAAsCR,cAAc,GAAG,GAAvD,EAA6DhC,GAA7D,CAAkE,IAAIf,KAAK,CAACsC,OAAV,CAAmB,CAAnB,EAAsB,IAAtB,EAA4B,CAA5B,CAAlE;MACA+B,YAAY,CAACxD,QAAb,CAAsB2C,IAAtB,CAA4Ba,YAAY,CAACxD,QAAb,CAAsB4C,CAAtB,GAA0B,CAAtD;;MACAY,YAAY,CAACX,KAAb,GAAqB,MAAI;QAAErD,UAAU,CAACsD,OAAX,CAAmBC,OAAnB,CAA4BvD,UAAU,CAACa,MAAX,CAAkBoD,OAA9C;MAAyD,CAApF;;MACAjE,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8BsC,YAA9B;MACApD,IAAI,CAAC6C,WAAL,CAAiB/C,GAAjB,CAAsBsD,YAAtB;MAEA,IAAIG,SAAS,GAAGnE,UAAU,CAACa,MAAX,CAAkBuD,IAAlB,CAAuBrB,KAAvB,EAAhB;MACA,IAAIsB,UAAU,GAAG,QAAUrE,UAAU,CAACa,MAAX,CAAkBuD,IAAlB,CAAuBxB,gBAAlD;MACAuB,SAAS,CAAClB,KAAV,CAAgBC,cAAhB,CAAgCmB,UAAhC;MACAF,SAAS,CAAC3D,QAAV,CAAmB0C,cAAnB,CAAmCR,cAAc,GAAG,GAApD,EAA0DhC,GAA1D,CAA+D,IAAIf,KAAK,CAACsC,OAAV,CAAmB,CAAnB,EAAsB,GAAtB,EAA2B,CAA3B,CAA/D;;MACAkC,SAAS,CAACd,KAAV,GAAkB,MAAI;QAAErD,UAAU,CAACsD,OAAX,CAAmBC,OAAnB,CAA4BvD,UAAU,CAACa,MAAX,CAAkBuD,IAA9C;MAAsD,CAA9E;;MACApE,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8ByC,SAA9B;MACAvD,IAAI,CAAC6C,WAAL,CAAiB/C,GAAjB,CAAsByD,SAAtB;MAEA,IAAIG,UAAU,GAAGtE,UAAU,CAACa,MAAX,CAAkBI,KAAlB,CAAwB8B,KAAxB,EAAjB;MACA,IAAIwB,WAAW,GAAG,OAASvE,UAAU,CAACa,MAAX,CAAkBI,KAAlB,CAAwB2B,gBAAnD;MACA0B,UAAU,CAACrB,KAAX,CAAiBC,cAAjB,CAAiCqB,WAAjC;MACAD,UAAU,CAAC9D,QAAX,CAAoB0C,cAApB,CAAoCR,cAAc,GAAG,CAArD,EAAyDhC,GAAzD,CAA8D,IAAIf,KAAK,CAACsC,OAAV,CAAmB,CAAnB,EAAsB,GAAtB,EAA2B,CAA3B,CAA9D;;MACAqC,UAAU,CAACjB,KAAX,GAAmB,MAAI;QAAErD,UAAU,CAACsD,OAAX,CAAmBC,OAAnB,CAA4BvD,UAAU,CAACa,MAAX,CAAkBI,KAA9C;MAAuD,CAAhF;;MACAjB,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8B4C,UAA9B;MACA1D,IAAI,CAAC6C,WAAL,CAAiB/C,GAAjB,CAAsB4D,UAAtB;MAEA,IAAIE,SAAS,GAAGxE,UAAU,CAACa,MAAX,CAAkB4D,IAAlB,CAAuB1B,KAAvB,EAAhB;MACA,IAAI2B,UAAU,GAAG,QAAU1E,UAAU,CAACa,MAAX,CAAkB4D,IAAlB,CAAuB7B,gBAAlD;MACA4B,SAAS,CAACvB,KAAV,CAAgBC,cAAhB,CAAgCwB,UAAhC;MACAF,SAAS,CAAChE,QAAV,CAAmB0C,cAAnB,CAAmCR,cAAc,GAAG,IAApD,EAA2DhC,GAA3D,CAAgE,IAAIf,KAAK,CAACsC,OAAV,CAAmB,CAAnB,EAAsB,GAAtB,EAA2B,CAA3B,CAAhE;;MACAuC,SAAS,CAACnB,KAAV,GAAkB,MAAI;QAAErD,UAAU,CAACsD,OAAX,CAAmBC,OAAnB,CAA4BvD,UAAU,CAACa,MAAX,CAAkB4D,IAA9C;MAAsD,CAA9E;;MACAzE,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8B8C,SAA9B;MACA5D,IAAI,CAAC6C,WAAL,CAAiB/C,GAAjB,CAAsB8D,SAAtB;MAEA,IAAIG,UAAU,GAAG3E,UAAU,CAACa,MAAX,CAAkB+D,KAAlB,CAAwB7B,KAAxB,EAAjB;MACA,IAAI8B,WAAW,GAAG,OAAS7E,UAAU,CAACa,MAAX,CAAkB+D,KAAlB,CAAwBhC,gBAAnD;MACA+B,UAAU,CAAC1B,KAAX,CAAiBC,cAAjB,CAAiC2B,WAAjC;MACAF,UAAU,CAACnE,QAAX,CAAoB0C,cAApB,CAAoCR,cAAc,GAAG,CAArD,EAAyDhC,GAAzD,CAA8D,IAAIf,KAAK,CAACsC,OAAV,CAAmB,CAAnB,EAAsB,GAAtB,EAA2B,CAA3B,CAA9D;;MACA0C,UAAU,CAACtB,KAAX,GAAmB,MAAI;QAAErD,UAAU,CAACsD,OAAX,CAAmBC,OAAnB,CAA4BvD,UAAU,CAACa,MAAX,CAAkB+D,KAA9C;MAAuD,CAAhF;;MACA5E,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8BiD,UAA9B;MACA/D,IAAI,CAAC6C,WAAL,CAAiB/C,GAAjB,CAAsBiE,UAAtB;MAEA,IAAIG,YAAY,GAAG9E,UAAU,CAACa,MAAX,CAAkBkE,OAAlB,CAA0BhC,KAA1B,EAAnB;MACA,IAAIiC,aAAa,GAAG,QAAUhF,UAAU,CAACa,MAAX,CAAkBkE,OAAlB,CAA0BnC,gBAAxD;MACAkC,YAAY,CAAC7B,KAAb,CAAmBC,cAAnB,CAAmC8B,aAAnC;MACAF,YAAY,CAACtE,QAAb,CAAsB0C,cAAtB,CAAsCR,cAAc,GAAG,CAAvD,EAA2DhC,GAA3D,CAAgE,IAAIf,KAAK,CAACsC,OAAV,CAAmB,CAAnB,EAAsB,GAAtB,EAA2B,CAA3B,CAAhE;;MACA6C,YAAY,CAACzB,KAAb,GAAqB,MAAI;QAAErD,UAAU,CAACsD,OAAX,CAAmBC,OAAnB,CAA4BvD,UAAU,CAACa,MAAX,CAAkBkE,OAA9C;MAAyD,CAApF;;MACA/E,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8BoD,YAA9B;MACAlE,IAAI,CAAC6C,WAAL,CAAiB/C,GAAjB,CAAsBoE,YAAtB;MAEA,IAAIG,QAAQ,GAAGjF,UAAU,CAACa,MAAX,CAAkBqE,GAAlB,CAAsBnC,KAAtB,EAAf;MACA,IAAIoC,SAAS,GAAG,OAASnF,UAAU,CAACa,MAAX,CAAkBqE,GAAlB,CAAsBtC,gBAA/C;MACAqC,QAAQ,CAAChC,KAAT,CAAeC,cAAf,CAA+BiC,SAA/B;MACAF,QAAQ,CAACzE,QAAT,CAAkB0C,cAAlB,CAAkCR,cAAlC,EAAmDhC,GAAnD,CAAwD,IAAIf,KAAK,CAACsC,OAAV,CAAmB,CAAnB,EAAsB,IAAtB,EAA4B,CAA5B,CAAxD;;MACAgD,QAAQ,CAAC5B,KAAT,GAAiB,MAAI;QAAErD,UAAU,CAACsD,OAAX,CAAmBC,OAAnB,CAA4BvD,UAAU,CAACa,MAAX,CAAkBqE,GAA9C;MAAqD,CAA5E;;MACAlF,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8BuD,QAA9B;MACArE,IAAI,CAAC6C,WAAL,CAAiB/C,GAAjB,CAAsBuE,QAAtB,EAtHmC,CAwHnC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA9E,KAAK,CAACO,GAAN,CAAWV,UAAU,CAACa,MAAX,CAAkB8B,OAA7B;MACA3C,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8B1B,UAAU,CAACa,MAAX,CAAkB8B,OAAhD;MACA3C,UAAU,CAACyB,OAAX,CAAmBC,IAAnB,CAAyB1B,UAAU,CAACa,MAAX,CAAkB8B,OAA3C;MAEAxC,KAAK,CAACO,GAAN,CAAWV,UAAU,CAACa,MAAX,CAAkB8C,MAA7B;MACA3D,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8B1B,UAAU,CAACa,MAAX,CAAkB8C,MAAhD;MACA3D,UAAU,CAACyB,OAAX,CAAmBC,IAAnB,CAAyB1B,UAAU,CAACa,MAAX,CAAkB8C,MAA3C,EAxImC,CA0InC;;MACAxD,KAAK,CAACO,GAAN,CAAWV,UAAU,CAACa,MAAX,CAAkBiD,MAA7B;MACA9D,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8B1B,UAAU,CAACa,MAAX,CAAkBiD,MAAhD;MACA9D,UAAU,CAACyB,OAAX,CAAmBC,IAAnB,CAAyB1B,UAAU,CAACa,MAAX,CAAkBiD,MAA3C;MAEA3D,KAAK,CAACO,GAAN,CAAWV,UAAU,CAACa,MAAX,CAAkBoD,OAA7B;MACAjE,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8B1B,UAAU,CAACa,MAAX,CAAkBoD,OAAhD;MACAjE,UAAU,CAACyB,OAAX,CAAmBC,IAAnB,CAAyB1B,UAAU,CAACa,MAAX,CAAkBoD,OAA3C;MAEA9D,KAAK,CAACO,GAAN,CAAWV,UAAU,CAACa,MAAX,CAAkBuD,IAA7B;MACApE,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8B1B,UAAU,CAACa,MAAX,CAAkBuD,IAAhD;MACApE,UAAU,CAACyB,OAAX,CAAmBC,IAAnB,CAAyB1B,UAAU,CAACa,MAAX,CAAkBuD,IAA3C;MAEAjE,KAAK,CAACO,GAAN,CAAWV,UAAU,CAACa,MAAX,CAAkBI,KAA7B;MACAjB,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8B1B,UAAU,CAACa,MAAX,CAAkBI,KAAhD;MACAjB,UAAU,CAACyB,OAAX,CAAmBC,IAAnB,CAAyB1B,UAAU,CAACa,MAAX,CAAkBI,KAA3C;MAEAd,KAAK,CAACO,GAAN,CAAWV,UAAU,CAACa,MAAX,CAAkB4D,IAA7B;MACAzE,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8B1B,UAAU,CAACa,MAAX,CAAkB4D,IAAhD;MACAzE,UAAU,CAACyB,OAAX,CAAmBC,IAAnB,CAAyB1B,UAAU,CAACa,MAAX,CAAkB4D,IAA3C;MAEAtE,KAAK,CAACO,GAAN,CAAWV,UAAU,CAACa,MAAX,CAAkB+D,KAA7B;MACA5E,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8B1B,UAAU,CAACa,MAAX,CAAkB+D,KAAhD;MACA5E,UAAU,CAACyB,OAAX,CAAmBC,IAAnB,CAAyB1B,UAAU,CAACa,MAAX,CAAkB+D,KAA3C;MAEAzE,KAAK,CAACO,GAAN,CAAWV,UAAU,CAACa,MAAX,CAAkBkE,OAA7B;MACA/E,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8B1B,UAAU,CAACa,MAAX,CAAkBkE,OAAhD;MACA/E,UAAU,CAACyB,OAAX,CAAmBC,IAAnB,CAAyB1B,UAAU,CAACa,MAAX,CAAkBkE,OAA3C;MAEA5E,KAAK,CAACO,GAAN,CAAWV,UAAU,CAACa,MAAX,CAAkBqE,GAA7B;MACAlF,UAAU,CAACwD,YAAX,CAAwB9B,IAAxB,CAA8B1B,UAAU,CAACa,MAAX,CAAkBqE,GAAhD;MACAlF,UAAU,CAACyB,OAAX,CAAmBC,IAAnB,CAAyB1B,UAAU,CAACa,MAAX,CAAkBqE,GAA3C;MAEA,MAAME,UAAU,GAAG,IAAIzF,KAAK,CAAC0F,UAAV,CAAsB,aAAtB,EAAqC,EAArC,CAAnB;MACAlF,KAAK,CAACO,GAAN,CAAW0E,UAAX;MACAA,UAAU,CAAC5D,OAAX,GAAqB,KAArB;IAED,CAhL4C;;IAAA,KAiL7C8D,cAjL6C,GAiL5B,MAAQtF,UAAR,IAAsB;MACtCC,OAAO,CAACC,GAAR,CAAY,gCAAZ;IACA,CAnL4C;;IAAA,KAoL7CqF,eApL6C,GAoL3B,MAAQvF,UAAR,IAAsB;MACxCC,OAAO,CAACC,GAAR,CAAY,iCAAZ;IACC,CAtL4C;;IAAA,KAuL7CsF,cAvL6C,GAuL5B,MAAQxF,UAAR,IAAsB;MACtCC,OAAO,CAACC,GAAR,CAAY,gCAAZ;IACA,CAzL4C;;IAAA,KA0L7CuF,UA1L6C,GA0LhC,MAAQzF,UAAR,IAAsB;MAClCC,OAAO,CAACC,GAAR,CAAY,4BAAZ;IACA,CA5L4C;;IAAA,KA6L7CwF,aA7L6C,GA6L7B,MAAQ1F,UAAR,IAAsB;MACrCC,OAAO,CAACC,GAAR,CAAY,+BAAZ;IACA,CA/L4C;;IAAA,KAgM7CyF,iBAhM6C,GAgMzB,MAAQ3F,UAAR,IAAsB;MACzCC,OAAO,CAACC,GAAR,CAAY,mCAAZ;IACA,CAlM4C;;IAAA,KAmM7C0F,sBAnM6C,GAmMpB,MAAQ5F,UAAR,IAAsB;MAC9CC,OAAO,CAACC,GAAR,CAAY,wCAAZ;IACA,CArM4C;;IAAA,KAsM7C2F,eAtM6C,GAsM3B,MAAQ7F,UAAR,IAAsB;MACvCC,OAAO,CAACC,GAAR,CAAY,iCAAZ;IACA,CAxM4C;;IAAA,KAyM7C4F,gBAzM6C,GAyM1B,MAAQ9F,UAAR,IAAsB;MACxCC,OAAO,CAACC,GAAR,CAAY,kCAAZ;IACA,CA3M4C;;IAAA,KA4M7C6F,gBA5M6C,GA4M1B,MAAQ/F,UAAR,IAAsB;MACxCC,OAAO,CAACC,GAAR,CAAY,kCAAZ;IACA,CA9M4C;;IAAA,KA+M7C8F,qBA/M6C,GA+MrB,MAAQhG,UAAR,IAAsB;MAC7CC,OAAO,CAACC,GAAR,CAAY,uCAAZ;IACA,CAjN4C;;IAAA,KAkN7C+F,aAlN6C,GAkN7B,MAAQjG,UAAR,IAAsB;MACrCC,OAAO,CAACC,GAAR,CAAY,+BAAZ;IACA,CApN4C;;IAAA,KAqN7CgG,cArN6C,GAqN5B,MAAQlG,UAAR,IAAsB;MACtCC,OAAO,CAACC,GAAR,CAAY,gCAAZ;IACA,CAvN4C;;IAAA,KAwN7CiG,eAxN6C,GAwN3B,MAAQnG,UAAR,IAAsB;MACvCC,OAAO,CAACC,GAAR,CAAY,iCAAZ;IACA,CA1N4C;;IAAA,KA2N7CkG,gBA3N6C,GA2N1B,MAAQpG,UAAR,IAAsB;MACxCC,OAAO,CAACC,GAAR,CAAY,kCAAZ;IACA,CA7N4C;;IAAA,KA8N7CmG,qBA9N6C,GA8NrB,MAAQrG,UAAR,IAAsB;MAC7CC,OAAO,CAACC,GAAR,CAAY,uCAAZ;IACA,CAhO4C;;IAAA,KAiO7CoG,qBAjO6C,GAiOrB,MAAQtG,UAAR,IAAsB;MAC7CC,OAAO,CAACC,GAAR,CAAY,uCAAZ;IACA,CAnO4C;;IAAA,KAoO7CqG,cApO6C,GAoO5B,MAAQvG,UAAR,IAAsB;MACtCC,OAAO,CAACC,GAAR,CAAY,gCAAZ;IACA,CAtO4C;;IAAA,KAuO7CsG,eAvO6C,GAuO3B,MAAQxG,UAAR,IAAsB;MACvCC,OAAO,CAACC,GAAR,CAAY,iCAAZ;IACA,CAzO4C;;IAAA,KA0O7CuG,iBA1O6C,GA0OzB,MAAQzG,UAAR,IAAsB;MACzCC,OAAO,CAACC,GAAR,CAAY,mCAAZ;IACA,CA5O4C;;IAAA,KA6O7CwG,sBA7O6C,GA6OpB,MAAQ1G,UAAR,IAAsB;MAC9CC,OAAO,CAACC,GAAR,CAAY,wCAAZ;IACA,CA/O4C;;IAAA,KAgP7CoG,qBAhP6C,GAgPrB,MAAQtG,UAAR,IAAsB;MAC7CC,OAAO,CAACC,GAAR,CAAY,uCAAZ;IACA,CAlP4C;;IAAA,KAmP7CyG,eAnP6C,GAmP3B,MAAQ3G,UAAR,IAAsB;MACvCC,OAAO,CAACC,GAAR,CAAY,iCAAZ;IACA,CArP4C;;IAAA,KAsP7C0G,gBAtP6C,GAsP1B,MAAQ5G,UAAR,IAAsB;MACzCC,OAAO,CAACC,GAAR,CAAY,kCAAZ;IACC,CAxP4C;;IAAA,KAyP7C2G,cAzP6C,GAyP5B,MAAQ7G,UAAR,IAAsB;MACtCC,OAAO,CAACC,GAAR,CAAY,gCAAZ;IACA,CA3P4C;;IAAA,KA4P7C4G,mBA5P6C,GA4PvB,MAAQ9G,UAAR,IAAsB;MAC3CC,OAAO,CAACC,GAAR,CAAY,qCAAZ;IACA,CA9P4C;;IAAA,KA+P7C6G,YA/P6C,GA+P9B,MAAQ/G,UAAR,IAAsB;MACpCC,OAAO,CAACC,GAAR,CAAY,8BAAZ;IACA,CAjQ4C;;IAAA,KAkQ7C8G,aAlQ6C,GAkQ7B,MAAQhH,UAAR,IAAsB;MACrCC,OAAO,CAACC,GAAR,CAAY,+BAAZ;IACA,CApQ4C;;IAAA,KAqQ7C+G,eArQ6C,GAqQ3B,MAAQjH,UAAR,IAAsB;MACvCC,OAAO,CAACC,GAAR,CAAY,iCAAZ;IACA,CAvQ4C;;IAAA,KAwQ7CgH,oBAxQ6C,GAwQtB,MAAQlH,UAAR,IAAsB;MAC5CC,OAAO,CAACC,GAAR,CAAY,sCAAZ;IACA,CA1Q4C;;IAAA,KA2Q7CiH,aA3Q6C,GA2Q7B,MAAQnH,UAAR,IAAsB;MACrCC,OAAO,CAACC,GAAR,CAAY,+BAAZ;IACA,CA7Q4C;;IAAA,KA8Q7CkH,cA9Q6C,GA8Q5B,MAAQpH,UAAR,IAAsB;MACtCC,OAAO,CAACC,GAAR,CAAY,gCAAZ;IACA,CAhR4C;;IAAA,KAiR7CmH,gBAjR6C,GAiR1B,MAAQrH,UAAR,IAAsB;MACxCC,OAAO,CAACC,GAAR,CAAY,kCAAZ;IACA,CAnR4C;;IAAA,KAoR7CoH,cApR6C,GAoR5B,MAAQtH,UAAR,IAAsB;MACtCC,OAAO,CAACC,GAAR,CAAY,gCAAZ;IACA,CAtR4C;;IAAA,KAuR7CqH,iBAvR6C,GAuRzB,MAAQvH,UAAR,IAAsB;MACzCC,OAAO,CAACC,GAAR,CAAY,mCAAZ;IACA,CAzR4C;;IAAA,KA0R7CsH,WA1R6C,GA0R/B,MAAQxH,UAAR,IAAsB;MACnCC,OAAO,CAACC,GAAR,CAAY,6BAAZ;IACA,CA5R4C;;IAAA,KA6R7CuH,aA7R6C,GA6R7B,MAAQzH,UAAR,IAAsB;MACrCC,OAAO,CAACC,GAAR,CAAY,+BAAZ;IACA,CA/R4C;;IAAA,KAgS7CwH,YAhS6C,GAgS9B,MAAQ1H,UAAR,IAAsB;MACpCC,OAAO,CAACC,GAAR,CAAY,8BAAZ;IACA,CAlS4C;;IAAA,KAmS7CyH,kBAnS6C,GAmSxB,MAAQ3H,UAAR,IAAsB;MAC1CC,OAAO,CAACC,GAAR,CAAY,oCAAZ;IACA,CArS4C;EAAA;;AAAA;;AAwS/C,SAASN,eAAT"},"metadata":{},"sourceType":"module"}