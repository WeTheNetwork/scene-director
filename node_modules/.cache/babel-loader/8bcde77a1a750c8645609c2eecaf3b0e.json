{"ast":null,"code":"// ScreenDirector Reference\nimport { SceneDirections as _SceneDirections } from '../bin/ScreenDirector.js'; // Support Library Reference\n\nimport * as THREE from 'three';\nimport { CSS3DObject } from '../lib/CSS3DRenderer.js'; // ScreenDirections Implementation\n\n/*\r\n    This is where the THREE.js code is run.\r\n    New characters need to render to the stage?  Do that here.\r\n    When using lazy Getters for those models, they wont load prematurely.\r\n    Note: Be sure to override the lazy Getter with the initialized model ( See Screenplay.js for an example ).\r\n*/\n\nclass SceneDirections extends _SceneDirections {\n  constructor() {\n    super(...arguments);\n\n    this.enter_splash = async screenplay => {\n      console.log('SceneDirections.enter_splash');\n      screenplay.scene.add(screenplay.lights.ambient_light);\n    };\n\n    this.idle_on_splash = async screenplay => {\n      console.log('SceneDirections.idle_on_splash');\n      screenplay.scene.add(await screenplay.actors.jumping_cube);\n      screenplay.actors.jumping_cube.position.copy(new THREE.Vector3(10, 10, 10));\n      jumping_cube.mixer.clipAction(keyAnimationClip).play();\n      screenplay.active_cam.lookAt(screenplay.actors.jumping_cube.position);\n    };\n\n    this.progress_splash = async screenplay => {\n      console.log('SceneDirections.progress_splash');\n    };\n\n    this.splash_failure = async screenplay => {\n      console.log('SceneDirections.splash_failure');\n    };\n\n    this.end_splash = async screenplay => {\n      console.log('SceneDirections.end_splash');\n    };\n\n    this.enter_scene_01 = async screenplay => {\n      console.log('SceneDirections.enter_scene_01');\n    };\n\n    this.idle_on_scene_01 = async screenplay => {\n      console.log('SceneDirections.idle_on_scene_01');\n    };\n\n    this.progress_scene_01 = async screenplay => {\n      console.log('SceneDirections.progress_scene_01');\n    };\n\n    this.scene_01_failure = async screenplay => {\n      console.log('SceneDirections.scene_01_failure');\n    };\n\n    this.end_scene_01 = async screenplay => {\n      console.log('SceneDirections.end_scene_01');\n    };\n\n    this.enter_scene_02 = async screenplay => {\n      console.log('SceneDirections.enter_scene_02');\n    };\n\n    this.idle_on_scene_02 = async screenplay => {\n      console.log('SceneDirections.idle_on_scene_02');\n    };\n\n    this.progress_scene_02 = async screenplay => {\n      console.log('SceneDirections.progress_scene_02');\n    };\n\n    this.scene_02_failure = async screenplay => {\n      console.log('SceneDirections.scene_02_failure');\n    };\n\n    this.end_scene_02 = async screenplay => {\n      console.log('SceneDirections.end_scene_02');\n    };\n\n    this.enter_scene_03 = async screenplay => {\n      console.log('SceneDirections.enter_scene_03');\n    };\n\n    this.idle_on_scene_03 = async screenplay => {\n      console.log('SceneDirections.idle_on_scene_03');\n    };\n\n    this.progress_scene_03 = async screenplay => {\n      console.log('SceneDirections.progress_scene_03');\n    };\n\n    this.scene_03_failure = async screenplay => {\n      console.log('SceneDirections.scene_03_failure');\n    };\n\n    this.end_scene_03 = async screenplay => {\n      console.log('SceneDirections.end_scene_03');\n      screenplay.scene.background = new THREE.Color(0x444444);\n    };\n  }\n\n}\n\nexport { SceneDirections };","map":{"version":3,"names":["SceneDirections","_SceneDirections","THREE","CSS3DObject","enter_splash","screenplay","console","log","scene","add","lights","ambient_light","idle_on_splash","actors","jumping_cube","position","copy","Vector3","mixer","clipAction","keyAnimationClip","play","active_cam","lookAt","progress_splash","splash_failure","end_splash","enter_scene_01","idle_on_scene_01","progress_scene_01","scene_01_failure","end_scene_01","enter_scene_02","idle_on_scene_02","progress_scene_02","scene_02_failure","end_scene_02","enter_scene_03","idle_on_scene_03","progress_scene_03","scene_03_failure","end_scene_03","background","Color"],"sources":["C:/Phox.Solutions/Workshop/GitHub-Repos/WeTheNetwork/scene-director/src/implementation/SceneDirections.js"],"sourcesContent":["// ScreenDirector Reference\r\nimport { SceneDirections as _SceneDirections } from '../bin/ScreenDirector.js';\r\n// Support Library Reference\r\nimport * as THREE from 'three';\r\nimport { CSS3DObject } from '../lib/CSS3DRenderer.js';\r\n\r\n// ScreenDirections Implementation\r\n/*\r\n    This is where the THREE.js code is run.\r\n    New characters need to render to the stage?  Do that here.\r\n    When using lazy Getters for those models, they wont load prematurely.\r\n    Note: Be sure to override the lazy Getter with the initialized model ( See Screenplay.js for an example ).\r\n*/\r\nclass SceneDirections extends _SceneDirections {\r\n  enter_splash = async ( screenplay )=>{\r\n    console.log('SceneDirections.enter_splash');\r\n    screenplay.scene.add( screenplay.lights.ambient_light );\r\n  };\r\n  idle_on_splash = async ( screenplay )=>{\r\n   console.log('SceneDirections.idle_on_splash');\r\n   screenplay.scene.add( await screenplay.actors.jumping_cube );\r\n   screenplay.actors.jumping_cube.position.copy( new THREE.Vector3( 10, 10, 10 ));\r\n   jumping_cube.mixer.clipAction( keyAnimationClip ).play();\r\n   screenplay.active_cam.lookAt( screenplay.actors.jumping_cube.position )\r\n  };\r\n  progress_splash = async ( screenplay )=>{\r\n  console.log('SceneDirections.progress_splash');\r\n  };\r\n  splash_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.splash_failure');\r\n  };\r\n  end_splash = async ( screenplay )=>{\r\n   console.log('SceneDirections.end_splash');\r\n  };\r\n  enter_scene_01 = async ( screenplay )=>{\r\n   console.log('SceneDirections.enter_scene_01');\r\n  };\r\n  idle_on_scene_01 = async ( screenplay )=>{\r\n   console.log('SceneDirections.idle_on_scene_01');\r\n  };\r\n  progress_scene_01 = async ( screenplay )=>{\r\n   console.log('SceneDirections.progress_scene_01');\r\n  };\r\n  scene_01_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.scene_01_failure');\r\n  };\r\n  end_scene_01 = async ( screenplay )=>{\r\n   console.log('SceneDirections.end_scene_01');\r\n  };\r\n  enter_scene_02 = async ( screenplay )=>{\r\n   console.log('SceneDirections.enter_scene_02');\r\n  };\r\n  idle_on_scene_02 = async ( screenplay )=>{\r\n   console.log('SceneDirections.idle_on_scene_02');\r\n  };\r\n  progress_scene_02 = async ( screenplay )=>{\r\n   console.log('SceneDirections.progress_scene_02');\r\n  };\r\n  scene_02_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.scene_02_failure');\r\n  };\r\n  end_scene_02 = async ( screenplay )=>{\r\n   console.log('SceneDirections.end_scene_02');\r\n  };\r\n  enter_scene_03 = async ( screenplay )=>{\r\n   console.log('SceneDirections.enter_scene_03');\r\n  };\r\n  idle_on_scene_03 = async ( screenplay )=>{\r\n   console.log('SceneDirections.idle_on_scene_03');\r\n  };\r\n  progress_scene_03 = async ( screenplay )=>{\r\n   console.log('SceneDirections.progress_scene_03');\r\n  };\r\n  scene_03_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.scene_03_failure');\r\n  };\r\n  end_scene_03 = async ( screenplay )=>{\r\n   console.log('SceneDirections.end_scene_03');\r\n   screenplay.scene.background = new THREE.Color( 0x444444 );\r\n  };\r\n}\r\n\r\nexport { SceneDirections }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}