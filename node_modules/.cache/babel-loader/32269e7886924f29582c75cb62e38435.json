{"ast":null,"code":"// ScreenDirector Reference\nimport { SceneDirections as _SceneDirections } from '../bin/ScreenDirector.js'; // Support Library Reference\n\nimport * as THREE from 'three';\nimport { CSS3DObject } from '../lib/CSS3DRenderer.js'; // ScreenDirections Implementation\n\n/*\r\n    This is where the THREE.js code is run.\r\n    New characters need to render to the stage?  Do that here.\r\n    When using lazy Getters for those models, they wont load prematurely.\r\n    Note: Be sure to override the lazy Getter with the initialized model ( See Screenplay.js for an example ).\r\n*/\n\nclass SceneDirections extends _SceneDirections {\n  constructor() {\n    super(...arguments);\n\n    this.enter_splash = async (screenplay, dictum_name, next_emit, director) => {\n      console.log('SceneDirections.enter_splash');\n      screenplay.scene.add(screenplay.lights.ambient_light);\n      director.emit(next_emit, dictum_name);\n    };\n\n    this.idle_on_splash = async (screenplay, dictum_name, next_emit, director) => {\n      console.log('SceneDirections.idle_on_splash');\n      director.emit(next_emit, dictum_name);\n    };\n\n    this.progress_splash = async screenplay => {\n      console.log('SceneDirections.progress_splash');\n    };\n\n    this.splash_failure = async screenplay => {\n      console.log('SceneDirections.splash_failure');\n    };\n\n    this.end_splash = async (screenplay, dictum_name, next_emit, director) => {\n      console.log('SceneDirections.end_splash');\n      director.emit(next_emit, dictum_name);\n    };\n\n    this.enter_scene_01 = async (screenplay, dictum_name, next_emit, director) => {\n      console.log('SceneDirections.enter_scene_01');\n      director.emit(next_emit, dictum_name);\n    };\n\n    this.idle_on_scene_01 = async (screenplay, dictum_name, next_emit, director) => {\n      console.log('SceneDirections.idle_on_scene_01');\n      director.emit(next_emit, dictum_name);\n    };\n\n    this.progress_scene_01 = async screenplay => {\n      console.log('SceneDirections.progress_scene_01');\n    };\n\n    this.scene_01_failure = async screenplay => {\n      console.log('SceneDirections.scene_01_failure');\n    };\n\n    this.end_scene_01 = async (screenplay, dictum_name, next_emit, director) => {\n      console.log('SceneDirections.end_scene_01');\n      director.emit(next_emit, dictum_name);\n    };\n\n    this.enter_scene_02 = async (screenplay, dictum_name, next_emit, director) => {\n      console.log('SceneDirections.enter_scene_02');\n      director.emit(next_emit, dictum_name);\n    };\n\n    this.idle_on_scene_02 = async (screenplay, dictum_name, next_emit, director) => {\n      console.log('SceneDirections.idle_on_scene_02');\n      director.emit(next_emit, dictum_name);\n    };\n\n    this.progress_scene_02 = async screenplay => {\n      console.log('SceneDirections.progress_scene_02');\n    };\n\n    this.scene_02_failure = async screenplay => {\n      console.log('SceneDirections.scene_02_failure');\n    };\n\n    this.end_scene_02 = async (screenplay, dictum_name, next_emit, director) => {\n      console.log('SceneDirections.end_scene_02');\n      director.emit(next_emit, dictum_name);\n    };\n\n    this.enter_scene_03 = async (screenplay, dictum_name, next_emit, director) => {\n      console.log('SceneDirections.enter_scene_03');\n      director.emit(next_emit, dictum_name);\n    };\n\n    this.idle_on_scene_03 = async (screenplay, dictum_name, next_emit, director) => {\n      console.log('SceneDirections.idle_on_scene_03');\n      director.emit(next_emit, dictum_name);\n    };\n\n    this.progress_scene_03 = async screenplay => {\n      console.log('SceneDirections.progress_scene_03');\n    };\n\n    this.scene_03_failure = async screenplay => {\n      console.log('SceneDirections.scene_03_failure');\n    };\n\n    this.end_scene_03 = async (screenplay, dictum_name, next_emit, director) => {\n      console.log('SceneDirections.end_scene_03');\n      screenplay.scene.background = new THREE.Color(0x444444);\n      screenplay.scene.add(await screenplay.actors.jumping_cube);\n      screenplay.actors.jumping_cube.position.copy(new THREE.Vector3(10, 10, 10));\n      var keyAnimationClip = THREE.AnimationClip.findByName(screenplay.actors.jumping_cube.animations, 'CubeAction.Jump');\n      var action = screenplay.actors.jumping_cube.mixer.clipAction(keyAnimationClip);\n      action.play();\n      screenplay.active_cam.lookAt(screenplay.actors.jumping_cube.position);\n      director.emit(next_emit, dictum_name);\n    };\n  }\n\n}\n\nexport { SceneDirections };","map":{"version":3,"names":["SceneDirections","_SceneDirections","THREE","CSS3DObject","enter_splash","screenplay","dictum_name","next_emit","director","console","log","scene","add","lights","ambient_light","emit","idle_on_splash","progress_splash","splash_failure","end_splash","enter_scene_01","idle_on_scene_01","progress_scene_01","scene_01_failure","end_scene_01","enter_scene_02","idle_on_scene_02","progress_scene_02","scene_02_failure","end_scene_02","enter_scene_03","idle_on_scene_03","progress_scene_03","scene_03_failure","end_scene_03","background","Color","actors","jumping_cube","position","copy","Vector3","keyAnimationClip","AnimationClip","findByName","animations","action","mixer","clipAction","play","active_cam","lookAt"],"sources":["C:/Phox.Solutions/Workshop/GitHub-Repos/WeTheNetwork/scene-director/src/implementation/SceneDirections.js"],"sourcesContent":["// ScreenDirector Reference\r\nimport { SceneDirections as _SceneDirections } from '../bin/ScreenDirector.js';\r\n// Support Library Reference\r\nimport * as THREE from 'three';\r\nimport { CSS3DObject } from '../lib/CSS3DRenderer.js';\r\n\r\n// ScreenDirections Implementation\r\n/*\r\n    This is where the THREE.js code is run.\r\n    New characters need to render to the stage?  Do that here.\r\n    When using lazy Getters for those models, they wont load prematurely.\r\n    Note: Be sure to override the lazy Getter with the initialized model ( See Screenplay.js for an example ).\r\n*/\r\nclass SceneDirections extends _SceneDirections {\r\n  enter_splash = async ( screenplay, dictum_name, next_emit, director )=>{\r\n    console.log('SceneDirections.enter_splash');\r\n    screenplay.scene.add( screenplay.lights.ambient_light );\r\n    director.emit( next_emit, dictum_name );\r\n  };\r\n  idle_on_splash = async ( screenplay, dictum_name, next_emit, director )=>{\r\n   console.log('SceneDirections.idle_on_splash');\r\n\r\n   director.emit( next_emit, dictum_name );\r\n  };\r\n  progress_splash = async ( screenplay )=>{\r\n  console.log('SceneDirections.progress_splash');\r\n\r\n\r\n  };\r\n  splash_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.splash_failure');\r\n\r\n  };\r\n  end_splash = async ( screenplay, dictum_name, next_emit, director )=>{\r\n   console.log('SceneDirections.end_splash');\r\n\r\n   director.emit( next_emit, dictum_name );\r\n  };\r\n  enter_scene_01 = async ( screenplay, dictum_name, next_emit, director )=>{\r\n   console.log('SceneDirections.enter_scene_01');\r\n\r\n   director.emit( next_emit, dictum_name );\r\n  };\r\n  idle_on_scene_01 = async ( screenplay, dictum_name, next_emit, director )=>{\r\n   console.log('SceneDirections.idle_on_scene_01');\r\n\r\n   director.emit( next_emit, dictum_name );\r\n  };\r\n  progress_scene_01 = async ( screenplay )=>{\r\n   console.log('SceneDirections.progress_scene_01');\r\n\r\n  };\r\n  scene_01_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.scene_01_failure');\r\n\r\n  };\r\n  end_scene_01 = async ( screenplay, dictum_name, next_emit, director )=>{\r\n   console.log('SceneDirections.end_scene_01');\r\n\r\n   director.emit( next_emit, dictum_name );\r\n  };\r\n  enter_scene_02 = async ( screenplay, dictum_name, next_emit, director )=>{\r\n   console.log('SceneDirections.enter_scene_02');\r\n\r\n   director.emit( next_emit, dictum_name );\r\n  };\r\n  idle_on_scene_02 = async ( screenplay, dictum_name, next_emit, director )=>{\r\n   console.log('SceneDirections.idle_on_scene_02');\r\n\r\n   director.emit( next_emit, dictum_name );\r\n  };\r\n  progress_scene_02 = async ( screenplay )=>{\r\n   console.log('SceneDirections.progress_scene_02');\r\n\r\n  };\r\n  scene_02_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.scene_02_failure');\r\n\r\n  };\r\n  end_scene_02 = async ( screenplay, dictum_name, next_emit, director )=>{\r\n   console.log('SceneDirections.end_scene_02');\r\n\r\n   director.emit( next_emit, dictum_name );\r\n  };\r\n  enter_scene_03 = async ( screenplay, dictum_name, next_emit, director )=>{\r\n   console.log('SceneDirections.enter_scene_03');\r\n\r\n   director.emit( next_emit, dictum_name );\r\n  };\r\n  idle_on_scene_03 = async ( screenplay, dictum_name, next_emit, director )=>{\r\n   console.log('SceneDirections.idle_on_scene_03');\r\n\r\n   director.emit( next_emit, dictum_name );\r\n  };\r\n  progress_scene_03 = async ( screenplay )=>{\r\n   console.log('SceneDirections.progress_scene_03');\r\n\r\n  };\r\n  scene_03_failure = async ( screenplay )=>{\r\n   console.log('SceneDirections.scene_03_failure');\r\n\r\n  };\r\n  end_scene_03 = async ( screenplay, dictum_name, next_emit, director )=>{\r\n   console.log('SceneDirections.end_scene_03');\r\n   screenplay.scene.background = new THREE.Color( 0x444444 );\r\n   screenplay.scene.add( await screenplay.actors.jumping_cube );\r\n   screenplay.actors.jumping_cube.position.copy( new THREE.Vector3( 10, 10, 10 ));\r\n   var keyAnimationClip = THREE.AnimationClip.findByName( screenplay.actors.jumping_cube.animations, 'CubeAction.Jump' );\r\n   var action = screenplay.actors.jumping_cube.mixer.clipAction( keyAnimationClip );\r\n   action.play();\r\n   screenplay.active_cam.lookAt( screenplay.actors.jumping_cube.position );\r\n\r\n   director.emit( next_emit, dictum_name );\r\n  };\r\n}\r\n\r\nexport { SceneDirections }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}