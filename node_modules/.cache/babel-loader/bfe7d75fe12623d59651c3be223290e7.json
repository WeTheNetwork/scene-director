{"ast":null,"code":"/**\n * lil-gui\n * https://lil-gui.georgealways.com\n * @version 0.16.1\n * @author George Michael Brower\n * @license MIT\n */\n\n/**\n * Base class for all controllers.\n */\nclass Controller {\n  constructor(parent, object, property, className) {\n    let widgetTag = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'div';\n\n    /**\n     * The GUI that contains this controller.\n     * @type {GUI}\n     */\n    this.parent = parent;\n    /**\n     * The object this controller will modify.\n     * @type {object}\n     */\n\n    this.object = object;\n    /**\n     * The name of the property to control.\n     * @type {string}\n     */\n\n    this.property = property;\n    /**\n     * Used to determine if the controller is disabled.\n     * Use `controller.disable( true|false )` to modify this value\n     * @type {boolean}\n     */\n\n    this._disabled = false;\n    /**\n     * The value of `object[ property ]` when the controller was created.\n     * @type {any}\n     */\n\n    this.initialValue = this.getValue();\n    /**\n     * The outermost container DOM element for this controller.\n     * @type {HTMLElement}\n     */\n\n    this.domElement = document.createElement('div');\n    this.domElement.classList.add('controller');\n    this.domElement.classList.add(className);\n    /**\n     * The DOM element that contains the controller's name.\n     * @type {HTMLElement}\n     */\n\n    this.$name = document.createElement('div');\n    this.$name.classList.add('name');\n    Controller.nextNameID = Controller.nextNameID || 0;\n    this.$name.id = `lil-gui-name-${++Controller.nextNameID}`;\n    /**\n     * The DOM element that contains the controller's \"widget\" (which differs by controller type).\n     * @type {HTMLElement}\n     */\n\n    this.$widget = document.createElement(widgetTag);\n    this.$widget.classList.add('widget');\n    /**\n     * The DOM element that receives the disabled attribute when using disable()\n     * @type {HTMLElement}\n     */\n\n    this.$disable = this.$widget;\n    this.domElement.appendChild(this.$name);\n    this.domElement.appendChild(this.$widget);\n    this.parent.children.push(this);\n    this.parent.controllers.push(this);\n    this.parent.$children.appendChild(this.domElement);\n    this._listenCallback = this._listenCallback.bind(this);\n    this.name(property);\n  }\n  /**\n   * Sets the name of the controller and its label in the GUI.\n   * @param {string} name\n   * @returns {this}\n   */\n\n\n  name(name) {\n    /**\n     * The controller's name. Use `controller.name( 'Name' )` to modify this value.\n     * @type {string}\n     */\n    this._name = name;\n    this.$name.innerHTML = name;\n    return this;\n  }\n  /**\n   * Pass a function to be called whenever the value is modified by this controller.\n   * The function receives the new value as its first parameter. The value of `this` will be the\n   * controller.\n   * @param {Function} callback\n   * @returns {this}\n   * @example\n   * const controller = gui.add( object, 'property' );\n   *\n   * controller.onChange( function( v ) {\n   * \tconsole.log( 'The value is now ' + v );\n   * \tconsole.assert( this === controller );\n   * } );\n   */\n\n\n  onChange(callback) {\n    /**\n     * Used to access the function bound to `onChange` events. Don't modify this value directly.\n     * Use the `controller.onChange( callback )` method instead.\n     * @type {Function}\n     */\n    this._onChange = callback;\n    return this;\n  }\n  /**\n   * Calls the onChange methods of this controller and its parent GUI.\n   * @protected\n   */\n\n\n  _callOnChange() {\n    this.parent._callOnChange(this);\n\n    if (this._onChange !== undefined) {\n      this._onChange.call(this, this.getValue());\n    }\n\n    this._changed = true;\n  }\n  /**\n   * Pass a function to be called after this controller has been modified and loses focus.\n   * @param {Function} callback\n   * @returns {this}\n   * @example\n   * const controller = gui.add( object, 'property' );\n   *\n   * controller.onFinishChange( function( v ) {\n   * \tconsole.log( 'Changes complete: ' + v );\n   * \tconsole.assert( this === controller );\n   * } );\n   */\n\n\n  onFinishChange(callback) {\n    /**\n     * Used to access the function bound to `onFinishChange` events. Don't modify this value\n     * directly. Use the `controller.onFinishChange( callback )` method instead.\n     * @type {Function}\n     */\n    this._onFinishChange = callback;\n    return this;\n  }\n  /**\n   * Should be called by Controller when its widgets lose focus.\n   * @protected\n   */\n\n\n  _callOnFinishChange() {\n    if (this._changed) {\n      this.parent._callOnFinishChange(this);\n\n      if (this._onFinishChange !== undefined) {\n        this._onFinishChange.call(this, this.getValue());\n      }\n    }\n\n    this._changed = false;\n  }\n  /**\n   * Sets the controller back to its initial value.\n   * @returns {this}\n   */\n\n\n  reset() {\n    this.setValue(this.initialValue);\n\n    this._callOnFinishChange();\n\n    return this;\n  }\n  /**\n   * Enables this controller.\n   * @param {boolean} enabled\n   * @returns {this}\n   * @example\n   * controller.enable();\n   * controller.enable( false ); // disable\n   * controller.enable( controller._disabled ); // toggle\n   */\n\n\n  enable() {\n    let enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return this.disable(!enabled);\n  }\n  /**\n   * Disables this controller.\n   * @param {boolean} disabled\n   * @returns {this}\n   * @example\n   * controller.disable();\n   * controller.disable( false ); // enable\n   * controller.disable( !controller._disabled ); // toggle\n   */\n\n\n  disable() {\n    let disabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (disabled === this._disabled) return this;\n    this._disabled = disabled;\n    this.domElement.classList.toggle('disabled', disabled);\n    this.$disable.toggleAttribute('disabled', disabled);\n    return this;\n  }\n  /**\n   * Destroys this controller and replaces it with a new option controller. Provided as a more\n   * descriptive syntax for `gui.add`, but primarily for compatibility with dat.gui.\n   *\n   * Use caution, as this method will destroy old references to this controller. It will also\n   * change controller order if called out of sequence, moving the option controller to the end of\n   * the GUI.\n   * @example\n   * // safe usage\n   *\n   * gui.add( object1, 'property' ).options( [ 'a', 'b', 'c' ] );\n   * gui.add( object2, 'property' );\n   *\n   * // danger\n   *\n   * const c = gui.add( object1, 'property' );\n   * gui.add( object2, 'property' );\n   *\n   * c.options( [ 'a', 'b', 'c' ] );\n   * // controller is now at the end of the GUI even though it was added first\n   *\n   * assert( c.parent.children.indexOf( c ) === -1 )\n   * // c references a controller that no longer exists\n   *\n   * @param {object|Array} options\n   * @returns {Controller}\n   */\n\n\n  options(options) {\n    const controller = this.parent.add(this.object, this.property, options);\n    controller.name(this._name);\n    this.destroy();\n    return controller;\n  }\n  /**\n   * Sets the minimum value. Only works on number controllers.\n   * @param {number} min\n   * @returns {this}\n   */\n\n\n  min(min) {\n    return this;\n  }\n  /**\n   * Sets the maximum value. Only works on number controllers.\n   * @param {number} max\n   * @returns {this}\n   */\n\n\n  max(max) {\n    return this;\n  }\n  /**\n   * Sets the step. Only works on number controllers.\n   * @param {number} step\n   * @returns {this}\n   */\n\n\n  step(step) {\n    return this;\n  }\n  /**\n   * Calls `updateDisplay()` every animation frame. Pass `false` to stop listening.\n   * @param {boolean} listen\n   * @returns {this}\n   */\n\n\n  listen() {\n    let listen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    /**\n     * Used to determine if the controller is currently listening. Don't modify this value\n     * directly. Use the `controller.listen( true|false )` method instead.\n     * @type {boolean}\n     */\n    this._listening = listen;\n\n    if (this._listenCallbackID !== undefined) {\n      cancelAnimationFrame(this._listenCallbackID);\n      this._listenCallbackID = undefined;\n    }\n\n    if (this._listening) {\n      this._listenCallback();\n    }\n\n    return this;\n  }\n\n  _listenCallback() {\n    this._listenCallbackID = requestAnimationFrame(this._listenCallback); // To prevent framerate loss, make sure the value has changed before updating the display.\n    // Note: save() is used here instead of getValue() only because of ColorController. The !== operator\n    // won't work for color objects or arrays, but ColorController.save() always returns a string.\n\n    const curValue = this.save();\n\n    if (curValue !== this._listenPrevValue) {\n      this.updateDisplay();\n    }\n\n    this._listenPrevValue = curValue;\n  }\n  /**\n   * Returns `object[ property ]`.\n   * @returns {any}\n   */\n\n\n  getValue() {\n    return this.object[this.property];\n  }\n  /**\n   * Sets the value of `object[ property ]`, invokes any `onChange` handlers and updates the display.\n   * @param {any} value\n   * @returns {this}\n   */\n\n\n  setValue(value) {\n    this.object[this.property] = value;\n\n    this._callOnChange();\n\n    this.updateDisplay();\n    return this;\n  }\n  /**\n   * Updates the display to keep it in sync with the current value. Useful for updating your\n   * controllers when their values have been modified outside of the GUI.\n   * @returns {this}\n   */\n\n\n  updateDisplay() {\n    return this;\n  }\n\n  load(value) {\n    this.setValue(value);\n\n    this._callOnFinishChange();\n\n    return this;\n  }\n\n  save() {\n    return this.getValue();\n  }\n  /**\n   * Destroys this controller and removes it from the parent GUI.\n   */\n\n\n  destroy() {\n    this.listen(false);\n    this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    this.parent.controllers.splice(this.parent.controllers.indexOf(this), 1);\n    this.parent.$children.removeChild(this.domElement);\n  }\n\n}\n\nclass BooleanController extends Controller {\n  constructor(parent, object, property) {\n    super(parent, object, property, 'boolean', 'label');\n    this.$input = document.createElement('input');\n    this.$input.setAttribute('type', 'checkbox');\n    this.$input.setAttribute('aria-labelledby', this.$name.id);\n    this.$widget.appendChild(this.$input);\n    this.$input.addEventListener('change', () => {\n      this.setValue(this.$input.checked);\n\n      this._callOnFinishChange();\n    });\n    this.$disable = this.$input;\n    this.updateDisplay();\n  }\n\n  updateDisplay() {\n    this.$input.checked = this.getValue();\n    return this;\n  }\n\n}\n\nfunction normalizeColorString(string) {\n  let match, result;\n\n  if (match = string.match(/(#|0x)?([a-f0-9]{6})/i)) {\n    result = match[2];\n  } else if (match = string.match(/rgb\\(\\s*(\\d*)\\s*,\\s*(\\d*)\\s*,\\s*(\\d*)\\s*\\)/)) {\n    result = parseInt(match[1]).toString(16).padStart(2, 0) + parseInt(match[2]).toString(16).padStart(2, 0) + parseInt(match[3]).toString(16).padStart(2, 0);\n  } else if (match = string.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i)) {\n    result = match[1] + match[1] + match[2] + match[2] + match[3] + match[3];\n  }\n\n  if (result) {\n    return '#' + result;\n  }\n\n  return false;\n}\n\nconst STRING = {\n  isPrimitive: true,\n  match: v => typeof v === 'string',\n  fromHexString: normalizeColorString,\n  toHexString: normalizeColorString\n};\nconst INT = {\n  isPrimitive: true,\n  match: v => typeof v === 'number',\n  fromHexString: string => parseInt(string.substring(1), 16),\n  toHexString: value => '#' + value.toString(16).padStart(6, 0)\n};\nconst ARRAY = {\n  isPrimitive: false,\n  match: Array.isArray,\n\n  fromHexString(string, target) {\n    let rgbScale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    const int = INT.fromHexString(string);\n    target[0] = (int >> 16 & 255) / 255 * rgbScale;\n    target[1] = (int >> 8 & 255) / 255 * rgbScale;\n    target[2] = (int & 255) / 255 * rgbScale;\n  },\n\n  toHexString(_ref) {\n    let [r, g, b] = _ref;\n    let rgbScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    rgbScale = 255 / rgbScale;\n    const int = r * rgbScale << 16 ^ g * rgbScale << 8 ^ b * rgbScale << 0;\n    return INT.toHexString(int);\n  }\n\n};\nconst OBJECT = {\n  isPrimitive: false,\n  match: v => Object(v) === v,\n\n  fromHexString(string, target) {\n    let rgbScale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    const int = INT.fromHexString(string);\n    target.r = (int >> 16 & 255) / 255 * rgbScale;\n    target.g = (int >> 8 & 255) / 255 * rgbScale;\n    target.b = (int & 255) / 255 * rgbScale;\n  },\n\n  toHexString(_ref2) {\n    let {\n      r,\n      g,\n      b\n    } = _ref2;\n    let rgbScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    rgbScale = 255 / rgbScale;\n    const int = r * rgbScale << 16 ^ g * rgbScale << 8 ^ b * rgbScale << 0;\n    return INT.toHexString(int);\n  }\n\n};\nconst FORMATS = [STRING, INT, ARRAY, OBJECT];\n\nfunction getColorFormat(value) {\n  return FORMATS.find(format => format.match(value));\n}\n\nclass ColorController extends Controller {\n  constructor(parent, object, property, rgbScale) {\n    super(parent, object, property, 'color');\n    this.$input = document.createElement('input');\n    this.$input.setAttribute('type', 'color');\n    this.$input.setAttribute('tabindex', -1);\n    this.$input.setAttribute('aria-labelledby', this.$name.id);\n    this.$text = document.createElement('input');\n    this.$text.setAttribute('type', 'text');\n    this.$text.setAttribute('spellcheck', 'false');\n    this.$text.setAttribute('aria-labelledby', this.$name.id);\n    this.$display = document.createElement('div');\n    this.$display.classList.add('display');\n    this.$display.appendChild(this.$input);\n    this.$widget.appendChild(this.$display);\n    this.$widget.appendChild(this.$text);\n    this._format = getColorFormat(this.initialValue);\n    this._rgbScale = rgbScale;\n    this._initialValueHexString = this.save();\n    this._textFocused = false;\n    this.$input.addEventListener('input', () => {\n      this._setValueFromHexString(this.$input.value);\n    });\n    this.$input.addEventListener('blur', () => {\n      this._callOnFinishChange();\n    });\n    this.$text.addEventListener('input', () => {\n      const tryParse = normalizeColorString(this.$text.value);\n\n      if (tryParse) {\n        this._setValueFromHexString(tryParse);\n      }\n    });\n    this.$text.addEventListener('focus', () => {\n      this._textFocused = true;\n      this.$text.select();\n    });\n    this.$text.addEventListener('blur', () => {\n      this._textFocused = false;\n      this.updateDisplay();\n\n      this._callOnFinishChange();\n    });\n    this.$disable = this.$text;\n    this.updateDisplay();\n  }\n\n  reset() {\n    this._setValueFromHexString(this._initialValueHexString);\n\n    return this;\n  }\n\n  _setValueFromHexString(value) {\n    if (this._format.isPrimitive) {\n      const newValue = this._format.fromHexString(value);\n\n      this.setValue(newValue);\n    } else {\n      this._format.fromHexString(value, this.getValue(), this._rgbScale);\n\n      this._callOnChange();\n\n      this.updateDisplay();\n    }\n  }\n\n  save() {\n    return this._format.toHexString(this.getValue(), this._rgbScale);\n  }\n\n  load(value) {\n    this._setValueFromHexString(value);\n\n    this._callOnFinishChange();\n\n    return this;\n  }\n\n  updateDisplay() {\n    this.$input.value = this._format.toHexString(this.getValue(), this._rgbScale);\n\n    if (!this._textFocused) {\n      this.$text.value = this.$input.value.substring(1);\n    }\n\n    this.$display.style.backgroundColor = this.$input.value;\n    return this;\n  }\n\n}\n\nclass FunctionController extends Controller {\n  constructor(parent, object, property) {\n    super(parent, object, property, 'function'); // Buttons are the only case where widget contains name\n\n    this.$button = document.createElement('button');\n    this.$button.appendChild(this.$name);\n    this.$widget.appendChild(this.$button);\n    this.$button.addEventListener('click', e => {\n      e.preventDefault();\n      this.getValue().call(this.object);\n    }); // enables :active pseudo class on mobile\n\n    this.$button.addEventListener('touchstart', () => {}, {\n      passive: true\n    });\n    this.$disable = this.$button;\n  }\n\n}\n\nclass NumberController extends Controller {\n  constructor(parent, object, property, min, max, step) {\n    super(parent, object, property, 'number');\n\n    this._initInput();\n\n    this.min(min);\n    this.max(max);\n    const stepExplicit = step !== undefined;\n    this.step(stepExplicit ? step : this._getImplicitStep(), stepExplicit);\n    this.updateDisplay();\n  }\n\n  min(min) {\n    this._min = min;\n\n    this._onUpdateMinMax();\n\n    return this;\n  }\n\n  max(max) {\n    this._max = max;\n\n    this._onUpdateMinMax();\n\n    return this;\n  }\n\n  step(step) {\n    let explicit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this._step = step;\n    this._stepExplicit = explicit;\n    return this;\n  }\n\n  updateDisplay() {\n    const value = this.getValue();\n\n    if (this._hasSlider) {\n      let percent = (value - this._min) / (this._max - this._min);\n      percent = Math.max(0, Math.min(percent, 1));\n      this.$fill.style.width = percent * 100 + '%';\n    }\n\n    if (!this._inputFocused) {\n      this.$input.value = value;\n    }\n\n    return this;\n  }\n\n  _initInput() {\n    this.$input = document.createElement('input');\n    this.$input.setAttribute('type', 'number');\n    this.$input.setAttribute('step', 'any');\n    this.$input.setAttribute('aria-labelledby', this.$name.id);\n    this.$widget.appendChild(this.$input);\n    this.$disable = this.$input;\n\n    const onInput = () => {\n      const value = parseFloat(this.$input.value);\n      if (isNaN(value)) return;\n      this.setValue(this._clamp(value));\n    }; // Keys & mouse wheel\n    // ---------------------------------------------------------------------\n\n\n    const increment = delta => {\n      const value = parseFloat(this.$input.value);\n      if (isNaN(value)) return;\n\n      this._snapClampSetValue(value + delta); // Force the input to updateDisplay when it's focused\n\n\n      this.$input.value = this.getValue();\n    };\n\n    const onKeyDown = e => {\n      if (e.code === 'Enter') {\n        this.$input.blur();\n      }\n\n      if (e.code === 'ArrowUp') {\n        e.preventDefault();\n        increment(this._step * this._arrowKeyMultiplier(e));\n      }\n\n      if (e.code === 'ArrowDown') {\n        e.preventDefault();\n        increment(this._step * this._arrowKeyMultiplier(e) * -1);\n      }\n    };\n\n    const onWheel = e => {\n      if (this._inputFocused) {\n        e.preventDefault();\n        increment(this._step * this._normalizeMouseWheel(e));\n      }\n    }; // Vertical drag\n    // ---------------------------------------------------------------------\n\n\n    let testingForVerticalDrag = false,\n        initClientX,\n        initClientY,\n        prevClientY,\n        initValue,\n        dragDelta; // Once the mouse is dragged more than DRAG_THRESH px on any axis, we decide\n    // on the user's intent: horizontal means highlight, vertical means drag.\n\n    const DRAG_THRESH = 5;\n\n    const onMouseDown = e => {\n      initClientX = e.clientX;\n      initClientY = prevClientY = e.clientY;\n      testingForVerticalDrag = true;\n      initValue = this.getValue();\n      dragDelta = 0;\n      window.addEventListener('mousemove', onMouseMove);\n      window.addEventListener('mouseup', onMouseUp);\n    };\n\n    const onMouseMove = e => {\n      if (testingForVerticalDrag) {\n        const dx = e.clientX - initClientX;\n        const dy = e.clientY - initClientY;\n\n        if (Math.abs(dy) > DRAG_THRESH) {\n          e.preventDefault();\n          this.$input.blur();\n          testingForVerticalDrag = false;\n\n          this._setDraggingStyle(true, 'vertical');\n        } else if (Math.abs(dx) > DRAG_THRESH) {\n          onMouseUp();\n        }\n      } // This isn't an else so that the first move counts towards dragDelta\n\n\n      if (!testingForVerticalDrag) {\n        const dy = e.clientY - prevClientY;\n        dragDelta -= dy * this._step * this._arrowKeyMultiplier(e); // Clamp dragDelta so we don't have 'dead space' after dragging past bounds.\n        // We're okay with the fact that bounds can be undefined here.\n\n        if (initValue + dragDelta > this._max) {\n          dragDelta = this._max - initValue;\n        } else if (initValue + dragDelta < this._min) {\n          dragDelta = this._min - initValue;\n        }\n\n        this._snapClampSetValue(initValue + dragDelta);\n      }\n\n      prevClientY = e.clientY;\n    };\n\n    const onMouseUp = () => {\n      this._setDraggingStyle(false, 'vertical');\n\n      this._callOnFinishChange();\n\n      window.removeEventListener('mousemove', onMouseMove);\n      window.removeEventListener('mouseup', onMouseUp);\n    }; // Focus state & onFinishChange\n    // ---------------------------------------------------------------------\n\n\n    const onFocus = () => {\n      this._inputFocused = true;\n    };\n\n    const onBlur = () => {\n      this._inputFocused = false;\n      this.updateDisplay();\n\n      this._callOnFinishChange();\n    };\n\n    this.$input.addEventListener('input', onInput);\n    this.$input.addEventListener('keydown', onKeyDown);\n    this.$input.addEventListener('wheel', onWheel, {\n      passive: false\n    });\n    this.$input.addEventListener('mousedown', onMouseDown);\n    this.$input.addEventListener('focus', onFocus);\n    this.$input.addEventListener('blur', onBlur);\n  }\n\n  _initSlider() {\n    this._hasSlider = true; // Build DOM\n    // ---------------------------------------------------------------------\n\n    this.$slider = document.createElement('div');\n    this.$slider.classList.add('slider');\n    this.$fill = document.createElement('div');\n    this.$fill.classList.add('fill');\n    this.$slider.appendChild(this.$fill);\n    this.$widget.insertBefore(this.$slider, this.$input);\n    this.domElement.classList.add('hasSlider'); // Map clientX to value\n    // ---------------------------------------------------------------------\n\n    const map = (v, a, b, c, d) => {\n      return (v - a) / (b - a) * (d - c) + c;\n    };\n\n    const setValueFromX = clientX => {\n      const rect = this.$slider.getBoundingClientRect();\n      let value = map(clientX, rect.left, rect.right, this._min, this._max);\n\n      this._snapClampSetValue(value);\n    }; // Mouse drag\n    // ---------------------------------------------------------------------\n\n\n    const mouseDown = e => {\n      this._setDraggingStyle(true);\n\n      setValueFromX(e.clientX);\n      window.addEventListener('mousemove', mouseMove);\n      window.addEventListener('mouseup', mouseUp);\n    };\n\n    const mouseMove = e => {\n      setValueFromX(e.clientX);\n    };\n\n    const mouseUp = () => {\n      this._callOnFinishChange();\n\n      this._setDraggingStyle(false);\n\n      window.removeEventListener('mousemove', mouseMove);\n      window.removeEventListener('mouseup', mouseUp);\n    }; // Touch drag\n    // ---------------------------------------------------------------------\n\n\n    let testingForScroll = false,\n        prevClientX,\n        prevClientY;\n\n    const beginTouchDrag = e => {\n      e.preventDefault();\n\n      this._setDraggingStyle(true);\n\n      setValueFromX(e.touches[0].clientX);\n      testingForScroll = false;\n    };\n\n    const onTouchStart = e => {\n      if (e.touches.length > 1) return; // If we're in a scrollable container, we should wait for the first\n      // touchmove to see if the user is trying to slide or scroll.\n\n      if (this._hasScrollBar) {\n        prevClientX = e.touches[0].clientX;\n        prevClientY = e.touches[0].clientY;\n        testingForScroll = true;\n      } else {\n        // Otherwise, we can set the value straight away on touchstart.\n        beginTouchDrag(e);\n      }\n\n      window.addEventListener('touchmove', onTouchMove);\n      window.addEventListener('touchend', onTouchEnd);\n    };\n\n    const onTouchMove = e => {\n      if (testingForScroll) {\n        const dx = e.touches[0].clientX - prevClientX;\n        const dy = e.touches[0].clientY - prevClientY;\n\n        if (Math.abs(dx) > Math.abs(dy)) {\n          // We moved horizontally, set the value and stop checking.\n          beginTouchDrag(e);\n        } else {\n          // This was, in fact, an attempt to scroll. Abort.\n          window.removeEventListener('touchmove', onTouchMove);\n          window.removeEventListener('touchend', onTouchEnd);\n        }\n      } else {\n        e.preventDefault();\n        setValueFromX(e.touches[0].clientX);\n      }\n    };\n\n    const onTouchEnd = () => {\n      this._callOnFinishChange();\n\n      this._setDraggingStyle(false);\n\n      window.removeEventListener('touchmove', onTouchMove);\n      window.removeEventListener('touchend', onTouchEnd);\n    }; // Mouse wheel\n    // ---------------------------------------------------------------------\n    // We have to use a debounced function to call onFinishChange because\n    // there's no way to tell when the user is \"done\" mouse-wheeling.\n\n\n    const callOnFinishChange = this._callOnFinishChange.bind(this);\n\n    const WHEEL_DEBOUNCE_TIME = 400;\n    let wheelFinishChangeTimeout;\n\n    const onWheel = e => {\n      // ignore vertical wheels if there's a scrollbar\n      const isVertical = Math.abs(e.deltaX) < Math.abs(e.deltaY);\n      if (isVertical && this._hasScrollBar) return;\n      e.preventDefault(); // set value\n\n      const delta = this._normalizeMouseWheel(e) * this._step;\n\n      this._snapClampSetValue(this.getValue() + delta); // force the input to updateDisplay when it's focused\n\n\n      this.$input.value = this.getValue(); // debounce onFinishChange\n\n      clearTimeout(wheelFinishChangeTimeout);\n      wheelFinishChangeTimeout = setTimeout(callOnFinishChange, WHEEL_DEBOUNCE_TIME);\n    };\n\n    this.$slider.addEventListener('mousedown', mouseDown);\n    this.$slider.addEventListener('touchstart', onTouchStart, {\n      passive: false\n    });\n    this.$slider.addEventListener('wheel', onWheel, {\n      passive: false\n    });\n  }\n\n  _setDraggingStyle(active) {\n    let axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'horizontal';\n\n    if (this.$slider) {\n      this.$slider.classList.toggle('active', active);\n    }\n\n    document.body.classList.toggle('lil-gui-dragging', active);\n    document.body.classList.toggle(`lil-gui-${axis}`, active);\n  }\n\n  _getImplicitStep() {\n    if (this._hasMin && this._hasMax) {\n      return (this._max - this._min) / 1000;\n    }\n\n    return 0.1;\n  }\n\n  _onUpdateMinMax() {\n    if (!this._hasSlider && this._hasMin && this._hasMax) {\n      // If this is the first time we're hearing about min and max\n      // and we haven't explicitly stated what our step is, let's\n      // update that too.\n      if (!this._stepExplicit) {\n        this.step(this._getImplicitStep(), false);\n      }\n\n      this._initSlider();\n\n      this.updateDisplay();\n    }\n  }\n\n  _normalizeMouseWheel(e) {\n    let {\n      deltaX,\n      deltaY\n    } = e; // Safari and Chrome report weird non-integral values for a notched wheel,\n    // but still expose actual lines scrolled via wheelDelta. Notched wheels\n    // should behave the same way as arrow keys.\n\n    if (Math.floor(e.deltaY) !== e.deltaY && e.wheelDelta) {\n      deltaX = 0;\n      deltaY = -e.wheelDelta / 120;\n      deltaY *= this._stepExplicit ? 1 : 10;\n    }\n\n    const wheel = deltaX + -deltaY;\n    return wheel;\n  }\n\n  _arrowKeyMultiplier(e) {\n    let mult = this._stepExplicit ? 1 : 10;\n\n    if (e.shiftKey) {\n      mult *= 10;\n    } else if (e.altKey) {\n      mult /= 10;\n    }\n\n    return mult;\n  }\n\n  _snap(value) {\n    // This would be the logical way to do things, but floating point errors.\n    // return Math.round( value / this._step ) * this._step;\n    // Using inverse step solves a lot of them, but not all\n    // const inverseStep = 1 / this._step;\n    // return Math.round( value * inverseStep ) / inverseStep;\n    // Not happy about this, but haven't seen it break.\n    const r = Math.round(value / this._step) * this._step;\n\n    return parseFloat(r.toPrecision(15));\n  }\n\n  _clamp(value) {\n    // either condition is false if min or max is undefined\n    if (value < this._min) value = this._min;\n    if (value > this._max) value = this._max;\n    return value;\n  }\n\n  _snapClampSetValue(value) {\n    this.setValue(this._clamp(this._snap(value)));\n  }\n\n  get _hasScrollBar() {\n    const root = this.parent.root.$children;\n    return root.scrollHeight > root.clientHeight;\n  }\n\n  get _hasMin() {\n    return this._min !== undefined;\n  }\n\n  get _hasMax() {\n    return this._max !== undefined;\n  }\n\n}\n\nclass OptionController extends Controller {\n  constructor(parent, object, property, options) {\n    super(parent, object, property, 'option');\n    this.$select = document.createElement('select');\n    this.$select.setAttribute('aria-labelledby', this.$name.id);\n    this.$display = document.createElement('div');\n    this.$display.classList.add('display');\n    this._values = Array.isArray(options) ? options : Object.values(options);\n    this._names = Array.isArray(options) ? options : Object.keys(options);\n\n    this._names.forEach(name => {\n      const $option = document.createElement('option');\n      $option.innerHTML = name;\n      this.$select.appendChild($option);\n    });\n\n    this.$select.addEventListener('change', () => {\n      this.setValue(this._values[this.$select.selectedIndex]);\n\n      this._callOnFinishChange();\n    });\n    this.$select.addEventListener('focus', () => {\n      this.$display.classList.add('focus');\n    });\n    this.$select.addEventListener('blur', () => {\n      this.$display.classList.remove('focus');\n    });\n    this.$widget.appendChild(this.$select);\n    this.$widget.appendChild(this.$display);\n    this.$disable = this.$select;\n    this.updateDisplay();\n  }\n\n  updateDisplay() {\n    const value = this.getValue();\n\n    const index = this._values.indexOf(value);\n\n    this.$select.selectedIndex = index;\n    this.$display.innerHTML = index === -1 ? value : this._names[index];\n    return this;\n  }\n\n}\n\nclass StringController extends Controller {\n  constructor(parent, object, property) {\n    super(parent, object, property, 'string');\n    this.$input = document.createElement('input');\n    this.$input.setAttribute('type', 'text');\n    this.$input.setAttribute('aria-labelledby', this.$name.id);\n    this.$input.addEventListener('input', () => {\n      this.setValue(this.$input.value);\n    });\n    this.$input.addEventListener('keydown', e => {\n      if (e.code === 'Enter') {\n        this.$input.blur();\n      }\n    });\n    this.$input.addEventListener('blur', () => {\n      this._callOnFinishChange();\n    });\n    this.$widget.appendChild(this.$input);\n    this.$disable = this.$input;\n    this.updateDisplay();\n  }\n\n  updateDisplay() {\n    this.$input.value = this.getValue();\n    return this;\n  }\n\n}\n\nconst stylesheet = `.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  background-color: var(--background-color);\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, \"Droid Sans Mono\", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean .widget {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: \" \";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: \"lil-gui\";\n  content: \"↕\";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background-color: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background-color: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background-color: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  height: var(--title-height);\n  line-height: calc(var(--title-height) - 4px);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  -webkit-tap-highlight-color: transparent;\n  cursor: pointer;\n  outline: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: \"lil-gui\";\n  content: \"▾\";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: \"▸\";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: \"Empty\";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui input {\n  -webkit-tap-highlight-color: transparent;\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input::-webkit-outer-spin-button,\n.lil-gui input::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.lil-gui input[type=number] {\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  -webkit-appearance: none;\n  height: var(--checkbox-size);\n  width: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: \"lil-gui\";\n  content: \"✓\";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  border: 1px solid var(--widget-color);\n  text-align: center;\n  line-height: calc(var(--widget-height) - 4px);\n}\n@media (hover: hover) {\n  .lil-gui button:hover {\n    background: var(--hover-color);\n    border-color: var(--hover-color);\n  }\n  .lil-gui button:focus {\n    border-color: var(--focus-color);\n  }\n}\n.lil-gui button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: \"lil-gui\";\n  src: url(\"data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==\") format(\"woff\");\n}`;\n\nfunction _injectStyles(cssContent) {\n  const injected = document.createElement('style');\n  injected.innerHTML = cssContent;\n  const before = document.querySelector('head link[rel=stylesheet], head style');\n\n  if (before) {\n    document.head.insertBefore(injected, before);\n  } else {\n    document.head.appendChild(injected);\n  }\n}\n\nlet stylesInjected = false;\n\nclass GUI {\n  /**\n   * Creates a panel that holds controllers.\n   * @example\n   * new GUI();\n   * new GUI( { container: document.getElementById( 'custom' ) } );\n   *\n   * @param {object} [options]\n   * @param {boolean} [options.autoPlace=true]\n   * Adds the GUI to `document.body` and fixes it to the top right of the page.\n   *\n   * @param {HTMLElement} [options.container]\n   * Adds the GUI to this DOM element. Overrides `autoPlace`.\n   *\n   * @param {number} [options.width=245]\n   * Width of the GUI in pixels, usually set when name labels become too long. Note that you can make\n   * name labels wider in CSS with `.lil‑gui { ‑‑name‑width: 55% }`\n   *\n   * @param {string} [options.title=Controls]\n   * Name to display in the title bar.\n   *\n   * @param {boolean} [options.injectStyles=true]\n   * Injects the default stylesheet into the page if this is the first GUI.\n   * Pass `false` to use your own stylesheet.\n   *\n   * @param {number} [options.touchStyles=true]\n   * Makes controllers larger on touch devices. Pass `false` to disable touch styles.\n   *\n   * @param {GUI} [options.parent]\n   * Adds this GUI as a child in another GUI. Usually this is done for you by `addFolder()`.\n   *\n   */\n  constructor() {\n    let {\n      parent,\n      autoPlace = parent === undefined,\n      container,\n      width,\n      title = 'Controls',\n      injectStyles = true,\n      touchStyles = true\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    /**\n     * The GUI containing this folder, or `undefined` if this is the root GUI.\n     * @type {GUI}\n     */\n    this.parent = parent;\n    /**\n     * The top level GUI containing this folder, or `this` if this is the root GUI.\n     * @type {GUI}\n     */\n\n    this.root = parent ? parent.root : this;\n    /**\n     * The list of controllers and folders contained by this GUI.\n     * @type {Array<GUI|Controller>}\n     */\n\n    this.children = [];\n    /**\n     * The list of controllers contained by this GUI.\n     * @type {Array<Controller>}\n     */\n\n    this.controllers = [];\n    /**\n     * The list of folders contained by this GUI.\n     * @type {Array<GUI>}\n     */\n\n    this.folders = [];\n    /**\n     * Used to determine if the GUI is closed. Use `gui.open()` or `gui.close()` to change this.\n     * @type {boolean}\n     */\n\n    this._closed = false;\n    /**\n     * Used to determine if the GUI is hidden. Use `gui.show()` or `gui.hide()` to change this.\n     * @type {boolean}\n     */\n\n    this._hidden = false;\n    /**\n     * The outermost container element.\n     * @type {HTMLElement}\n     */\n\n    this.domElement = document.createElement('div');\n    this.domElement.classList.add('lil-gui');\n    /**\n     * The DOM element that contains the title.\n     * @type {HTMLElement}\n     */\n\n    this.$title = document.createElement('div');\n    this.$title.classList.add('title');\n    this.$title.setAttribute('role', 'button');\n    this.$title.setAttribute('aria-expanded', true);\n    this.$title.setAttribute('tabindex', 0);\n    this.$title.addEventListener('click', () => this.openAnimated(this._closed));\n    this.$title.addEventListener('keydown', e => {\n      if (e.code === 'Enter' || e.code === 'Space') {\n        e.preventDefault();\n        this.$title.click();\n      }\n    }); // enables :active pseudo class on mobile\n\n    this.$title.addEventListener('touchstart', () => {}, {\n      passive: true\n    });\n    /**\n     * The DOM element that contains children.\n     * @type {HTMLElement}\n     */\n\n    this.$children = document.createElement('div');\n    this.$children.classList.add('children');\n    this.domElement.appendChild(this.$title);\n    this.domElement.appendChild(this.$children);\n    this.title(title);\n\n    if (touchStyles) {\n      this.domElement.classList.add('allow-touch-styles');\n    }\n\n    if (this.parent) {\n      this.parent.children.push(this);\n      this.parent.folders.push(this);\n      this.parent.$children.appendChild(this.domElement); // Stop the constructor early, everything onward only applies to root GUI's\n\n      return;\n    }\n\n    this.domElement.classList.add('root'); // Inject stylesheet if we haven't done that yet\n\n    if (!stylesInjected && injectStyles) {\n      _injectStyles(stylesheet);\n\n      stylesInjected = true;\n    }\n\n    if (container) {\n      container.appendChild(this.domElement);\n    } else if (autoPlace) {\n      this.domElement.classList.add('autoPlace');\n      document.body.appendChild(this.domElement);\n    }\n\n    if (width) {\n      this.domElement.style.setProperty('--width', width + 'px');\n    } // Don't fire global key events while typing in the GUI:\n\n\n    this.domElement.addEventListener('keydown', e => e.stopPropagation());\n    this.domElement.addEventListener('keyup', e => e.stopPropagation());\n  }\n  /**\n   * Adds a controller to the GUI, inferring controller type using the `typeof` operator.\n   * @example\n   * gui.add( object, 'property' );\n   * gui.add( object, 'number', 0, 100, 1 );\n   * gui.add( object, 'options', [ 1, 2, 3 ] );\n   *\n   * @param {object} object The object the controller will modify.\n   * @param {string} property Name of the property to control.\n   * @param {number|object|Array} [$1] Minimum value for number controllers, or the set of\n   * selectable values for a dropdown.\n   * @param {number} [max] Maximum value for number controllers.\n   * @param {number} [step] Step value for number controllers.\n   * @returns {Controller}\n   */\n\n\n  add(object, property, $1, max, step) {\n    if (Object($1) === $1) {\n      return new OptionController(this, object, property, $1);\n    }\n\n    const initialValue = object[property];\n\n    switch (typeof initialValue) {\n      case 'number':\n        return new NumberController(this, object, property, $1, max, step);\n\n      case 'boolean':\n        return new BooleanController(this, object, property);\n\n      case 'string':\n        return new StringController(this, object, property);\n\n      case 'function':\n        return new FunctionController(this, object, property);\n    }\n\n    console.error(`gui.add failed\n\tproperty:`, property, `\n\tobject:`, object, `\n\tvalue:`, initialValue);\n  }\n  /**\n   * Adds a color controller to the GUI.\n   * @example\n   * params = {\n   * \tcssColor: '#ff00ff',\n   * \trgbColor: { r: 0, g: 0.2, b: 0.4 },\n   * \tcustomRange: [ 0, 127, 255 ],\n   * };\n   *\n   * gui.addColor( params, 'cssColor' );\n   * gui.addColor( params, 'rgbColor' );\n   * gui.addColor( params, 'customRange', 255 );\n   *\n   * @param {object} object The object the controller will modify.\n   * @param {string} property Name of the property to control.\n   * @param {number} rgbScale Maximum value for a color channel when using an RGB color. You may\n   * need to set this to 255 if your colors are too dark.\n   * @returns {Controller}\n   */\n\n\n  addColor(object, property) {\n    let rgbScale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    return new ColorController(this, object, property, rgbScale);\n  }\n  /**\n   * Adds a folder to the GUI, which is just another GUI. This method returns\n   * the nested GUI so you can add controllers to it.\n   * @example\n   * const folder = gui.addFolder( 'Position' );\n   * folder.add( position, 'x' );\n   * folder.add( position, 'y' );\n   * folder.add( position, 'z' );\n   *\n   * @param {string} title Name to display in the folder's title bar.\n   * @returns {GUI}\n   */\n\n\n  addFolder(title) {\n    return new GUI({\n      parent: this,\n      title\n    });\n  }\n  /**\n   * Recalls values that were saved with `gui.save()`.\n   * @param {object} obj\n   * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n   * @returns {this}\n   */\n\n\n  load(obj) {\n    let recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (obj.controllers) {\n      this.controllers.forEach(c => {\n        if (c instanceof FunctionController) return;\n\n        if (c._name in obj.controllers) {\n          c.load(obj.controllers[c._name]);\n        }\n      });\n    }\n\n    if (recursive && obj.folders) {\n      this.folders.forEach(f => {\n        if (f._title in obj.folders) {\n          f.load(obj.folders[f._title]);\n        }\n      });\n    }\n\n    return this;\n  }\n  /**\n   * Returns an object mapping controller names to values. The object can be passed to `gui.load()` to\n   * recall these values.\n   * @example\n   * {\n   * \tcontrollers: {\n   * \t\tprop1: 1,\n   * \t\tprop2: 'value',\n   * \t\t...\n   * \t},\n   * \tfolders: {\n   * \t\tfolderName1: { controllers, folders },\n   * \t\tfolderName2: { controllers, folders }\n   * \t\t...\n   * \t}\n   * }\n   *\n   * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n   * @returns {object}\n   */\n\n\n  save() {\n    let recursive = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    const obj = {\n      controllers: {},\n      folders: {}\n    };\n    this.controllers.forEach(c => {\n      if (c instanceof FunctionController) return;\n\n      if (c._name in obj.controllers) {\n        throw new Error(`Cannot save GUI with duplicate property \"${c._name}\"`);\n      }\n\n      obj.controllers[c._name] = c.save();\n    });\n\n    if (recursive) {\n      this.folders.forEach(f => {\n        if (f._title in obj.folders) {\n          throw new Error(`Cannot save GUI with duplicate folder \"${f._title}\"`);\n        }\n\n        obj.folders[f._title] = f.save();\n      });\n    }\n\n    return obj;\n  }\n  /**\n   * Opens a GUI or folder. GUI and folders are open by default.\n   * @param {boolean} open Pass false to close\n   * @returns {this}\n   * @example\n   * gui.open(); // open\n   * gui.open( false ); // close\n   * gui.open( gui._closed ); // toggle\n   */\n\n\n  open() {\n    let open = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this._closed = !open;\n    this.$title.setAttribute('aria-expanded', !this._closed);\n    this.domElement.classList.toggle('closed', this._closed);\n    return this;\n  }\n  /**\n   * Closes the GUI.\n   * @returns {this}\n   */\n\n\n  close() {\n    return this.open(false);\n  }\n  /**\n   * Shows the GUI after it's been hidden.\n   * @param {boolean} show\n   * @returns {this}\n   * @example\n   * gui.show();\n   * gui.show( false ); // hide\n   * gui.show( gui._hidden ); // toggle\n   */\n\n\n  show() {\n    let show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this._hidden = !show;\n    this.domElement.style.display = this._hidden ? 'none' : '';\n    return this;\n  }\n  /**\n   * Hides the GUI.\n   * @returns {this}\n   */\n\n\n  hide() {\n    return this.show(false);\n  }\n\n  openAnimated() {\n    let open = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    // set state immediately\n    this._closed = !open;\n    this.$title.setAttribute('aria-expanded', !this._closed); // wait for next frame to measure $children\n\n    requestAnimationFrame(() => {\n      // explicitly set initial height for transition\n      const initialHeight = this.$children.clientHeight;\n      this.$children.style.height = initialHeight + 'px';\n      this.domElement.classList.add('transition');\n\n      const onTransitionEnd = e => {\n        if (e.target !== this.$children) return;\n        this.$children.style.height = '';\n        this.domElement.classList.remove('transition');\n        this.$children.removeEventListener('transitionend', onTransitionEnd);\n      };\n\n      this.$children.addEventListener('transitionend', onTransitionEnd); // todo: this is wrong if children's scrollHeight makes for a gui taller than maxHeight\n\n      const targetHeight = !open ? 0 : this.$children.scrollHeight;\n      this.domElement.classList.toggle('closed', !open);\n      requestAnimationFrame(() => {\n        this.$children.style.height = targetHeight + 'px';\n      });\n    });\n    return this;\n  }\n  /**\n   * Change the title of this GUI.\n   * @param {string} title\n   * @returns {this}\n   */\n\n\n  title(title) {\n    /**\n     * Current title of the GUI. Use `gui.title( 'Title' )` to modify this value.\n     * @type {string}\n     */\n    this._title = title;\n    this.$title.innerHTML = title;\n    return this;\n  }\n  /**\n   * Resets all controllers to their initial values.\n   * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n   * @returns {this}\n   */\n\n\n  reset() {\n    let recursive = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    const controllers = recursive ? this.controllersRecursive() : this.controllers;\n    controllers.forEach(c => c.reset());\n    return this;\n  }\n  /**\n   * Pass a function to be called whenever a controller in this GUI changes.\n   * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n   * @returns {this}\n   * @example\n   * gui.onChange( event => {\n   * \tevent.object     // object that was modified\n   * \tevent.property   // string, name of property\n   * \tevent.value      // new value of controller\n   * \tevent.controller // controller that was modified\n   * } );\n   */\n\n\n  onChange(callback) {\n    /**\n     * Used to access the function bound to `onChange` events. Don't modify this value\n     * directly. Use the `gui.onChange( callback )` method instead.\n     * @type {Function}\n     */\n    this._onChange = callback;\n    return this;\n  }\n\n  _callOnChange(controller) {\n    if (this.parent) {\n      this.parent._callOnChange(controller);\n    }\n\n    if (this._onChange !== undefined) {\n      this._onChange.call(this, {\n        object: controller.object,\n        property: controller.property,\n        value: controller.getValue(),\n        controller\n      });\n    }\n  }\n  /**\n   * Pass a function to be called whenever a controller in this GUI has finished changing.\n   * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n   * @returns {this}\n   * @example\n   * gui.onFinishChange( event => {\n   * \tevent.object     // object that was modified\n   * \tevent.property   // string, name of property\n   * \tevent.value      // new value of controller\n   * \tevent.controller // controller that was modified\n   * } );\n   */\n\n\n  onFinishChange(callback) {\n    /**\n     * Used to access the function bound to `onFinishChange` events. Don't modify this value\n     * directly. Use the `gui.onFinishChange( callback )` method instead.\n     * @type {Function}\n     */\n    this._onFinishChange = callback;\n    return this;\n  }\n\n  _callOnFinishChange(controller) {\n    if (this.parent) {\n      this.parent._callOnFinishChange(controller);\n    }\n\n    if (this._onFinishChange !== undefined) {\n      this._onFinishChange.call(this, {\n        object: controller.object,\n        property: controller.property,\n        value: controller.getValue(),\n        controller\n      });\n    }\n  }\n  /**\n   * Destroys all DOM elements and event listeners associated with this GUI\n   */\n\n\n  destroy() {\n    if (this.parent) {\n      this.parent.children.splice(this.parent.children.indexOf(this), 1);\n      this.parent.folders.splice(this.parent.folders.indexOf(this), 1);\n    }\n\n    if (this.domElement.parentElement) {\n      this.domElement.parentElement.removeChild(this.domElement);\n    }\n\n    Array.from(this.children).forEach(c => c.destroy());\n  }\n  /**\n   * Returns an array of controllers contained by this GUI and its descendents.\n   * @returns {Controller[]}\n   */\n\n\n  controllersRecursive() {\n    let controllers = Array.from(this.controllers);\n    this.folders.forEach(f => {\n      controllers = controllers.concat(f.controllersRecursive());\n    });\n    return controllers;\n  }\n  /**\n   * Returns an array of folders contained by this GUI and its descendents.\n   * @returns {GUI[]}\n   */\n\n\n  foldersRecursive() {\n    let folders = Array.from(this.folders);\n    this.folders.forEach(f => {\n      folders = folders.concat(f.foldersRecursive());\n    });\n    return folders;\n  }\n\n}\n\nexport default GUI;\nexport { BooleanController, ColorController, Controller, FunctionController, GUI, NumberController, OptionController, StringController };","map":{"version":3,"names":["Controller","constructor","parent","object","property","className","widgetTag","_disabled","initialValue","getValue","domElement","document","createElement","classList","add","$name","nextNameID","id","$widget","$disable","appendChild","children","push","controllers","$children","_listenCallback","bind","name","_name","innerHTML","onChange","callback","_onChange","_callOnChange","undefined","call","_changed","onFinishChange","_onFinishChange","_callOnFinishChange","reset","setValue","enable","enabled","disable","disabled","toggle","toggleAttribute","options","controller","destroy","min","max","step","listen","_listening","_listenCallbackID","cancelAnimationFrame","requestAnimationFrame","curValue","save","_listenPrevValue","updateDisplay","value","load","splice","indexOf","removeChild","BooleanController","$input","setAttribute","addEventListener","checked","normalizeColorString","string","match","result","parseInt","toString","padStart","STRING","isPrimitive","v","fromHexString","toHexString","INT","substring","ARRAY","Array","isArray","target","rgbScale","int","r","g","b","OBJECT","Object","FORMATS","getColorFormat","find","format","ColorController","$text","$display","_format","_rgbScale","_initialValueHexString","_textFocused","_setValueFromHexString","tryParse","select","newValue","style","backgroundColor","FunctionController","$button","e","preventDefault","passive","NumberController","_initInput","stepExplicit","_getImplicitStep","_min","_onUpdateMinMax","_max","explicit","_step","_stepExplicit","_hasSlider","percent","Math","$fill","width","_inputFocused","onInput","parseFloat","isNaN","_clamp","increment","delta","_snapClampSetValue","onKeyDown","code","blur","_arrowKeyMultiplier","onWheel","_normalizeMouseWheel","testingForVerticalDrag","initClientX","initClientY","prevClientY","initValue","dragDelta","DRAG_THRESH","onMouseDown","clientX","clientY","window","onMouseMove","onMouseUp","dx","dy","abs","_setDraggingStyle","removeEventListener","onFocus","onBlur","_initSlider","$slider","insertBefore","map","a","c","d","setValueFromX","rect","getBoundingClientRect","left","right","mouseDown","mouseMove","mouseUp","testingForScroll","prevClientX","beginTouchDrag","touches","onTouchStart","length","_hasScrollBar","onTouchMove","onTouchEnd","callOnFinishChange","WHEEL_DEBOUNCE_TIME","wheelFinishChangeTimeout","isVertical","deltaX","deltaY","clearTimeout","setTimeout","active","axis","body","_hasMin","_hasMax","floor","wheelDelta","wheel","mult","shiftKey","altKey","_snap","round","toPrecision","root","scrollHeight","clientHeight","OptionController","$select","_values","values","_names","keys","forEach","$option","selectedIndex","remove","index","StringController","stylesheet","_injectStyles","cssContent","injected","before","querySelector","head","stylesInjected","GUI","autoPlace","container","title","injectStyles","touchStyles","folders","_closed","_hidden","$title","openAnimated","click","setProperty","stopPropagation","$1","console","error","addColor","addFolder","obj","recursive","f","_title","Error","open","close","show","display","hide","initialHeight","height","onTransitionEnd","targetHeight","controllersRecursive","parentElement","from","concat","foldersRecursive"],"sources":["C:/Phox.Solutions/Workshop/GitHub-Repos/WeTheNetwork/scene-director/node_modules/lil-gui/dist/lil-gui.esm.js"],"sourcesContent":["/**\n * lil-gui\n * https://lil-gui.georgealways.com\n * @version 0.16.1\n * @author George Michael Brower\n * @license MIT\n */\n\n/**\n * Base class for all controllers.\n */\nclass Controller {\n\n\tconstructor( parent, object, property, className, widgetTag = 'div' ) {\n\n\t\t/**\n\t\t * The GUI that contains this controller.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * The object this controller will modify.\n\t\t * @type {object}\n\t\t */\n\t\tthis.object = object;\n\n\t\t/**\n\t\t * The name of the property to control.\n\t\t * @type {string}\n\t\t */\n\t\tthis.property = property;\n\n\t\t/**\n\t\t * Used to determine if the controller is disabled.\n\t\t * Use `controller.disable( true|false )` to modify this value\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._disabled = false;\n\n\t\t/**\n\t\t * The value of `object[ property ]` when the controller was created.\n\t\t * @type {any}\n\t\t */\n\t\tthis.initialValue = this.getValue();\n\n\t\t/**\n\t\t * The outermost container DOM element for this controller.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.domElement = document.createElement( 'div' );\n\t\tthis.domElement.classList.add( 'controller' );\n\t\tthis.domElement.classList.add( className );\n\n\t\t/**\n\t\t * The DOM element that contains the controller's name.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$name = document.createElement( 'div' );\n\t\tthis.$name.classList.add( 'name' );\n\n\t\tController.nextNameID = Controller.nextNameID || 0;\n\t\tthis.$name.id = `lil-gui-name-${++Controller.nextNameID}`;\n\n\t\t/**\n\t\t * The DOM element that contains the controller's \"widget\" (which differs by controller type).\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$widget = document.createElement( widgetTag );\n\t\tthis.$widget.classList.add( 'widget' );\n\n\t\t/**\n\t\t * The DOM element that receives the disabled attribute when using disable()\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$disable = this.$widget;\n\n\t\tthis.domElement.appendChild( this.$name );\n\t\tthis.domElement.appendChild( this.$widget );\n\n\t\tthis.parent.children.push( this );\n\t\tthis.parent.controllers.push( this );\n\n\t\tthis.parent.$children.appendChild( this.domElement );\n\n\t\tthis._listenCallback = this._listenCallback.bind( this );\n\n\t\tthis.name( property );\n\n\t}\n\n\t/**\n\t * Sets the name of the controller and its label in the GUI.\n\t * @param {string} name\n\t * @returns {this}\n\t */\n\tname( name ) {\n\t\t/**\n\t\t * The controller's name. Use `controller.name( 'Name' )` to modify this value.\n\t\t * @type {string}\n\t\t */\n\t\tthis._name = name;\n\t\tthis.$name.innerHTML = name;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pass a function to be called whenever the value is modified by this controller.\n\t * The function receives the new value as its first parameter. The value of `this` will be the\n\t * controller.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onChange( function( v ) {\n\t * \tconsole.log( 'The value is now ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */\n\tonChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value directly.\n\t\t * Use the `controller.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onChange = callback;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calls the onChange methods of this controller and its parent GUI.\n\t * @protected\n\t */\n\t_callOnChange() {\n\n\t\tthis.parent._callOnChange( this );\n\n\t\tif ( this._onChange !== undefined ) {\n\t\t\tthis._onChange.call( this, this.getValue() );\n\t\t}\n\n\t\tthis._changed = true;\n\n\t}\n\n\t/**\n\t * Pass a function to be called after this controller has been modified and loses focus.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onFinishChange( function( v ) {\n\t * \tconsole.log( 'Changes complete: ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */\n\tonFinishChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `controller.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onFinishChange = callback;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Should be called by Controller when its widgets lose focus.\n\t * @protected\n\t */\n\t_callOnFinishChange() {\n\n\t\tif ( this._changed ) {\n\n\t\t\tthis.parent._callOnFinishChange( this );\n\n\t\t\tif ( this._onFinishChange !== undefined ) {\n\t\t\t\tthis._onFinishChange.call( this, this.getValue() );\n\t\t\t}\n\n\t\t}\n\n\t\tthis._changed = false;\n\n\t}\n\n\t/**\n\t * Sets the controller back to its initial value.\n\t * @returns {this}\n\t */\n\treset() {\n\t\tthis.setValue( this.initialValue );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Enables this controller.\n\t * @param {boolean} enabled\n\t * @returns {this}\n\t * @example\n\t * controller.enable();\n\t * controller.enable( false ); // disable\n\t * controller.enable( controller._disabled ); // toggle\n\t */\n\tenable( enabled = true ) {\n\t\treturn this.disable( !enabled );\n\t}\n\n\t/**\n\t * Disables this controller.\n\t * @param {boolean} disabled\n\t * @returns {this}\n\t * @example\n\t * controller.disable();\n\t * controller.disable( false ); // enable\n\t * controller.disable( !controller._disabled ); // toggle\n\t */\n\tdisable( disabled = true ) {\n\n\t\tif ( disabled === this._disabled ) return this;\n\n\t\tthis._disabled = disabled;\n\n\t\tthis.domElement.classList.toggle( 'disabled', disabled );\n\t\tthis.$disable.toggleAttribute( 'disabled', disabled );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Destroys this controller and replaces it with a new option controller. Provided as a more\n\t * descriptive syntax for `gui.add`, but primarily for compatibility with dat.gui.\n\t *\n\t * Use caution, as this method will destroy old references to this controller. It will also\n\t * change controller order if called out of sequence, moving the option controller to the end of\n\t * the GUI.\n\t * @example\n\t * // safe usage\n\t *\n\t * gui.add( object1, 'property' ).options( [ 'a', 'b', 'c' ] );\n\t * gui.add( object2, 'property' );\n\t *\n\t * // danger\n\t *\n\t * const c = gui.add( object1, 'property' );\n\t * gui.add( object2, 'property' );\n\t *\n\t * c.options( [ 'a', 'b', 'c' ] );\n\t * // controller is now at the end of the GUI even though it was added first\n\t *\n\t * assert( c.parent.children.indexOf( c ) === -1 )\n\t * // c references a controller that no longer exists\n\t *\n\t * @param {object|Array} options\n\t * @returns {Controller}\n\t */\n\toptions( options ) {\n\t\tconst controller = this.parent.add( this.object, this.property, options );\n\t\tcontroller.name( this._name );\n\t\tthis.destroy();\n\t\treturn controller;\n\t}\n\n\t/**\n\t * Sets the minimum value. Only works on number controllers.\n\t * @param {number} min\n\t * @returns {this}\n\t */\n\tmin( min ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the maximum value. Only works on number controllers.\n\t * @param {number} max\n\t * @returns {this}\n\t */\n\tmax( max ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the step. Only works on number controllers.\n\t * @param {number} step\n\t * @returns {this}\n\t */\n\tstep( step ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calls `updateDisplay()` every animation frame. Pass `false` to stop listening.\n\t * @param {boolean} listen\n\t * @returns {this}\n\t */\n\tlisten( listen = true ) {\n\n\t\t/**\n\t\t * Used to determine if the controller is currently listening. Don't modify this value\n\t\t * directly. Use the `controller.listen( true|false )` method instead.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._listening = listen;\n\n\t\tif ( this._listenCallbackID !== undefined ) {\n\t\t\tcancelAnimationFrame( this._listenCallbackID );\n\t\t\tthis._listenCallbackID = undefined;\n\t\t}\n\n\t\tif ( this._listening ) {\n\t\t\tthis._listenCallback();\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_listenCallback() {\n\n\t\tthis._listenCallbackID = requestAnimationFrame( this._listenCallback );\n\n\t\t// To prevent framerate loss, make sure the value has changed before updating the display.\n\t\t// Note: save() is used here instead of getValue() only because of ColorController. The !== operator\n\t\t// won't work for color objects or arrays, but ColorController.save() always returns a string.\n\n\t\tconst curValue = this.save();\n\n\t\tif ( curValue !== this._listenPrevValue ) {\n\t\t\tthis.updateDisplay();\n\t\t}\n\n\t\tthis._listenPrevValue = curValue;\n\n\t}\n\n\t/**\n\t * Returns `object[ property ]`.\n\t * @returns {any}\n\t */\n\tgetValue() {\n\t\treturn this.object[ this.property ];\n\t}\n\n\t/**\n\t * Sets the value of `object[ property ]`, invokes any `onChange` handlers and updates the display.\n\t * @param {any} value\n\t * @returns {this}\n\t */\n\tsetValue( value ) {\n\t\tthis.object[ this.property ] = value;\n\t\tthis._callOnChange();\n\t\tthis.updateDisplay();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Updates the display to keep it in sync with the current value. Useful for updating your\n\t * controllers when their values have been modified outside of the GUI.\n\t * @returns {this}\n\t */\n\tupdateDisplay() {\n\t\treturn this;\n\t}\n\n\tload( value ) {\n\t\tthis.setValue( value );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\tsave() {\n\t\treturn this.getValue();\n\t}\n\n\t/**\n\t * Destroys this controller and removes it from the parent GUI.\n\t */\n\tdestroy() {\n\t\tthis.listen( false );\n\t\tthis.parent.children.splice( this.parent.children.indexOf( this ), 1 );\n\t\tthis.parent.controllers.splice( this.parent.controllers.indexOf( this ), 1 );\n\t\tthis.parent.$children.removeChild( this.domElement );\n\t}\n\n}\n\nclass BooleanController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'boolean', 'label' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'checkbox' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$input.addEventListener( 'change', () => {\n\t\t\tthis.setValue( this.$input.checked );\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$disable = this.$input;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.checked = this.getValue();\n\t\treturn this;\n\t}\n\n}\n\nfunction normalizeColorString( string ) {\n\n\tlet match, result;\n\n\tif ( match = string.match( /(#|0x)?([a-f0-9]{6})/i ) ) {\n\n\t\tresult = match[ 2 ];\n\n\t} else if ( match = string.match( /rgb\\(\\s*(\\d*)\\s*,\\s*(\\d*)\\s*,\\s*(\\d*)\\s*\\)/ ) ) {\n\n\t\tresult = parseInt( match[ 1 ] ).toString( 16 ).padStart( 2, 0 )\n\t\t\t+ parseInt( match[ 2 ] ).toString( 16 ).padStart( 2, 0 )\n\t\t\t+ parseInt( match[ 3 ] ).toString( 16 ).padStart( 2, 0 );\n\n\t} else if ( match = string.match( /^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i ) ) {\n\n\t\tresult = match[ 1 ] + match[ 1 ] + match[ 2 ] + match[ 2 ] + match[ 3 ] + match[ 3 ];\n\n\t}\n\n\tif ( result ) {\n\t\treturn '#' + result;\n\t}\n\n\treturn false;\n\n}\n\nconst STRING = {\n\tisPrimitive: true,\n\tmatch: v => typeof v === 'string',\n\tfromHexString: normalizeColorString,\n\ttoHexString: normalizeColorString\n};\n\nconst INT = {\n\tisPrimitive: true,\n\tmatch: v => typeof v === 'number',\n\tfromHexString: string => parseInt( string.substring( 1 ), 16 ),\n\ttoHexString: value => '#' + value.toString( 16 ).padStart( 6, 0 )\n};\n\nconst ARRAY = {\n\tisPrimitive: false,\n\tmatch: Array.isArray,\n\tfromHexString( string, target, rgbScale = 1 ) {\n\n\t\tconst int = INT.fromHexString( string );\n\n\t\ttarget[ 0 ] = ( int >> 16 & 255 ) / 255 * rgbScale;\n\t\ttarget[ 1 ] = ( int >> 8 & 255 ) / 255 * rgbScale;\n\t\ttarget[ 2 ] = ( int & 255 ) / 255 * rgbScale;\n\n\t},\n\ttoHexString( [ r, g, b ], rgbScale = 1 ) {\n\n\t\trgbScale = 255 / rgbScale;\n\n\t\tconst int = ( r * rgbScale ) << 16 ^\n\t\t\t( g * rgbScale ) << 8 ^\n\t\t\t( b * rgbScale ) << 0;\n\n\t\treturn INT.toHexString( int );\n\n\t}\n};\n\nconst OBJECT = {\n\tisPrimitive: false,\n\tmatch: v => Object( v ) === v,\n\tfromHexString( string, target, rgbScale = 1 ) {\n\n\t\tconst int = INT.fromHexString( string );\n\n\t\ttarget.r = ( int >> 16 & 255 ) / 255 * rgbScale;\n\t\ttarget.g = ( int >> 8 & 255 ) / 255 * rgbScale;\n\t\ttarget.b = ( int & 255 ) / 255 * rgbScale;\n\n\t},\n\ttoHexString( { r, g, b }, rgbScale = 1 ) {\n\n\t\trgbScale = 255 / rgbScale;\n\n\t\tconst int = ( r * rgbScale ) << 16 ^\n\t\t\t( g * rgbScale ) << 8 ^\n\t\t\t( b * rgbScale ) << 0;\n\n\t\treturn INT.toHexString( int );\n\n\t}\n};\n\nconst FORMATS = [ STRING, INT, ARRAY, OBJECT ];\n\nfunction getColorFormat( value ) {\n\treturn FORMATS.find( format => format.match( value ) );\n}\n\nclass ColorController extends Controller {\n\n\tconstructor( parent, object, property, rgbScale ) {\n\n\t\tsuper( parent, object, property, 'color' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'color' );\n\t\tthis.$input.setAttribute( 'tabindex', -1 );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$text = document.createElement( 'input' );\n\t\tthis.$text.setAttribute( 'type', 'text' );\n\t\tthis.$text.setAttribute( 'spellcheck', 'false' );\n\t\tthis.$text.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$display = document.createElement( 'div' );\n\t\tthis.$display.classList.add( 'display' );\n\n\t\tthis.$display.appendChild( this.$input );\n\t\tthis.$widget.appendChild( this.$display );\n\t\tthis.$widget.appendChild( this.$text );\n\n\t\tthis._format = getColorFormat( this.initialValue );\n\t\tthis._rgbScale = rgbScale;\n\n\t\tthis._initialValueHexString = this.save();\n\t\tthis._textFocused = false;\n\n\t\tthis.$input.addEventListener( 'input', () => {\n\t\t\tthis._setValueFromHexString( this.$input.value );\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'blur', () => {\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'input', () => {\n\t\t\tconst tryParse = normalizeColorString( this.$text.value );\n\t\t\tif ( tryParse ) {\n\t\t\t\tthis._setValueFromHexString( tryParse );\n\t\t\t}\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'focus', () => {\n\t\t\tthis._textFocused = true;\n\t\t\tthis.$text.select();\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'blur', () => {\n\t\t\tthis._textFocused = false;\n\t\t\tthis.updateDisplay();\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$disable = this.$text;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\treset() {\n\t\tthis._setValueFromHexString( this._initialValueHexString );\n\t\treturn this;\n\t}\n\n\t_setValueFromHexString( value ) {\n\n\t\tif ( this._format.isPrimitive ) {\n\n\t\t\tconst newValue = this._format.fromHexString( value );\n\t\t\tthis.setValue( newValue );\n\n\t\t} else {\n\n\t\t\tthis._format.fromHexString( value, this.getValue(), this._rgbScale );\n\t\t\tthis._callOnChange();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t}\n\n\tsave() {\n\t\treturn this._format.toHexString( this.getValue(), this._rgbScale );\n\t}\n\n\tload( value ) {\n\t\tthis._setValueFromHexString( value );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.value = this._format.toHexString( this.getValue(), this._rgbScale );\n\t\tif ( !this._textFocused ) {\n\t\t\tthis.$text.value = this.$input.value.substring( 1 );\n\t\t}\n\t\tthis.$display.style.backgroundColor = this.$input.value;\n\t\treturn this;\n\t}\n\n}\n\nclass FunctionController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'function' );\n\n\t\t// Buttons are the only case where widget contains name\n\t\tthis.$button = document.createElement( 'button' );\n\t\tthis.$button.appendChild( this.$name );\n\t\tthis.$widget.appendChild( this.$button );\n\n\t\tthis.$button.addEventListener( 'click', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.getValue().call( this.object );\n\t\t} );\n\n\t\t// enables :active pseudo class on mobile\n\t\tthis.$button.addEventListener( 'touchstart', () => {}, { passive: true } );\n\n\t\tthis.$disable = this.$button;\n\n\t}\n\n}\n\nclass NumberController extends Controller {\n\n\tconstructor( parent, object, property, min, max, step ) {\n\n\t\tsuper( parent, object, property, 'number' );\n\n\t\tthis._initInput();\n\n\t\tthis.min( min );\n\t\tthis.max( max );\n\n\t\tconst stepExplicit = step !== undefined;\n\t\tthis.step( stepExplicit ? step : this._getImplicitStep(), stepExplicit );\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tmin( min ) {\n\t\tthis._min = min;\n\t\tthis._onUpdateMinMax();\n\t\treturn this;\n\t}\n\n\tmax( max ) {\n\t\tthis._max = max;\n\t\tthis._onUpdateMinMax();\n\t\treturn this;\n\t}\n\n\tstep( step, explicit = true ) {\n\t\tthis._step = step;\n\t\tthis._stepExplicit = explicit;\n\t\treturn this;\n\t}\n\n\tupdateDisplay() {\n\n\t\tconst value = this.getValue();\n\n\t\tif ( this._hasSlider ) {\n\n\t\t\tlet percent = ( value - this._min ) / ( this._max - this._min );\n\t\t\tpercent = Math.max( 0, Math.min( percent, 1 ) );\n\n\t\t\tthis.$fill.style.width = percent * 100 + '%';\n\n\t\t}\n\n\t\tif ( !this._inputFocused ) {\n\t\t\tthis.$input.value = value;\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_initInput() {\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'number' );\n\t\tthis.$input.setAttribute( 'step', 'any' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$disable = this.$input;\n\n\t\tconst onInput = () => {\n\n\t\t\tconst value = parseFloat( this.$input.value );\n\n\t\t\tif ( isNaN( value ) ) return;\n\n\t\t\tthis.setValue( this._clamp( value ) );\n\n\t\t};\n\n\t\t// Keys & mouse wheel\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst increment = delta => {\n\n\t\t\tconst value = parseFloat( this.$input.value );\n\n\t\t\tif ( isNaN( value ) ) return;\n\n\t\t\tthis._snapClampSetValue( value + delta );\n\n\t\t\t// Force the input to updateDisplay when it's focused\n\t\t\tthis.$input.value = this.getValue();\n\n\t\t};\n\n\t\tconst onKeyDown = e => {\n\t\t\tif ( e.code === 'Enter' ) {\n\t\t\t\tthis.$input.blur();\n\t\t\t}\n\t\t\tif ( e.code === 'ArrowUp' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._arrowKeyMultiplier( e ) );\n\t\t\t}\n\t\t\tif ( e.code === 'ArrowDown' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._arrowKeyMultiplier( e ) * -1 );\n\t\t\t}\n\t\t};\n\n\t\tconst onWheel = e => {\n\t\t\tif ( this._inputFocused ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._normalizeMouseWheel( e ) );\n\t\t\t}\n\t\t};\n\n\t\t// Vertical drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tlet testingForVerticalDrag = false,\n\t\t\tinitClientX,\n\t\t\tinitClientY,\n\t\t\tprevClientY,\n\t\t\tinitValue,\n\t\t\tdragDelta;\n\n\t\t// Once the mouse is dragged more than DRAG_THRESH px on any axis, we decide\n\t\t// on the user's intent: horizontal means highlight, vertical means drag.\n\t\tconst DRAG_THRESH = 5;\n\n\t\tconst onMouseDown = e => {\n\n\t\t\tinitClientX = e.clientX;\n\t\t\tinitClientY = prevClientY = e.clientY;\n\t\t\ttestingForVerticalDrag = true;\n\n\t\t\tinitValue = this.getValue();\n\t\t\tdragDelta = 0;\n\n\t\t\twindow.addEventListener( 'mousemove', onMouseMove );\n\t\t\twindow.addEventListener( 'mouseup', onMouseUp );\n\n\t\t};\n\n\t\tconst onMouseMove = e => {\n\n\t\t\tif ( testingForVerticalDrag ) {\n\n\t\t\t\tconst dx = e.clientX - initClientX;\n\t\t\t\tconst dy = e.clientY - initClientY;\n\n\t\t\t\tif ( Math.abs( dy ) > DRAG_THRESH ) {\n\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.$input.blur();\n\t\t\t\t\ttestingForVerticalDrag = false;\n\t\t\t\t\tthis._setDraggingStyle( true, 'vertical' );\n\n\t\t\t\t} else if ( Math.abs( dx ) > DRAG_THRESH ) {\n\n\t\t\t\t\tonMouseUp();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// This isn't an else so that the first move counts towards dragDelta\n\t\t\tif ( !testingForVerticalDrag ) {\n\n\t\t\t\tconst dy = e.clientY - prevClientY;\n\n\t\t\t\tdragDelta -= dy * this._step * this._arrowKeyMultiplier( e );\n\n\t\t\t\t// Clamp dragDelta so we don't have 'dead space' after dragging past bounds.\n\t\t\t\t// We're okay with the fact that bounds can be undefined here.\n\t\t\t\tif ( initValue + dragDelta > this._max ) {\n\t\t\t\t\tdragDelta = this._max - initValue;\n\t\t\t\t} else if ( initValue + dragDelta < this._min ) {\n\t\t\t\t\tdragDelta = this._min - initValue;\n\t\t\t\t}\n\n\t\t\t\tthis._snapClampSetValue( initValue + dragDelta );\n\n\t\t\t}\n\n\t\t\tprevClientY = e.clientY;\n\n\t\t};\n\n\t\tconst onMouseUp = () => {\n\t\t\tthis._setDraggingStyle( false, 'vertical' );\n\t\t\tthis._callOnFinishChange();\n\t\t\twindow.removeEventListener( 'mousemove', onMouseMove );\n\t\t\twindow.removeEventListener( 'mouseup', onMouseUp );\n\t\t};\n\n\t\t// Focus state & onFinishChange\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst onFocus = () => {\n\t\t\tthis._inputFocused = true;\n\t\t};\n\n\t\tconst onBlur = () => {\n\t\t\tthis._inputFocused = false;\n\t\t\tthis.updateDisplay();\n\t\t\tthis._callOnFinishChange();\n\t\t};\n\n\t\tthis.$input.addEventListener( 'input', onInput );\n\t\tthis.$input.addEventListener( 'keydown', onKeyDown );\n\t\tthis.$input.addEventListener( 'wheel', onWheel, { passive: false } );\n\t\tthis.$input.addEventListener( 'mousedown', onMouseDown );\n\t\tthis.$input.addEventListener( 'focus', onFocus );\n\t\tthis.$input.addEventListener( 'blur', onBlur );\n\n\t}\n\n\t_initSlider() {\n\n\t\tthis._hasSlider = true;\n\n\t\t// Build DOM\n\t\t// ---------------------------------------------------------------------\n\n\t\tthis.$slider = document.createElement( 'div' );\n\t\tthis.$slider.classList.add( 'slider' );\n\n\t\tthis.$fill = document.createElement( 'div' );\n\t\tthis.$fill.classList.add( 'fill' );\n\n\t\tthis.$slider.appendChild( this.$fill );\n\t\tthis.$widget.insertBefore( this.$slider, this.$input );\n\n\t\tthis.domElement.classList.add( 'hasSlider' );\n\n\t\t// Map clientX to value\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst map = ( v, a, b, c, d ) => {\n\t\t\treturn ( v - a ) / ( b - a ) * ( d - c ) + c;\n\t\t};\n\n\t\tconst setValueFromX = clientX => {\n\t\t\tconst rect = this.$slider.getBoundingClientRect();\n\t\t\tlet value = map( clientX, rect.left, rect.right, this._min, this._max );\n\t\t\tthis._snapClampSetValue( value );\n\t\t};\n\n\t\t// Mouse drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst mouseDown = e => {\n\t\t\tthis._setDraggingStyle( true );\n\t\t\tsetValueFromX( e.clientX );\n\t\t\twindow.addEventListener( 'mousemove', mouseMove );\n\t\t\twindow.addEventListener( 'mouseup', mouseUp );\n\t\t};\n\n\t\tconst mouseMove = e => {\n\t\t\tsetValueFromX( e.clientX );\n\t\t};\n\n\t\tconst mouseUp = () => {\n\t\t\tthis._callOnFinishChange();\n\t\t\tthis._setDraggingStyle( false );\n\t\t\twindow.removeEventListener( 'mousemove', mouseMove );\n\t\t\twindow.removeEventListener( 'mouseup', mouseUp );\n\t\t};\n\n\t\t// Touch drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tlet testingForScroll = false, prevClientX, prevClientY;\n\n\t\tconst beginTouchDrag = e => {\n\t\t\te.preventDefault();\n\t\t\tthis._setDraggingStyle( true );\n\t\t\tsetValueFromX( e.touches[ 0 ].clientX );\n\t\t\ttestingForScroll = false;\n\t\t};\n\n\t\tconst onTouchStart = e => {\n\n\t\t\tif ( e.touches.length > 1 ) return;\n\n\t\t\t// If we're in a scrollable container, we should wait for the first\n\t\t\t// touchmove to see if the user is trying to slide or scroll.\n\t\t\tif ( this._hasScrollBar ) {\n\n\t\t\t\tprevClientX = e.touches[ 0 ].clientX;\n\t\t\t\tprevClientY = e.touches[ 0 ].clientY;\n\t\t\t\ttestingForScroll = true;\n\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, we can set the value straight away on touchstart.\n\t\t\t\tbeginTouchDrag( e );\n\n\t\t\t}\n\n\t\t\twindow.addEventListener( 'touchmove', onTouchMove );\n\t\t\twindow.addEventListener( 'touchend', onTouchEnd );\n\n\t\t};\n\n\t\tconst onTouchMove = e => {\n\n\t\t\tif ( testingForScroll ) {\n\n\t\t\t\tconst dx = e.touches[ 0 ].clientX - prevClientX;\n\t\t\t\tconst dy = e.touches[ 0 ].clientY - prevClientY;\n\n\t\t\t\tif ( Math.abs( dx ) > Math.abs( dy ) ) {\n\n\t\t\t\t\t// We moved horizontally, set the value and stop checking.\n\t\t\t\t\tbeginTouchDrag( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// This was, in fact, an attempt to scroll. Abort.\n\t\t\t\t\twindow.removeEventListener( 'touchmove', onTouchMove );\n\t\t\t\t\twindow.removeEventListener( 'touchend', onTouchEnd );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\te.preventDefault();\n\t\t\t\tsetValueFromX( e.touches[ 0 ].clientX );\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst onTouchEnd = () => {\n\t\t\tthis._callOnFinishChange();\n\t\t\tthis._setDraggingStyle( false );\n\t\t\twindow.removeEventListener( 'touchmove', onTouchMove );\n\t\t\twindow.removeEventListener( 'touchend', onTouchEnd );\n\t\t};\n\n\t\t// Mouse wheel\n\t\t// ---------------------------------------------------------------------\n\n\t\t// We have to use a debounced function to call onFinishChange because\n\t\t// there's no way to tell when the user is \"done\" mouse-wheeling.\n\t\tconst callOnFinishChange = this._callOnFinishChange.bind( this );\n\t\tconst WHEEL_DEBOUNCE_TIME = 400;\n\t\tlet wheelFinishChangeTimeout;\n\n\t\tconst onWheel = e => {\n\n\t\t\t// ignore vertical wheels if there's a scrollbar\n\t\t\tconst isVertical = Math.abs( e.deltaX ) < Math.abs( e.deltaY );\n\t\t\tif ( isVertical && this._hasScrollBar ) return;\n\n\t\t\te.preventDefault();\n\n\t\t\t// set value\n\t\t\tconst delta = this._normalizeMouseWheel( e ) * this._step;\n\t\t\tthis._snapClampSetValue( this.getValue() + delta );\n\n\t\t\t// force the input to updateDisplay when it's focused\n\t\t\tthis.$input.value = this.getValue();\n\n\t\t\t// debounce onFinishChange\n\t\t\tclearTimeout( wheelFinishChangeTimeout );\n\t\t\twheelFinishChangeTimeout = setTimeout( callOnFinishChange, WHEEL_DEBOUNCE_TIME );\n\n\t\t};\n\n\t\tthis.$slider.addEventListener( 'mousedown', mouseDown );\n\t\tthis.$slider.addEventListener( 'touchstart', onTouchStart, { passive: false } );\n\t\tthis.$slider.addEventListener( 'wheel', onWheel, { passive: false } );\n\n\t}\n\n\t_setDraggingStyle( active, axis = 'horizontal' ) {\n\t\tif ( this.$slider ) {\n\t\t\tthis.$slider.classList.toggle( 'active', active );\n\t\t}\n\t\tdocument.body.classList.toggle( 'lil-gui-dragging', active );\n\t\tdocument.body.classList.toggle( `lil-gui-${axis}`, active );\n\t}\n\n\t_getImplicitStep() {\n\n\t\tif ( this._hasMin && this._hasMax ) {\n\t\t\treturn ( this._max - this._min ) / 1000;\n\t\t}\n\n\t\treturn 0.1;\n\n\t}\n\n\t_onUpdateMinMax() {\n\n\t\tif ( !this._hasSlider && this._hasMin && this._hasMax ) {\n\n\t\t\t// If this is the first time we're hearing about min and max\n\t\t\t// and we haven't explicitly stated what our step is, let's\n\t\t\t// update that too.\n\t\t\tif ( !this._stepExplicit ) {\n\t\t\t\tthis.step( this._getImplicitStep(), false );\n\t\t\t}\n\n\t\t\tthis._initSlider();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t}\n\n\t_normalizeMouseWheel( e ) {\n\n\t\tlet { deltaX, deltaY } = e;\n\n\t\t// Safari and Chrome report weird non-integral values for a notched wheel,\n\t\t// but still expose actual lines scrolled via wheelDelta. Notched wheels\n\t\t// should behave the same way as arrow keys.\n\t\tif ( Math.floor( e.deltaY ) !== e.deltaY && e.wheelDelta ) {\n\t\t\tdeltaX = 0;\n\t\t\tdeltaY = -e.wheelDelta / 120;\n\t\t\tdeltaY *= this._stepExplicit ? 1 : 10;\n\t\t}\n\n\t\tconst wheel = deltaX + -deltaY;\n\n\t\treturn wheel;\n\n\t}\n\n\t_arrowKeyMultiplier( e ) {\n\n\t\tlet mult = this._stepExplicit ? 1 : 10;\n\n\t\tif ( e.shiftKey ) {\n\t\t\tmult *= 10;\n\t\t} else if ( e.altKey ) {\n\t\t\tmult /= 10;\n\t\t}\n\n\t\treturn mult;\n\n\t}\n\n\t_snap( value ) {\n\n\t\t// This would be the logical way to do things, but floating point errors.\n\t\t// return Math.round( value / this._step ) * this._step;\n\n\t\t// Using inverse step solves a lot of them, but not all\n\t\t// const inverseStep = 1 / this._step;\n\t\t// return Math.round( value * inverseStep ) / inverseStep;\n\n\t\t// Not happy about this, but haven't seen it break.\n\t\tconst r = Math.round( value / this._step ) * this._step;\n\t\treturn parseFloat( r.toPrecision( 15 ) );\n\n\t}\n\n\t_clamp( value ) {\n\t\t// either condition is false if min or max is undefined\n\t\tif ( value < this._min ) value = this._min;\n\t\tif ( value > this._max ) value = this._max;\n\t\treturn value;\n\t}\n\n\t_snapClampSetValue( value ) {\n\t\tthis.setValue( this._clamp( this._snap( value ) ) );\n\t}\n\n\tget _hasScrollBar() {\n\t\tconst root = this.parent.root.$children;\n\t\treturn root.scrollHeight > root.clientHeight;\n\t}\n\n\tget _hasMin() {\n\t\treturn this._min !== undefined;\n\t}\n\n\tget _hasMax() {\n\t\treturn this._max !== undefined;\n\t}\n\n}\n\nclass OptionController extends Controller {\n\n\tconstructor( parent, object, property, options ) {\n\n\t\tsuper( parent, object, property, 'option' );\n\n\t\tthis.$select = document.createElement( 'select' );\n\t\tthis.$select.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$display = document.createElement( 'div' );\n\t\tthis.$display.classList.add( 'display' );\n\n\t\tthis._values = Array.isArray( options ) ? options : Object.values( options );\n\t\tthis._names = Array.isArray( options ) ? options : Object.keys( options );\n\n\t\tthis._names.forEach( name => {\n\t\t\tconst $option = document.createElement( 'option' );\n\t\t\t$option.innerHTML = name;\n\t\t\tthis.$select.appendChild( $option );\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'change', () => {\n\t\t\tthis.setValue( this._values[ this.$select.selectedIndex ] );\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'focus', () => {\n\t\t\tthis.$display.classList.add( 'focus' );\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'blur', () => {\n\t\t\tthis.$display.classList.remove( 'focus' );\n\t\t} );\n\n\t\tthis.$widget.appendChild( this.$select );\n\t\tthis.$widget.appendChild( this.$display );\n\n\t\tthis.$disable = this.$select;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tconst value = this.getValue();\n\t\tconst index = this._values.indexOf( value );\n\t\tthis.$select.selectedIndex = index;\n\t\tthis.$display.innerHTML = index === -1 ? value : this._names[ index ];\n\t\treturn this;\n\t}\n\n}\n\nclass StringController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'string' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'text' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$input.addEventListener( 'input', () => {\n\t\t\tthis.setValue( this.$input.value );\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'keydown', e => {\n\t\t\tif ( e.code === 'Enter' ) {\n\t\t\t\tthis.$input.blur();\n\t\t\t}\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'blur', () => {\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$disable = this.$input;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.value = this.getValue();\n\t\treturn this;\n\t}\n\n}\n\nconst stylesheet = `.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  background-color: var(--background-color);\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, \"Droid Sans Mono\", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean .widget {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: \" \";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: \"lil-gui\";\n  content: \"↕\";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background-color: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background-color: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background-color: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  height: var(--title-height);\n  line-height: calc(var(--title-height) - 4px);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  -webkit-tap-highlight-color: transparent;\n  cursor: pointer;\n  outline: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: \"lil-gui\";\n  content: \"▾\";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: \"▸\";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: \"Empty\";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui input {\n  -webkit-tap-highlight-color: transparent;\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input::-webkit-outer-spin-button,\n.lil-gui input::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.lil-gui input[type=number] {\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  -webkit-appearance: none;\n  height: var(--checkbox-size);\n  width: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: \"lil-gui\";\n  content: \"✓\";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  border: 1px solid var(--widget-color);\n  text-align: center;\n  line-height: calc(var(--widget-height) - 4px);\n}\n@media (hover: hover) {\n  .lil-gui button:hover {\n    background: var(--hover-color);\n    border-color: var(--hover-color);\n  }\n  .lil-gui button:focus {\n    border-color: var(--focus-color);\n  }\n}\n.lil-gui button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: \"lil-gui\";\n  src: url(\"data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==\") format(\"woff\");\n}`;\n\nfunction _injectStyles( cssContent ) {\n\tconst injected = document.createElement( 'style' );\n\tinjected.innerHTML = cssContent;\n\tconst before = document.querySelector( 'head link[rel=stylesheet], head style' );\n\tif ( before ) {\n\t\tdocument.head.insertBefore( injected, before );\n\t} else {\n\t\tdocument.head.appendChild( injected );\n\t}\n}\n\nlet stylesInjected = false;\n\nclass GUI {\n\n\t/**\n\t * Creates a panel that holds controllers.\n\t * @example\n\t * new GUI();\n\t * new GUI( { container: document.getElementById( 'custom' ) } );\n\t *\n\t * @param {object} [options]\n\t * @param {boolean} [options.autoPlace=true]\n\t * Adds the GUI to `document.body` and fixes it to the top right of the page.\n\t *\n\t * @param {HTMLElement} [options.container]\n\t * Adds the GUI to this DOM element. Overrides `autoPlace`.\n\t *\n\t * @param {number} [options.width=245]\n\t * Width of the GUI in pixels, usually set when name labels become too long. Note that you can make\n\t * name labels wider in CSS with `.lil‑gui { ‑‑name‑width: 55% }`\n\t *\n\t * @param {string} [options.title=Controls]\n\t * Name to display in the title bar.\n\t *\n\t * @param {boolean} [options.injectStyles=true]\n\t * Injects the default stylesheet into the page if this is the first GUI.\n\t * Pass `false` to use your own stylesheet.\n\t *\n\t * @param {number} [options.touchStyles=true]\n\t * Makes controllers larger on touch devices. Pass `false` to disable touch styles.\n\t *\n\t * @param {GUI} [options.parent]\n\t * Adds this GUI as a child in another GUI. Usually this is done for you by `addFolder()`.\n\t *\n\t */\n\tconstructor( {\n\t\tparent,\n\t\tautoPlace = parent === undefined,\n\t\tcontainer,\n\t\twidth,\n\t\ttitle = 'Controls',\n\t\tinjectStyles = true,\n\t\ttouchStyles = true\n\t} = {} ) {\n\n\t\t/**\n\t\t * The GUI containing this folder, or `undefined` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * The top level GUI containing this folder, or `this` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.root = parent ? parent.root : this;\n\n\t\t/**\n\t\t * The list of controllers and folders contained by this GUI.\n\t\t * @type {Array<GUI|Controller>}\n\t\t */\n\t\tthis.children = [];\n\n\t\t/**\n\t\t * The list of controllers contained by this GUI.\n\t\t * @type {Array<Controller>}\n\t\t */\n\t\tthis.controllers = [];\n\n\t\t/**\n\t\t * The list of folders contained by this GUI.\n\t\t * @type {Array<GUI>}\n\t\t */\n\t\tthis.folders = [];\n\n\t\t/**\n\t\t * Used to determine if the GUI is closed. Use `gui.open()` or `gui.close()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._closed = false;\n\n\t\t/**\n\t\t * Used to determine if the GUI is hidden. Use `gui.show()` or `gui.hide()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._hidden = false;\n\n\t\t/**\n\t\t * The outermost container element.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.domElement = document.createElement( 'div' );\n\t\tthis.domElement.classList.add( 'lil-gui' );\n\n\t\t/**\n\t\t * The DOM element that contains the title.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$title = document.createElement( 'div' );\n\t\tthis.$title.classList.add( 'title' );\n\t\tthis.$title.setAttribute( 'role', 'button' );\n\t\tthis.$title.setAttribute( 'aria-expanded', true );\n\t\tthis.$title.setAttribute( 'tabindex', 0 );\n\n\t\tthis.$title.addEventListener( 'click', () => this.openAnimated( this._closed ) );\n\t\tthis.$title.addEventListener( 'keydown', e => {\n\t\t\tif ( e.code === 'Enter' || e.code === 'Space' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.$title.click();\n\t\t\t}\n\t\t} );\n\n\t\t// enables :active pseudo class on mobile\n\t\tthis.$title.addEventListener( 'touchstart', () => {}, { passive: true } );\n\n\t\t/**\n\t\t * The DOM element that contains children.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$children = document.createElement( 'div' );\n\t\tthis.$children.classList.add( 'children' );\n\n\t\tthis.domElement.appendChild( this.$title );\n\t\tthis.domElement.appendChild( this.$children );\n\n\t\tthis.title( title );\n\n\t\tif ( touchStyles ) {\n\t\t\tthis.domElement.classList.add( 'allow-touch-styles' );\n\t\t}\n\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.children.push( this );\n\t\t\tthis.parent.folders.push( this );\n\n\t\t\tthis.parent.$children.appendChild( this.domElement );\n\n\t\t\t// Stop the constructor early, everything onward only applies to root GUI's\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.domElement.classList.add( 'root' );\n\n\t\t// Inject stylesheet if we haven't done that yet\n\t\tif ( !stylesInjected && injectStyles ) {\n\t\t\t_injectStyles( stylesheet );\n\t\t\tstylesInjected = true;\n\t\t}\n\n\t\tif ( container ) {\n\n\t\t\tcontainer.appendChild( this.domElement );\n\n\t\t} else if ( autoPlace ) {\n\n\t\t\tthis.domElement.classList.add( 'autoPlace' );\n\t\t\tdocument.body.appendChild( this.domElement );\n\n\t\t}\n\n\t\tif ( width ) {\n\t\t\tthis.domElement.style.setProperty( '--width', width + 'px' );\n\t\t}\n\n\t\t// Don't fire global key events while typing in the GUI:\n\t\tthis.domElement.addEventListener( 'keydown', e => e.stopPropagation() );\n\t\tthis.domElement.addEventListener( 'keyup', e => e.stopPropagation() );\n\n\t}\n\n\t/**\n\t * Adds a controller to the GUI, inferring controller type using the `typeof` operator.\n\t * @example\n\t * gui.add( object, 'property' );\n\t * gui.add( object, 'number', 0, 100, 1 );\n\t * gui.add( object, 'options', [ 1, 2, 3 ] );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number|object|Array} [$1] Minimum value for number controllers, or the set of\n\t * selectable values for a dropdown.\n\t * @param {number} [max] Maximum value for number controllers.\n\t * @param {number} [step] Step value for number controllers.\n\t * @returns {Controller}\n\t */\n\tadd( object, property, $1, max, step ) {\n\n\t\tif ( Object( $1 ) === $1 ) {\n\n\t\t\treturn new OptionController( this, object, property, $1 );\n\n\t\t}\n\n\t\tconst initialValue = object[ property ];\n\n\t\tswitch ( typeof initialValue ) {\n\n\t\t\tcase 'number':\n\n\t\t\t\treturn new NumberController( this, object, property, $1, max, step );\n\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn new BooleanController( this, object, property );\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn new StringController( this, object, property );\n\n\t\t\tcase 'function':\n\n\t\t\t\treturn new FunctionController( this, object, property );\n\n\t\t}\n\n\t\tconsole.error( `gui.add failed\n\tproperty:`, property, `\n\tobject:`, object, `\n\tvalue:`, initialValue );\n\n\t}\n\n\t/**\n\t * Adds a color controller to the GUI.\n\t * @example\n\t * params = {\n\t * \tcssColor: '#ff00ff',\n\t * \trgbColor: { r: 0, g: 0.2, b: 0.4 },\n\t * \tcustomRange: [ 0, 127, 255 ],\n\t * };\n\t *\n\t * gui.addColor( params, 'cssColor' );\n\t * gui.addColor( params, 'rgbColor' );\n\t * gui.addColor( params, 'customRange', 255 );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number} rgbScale Maximum value for a color channel when using an RGB color. You may\n\t * need to set this to 255 if your colors are too dark.\n\t * @returns {Controller}\n\t */\n\taddColor( object, property, rgbScale = 1 ) {\n\t\treturn new ColorController( this, object, property, rgbScale );\n\t}\n\n\t/**\n\t * Adds a folder to the GUI, which is just another GUI. This method returns\n\t * the nested GUI so you can add controllers to it.\n\t * @example\n\t * const folder = gui.addFolder( 'Position' );\n\t * folder.add( position, 'x' );\n\t * folder.add( position, 'y' );\n\t * folder.add( position, 'z' );\n\t *\n\t * @param {string} title Name to display in the folder's title bar.\n\t * @returns {GUI}\n\t */\n\taddFolder( title ) {\n\t\treturn new GUI( { parent: this, title } );\n\t}\n\n\t/**\n\t * Recalls values that were saved with `gui.save()`.\n\t * @param {object} obj\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */\n\tload( obj, recursive = true ) {\n\n\t\tif ( obj.controllers ) {\n\n\t\t\tthis.controllers.forEach( c => {\n\n\t\t\t\tif ( c instanceof FunctionController ) return;\n\n\t\t\t\tif ( c._name in obj.controllers ) {\n\t\t\t\t\tc.load( obj.controllers[ c._name ] );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( recursive && obj.folders ) {\n\n\t\t\tthis.folders.forEach( f => {\n\n\t\t\t\tif ( f._title in obj.folders ) {\n\t\t\t\t\tf.load( obj.folders[ f._title ] );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns an object mapping controller names to values. The object can be passed to `gui.load()` to\n\t * recall these values.\n\t * @example\n\t * {\n\t * \tcontrollers: {\n\t * \t\tprop1: 1,\n\t * \t\tprop2: 'value',\n\t * \t\t...\n\t * \t},\n\t * \tfolders: {\n\t * \t\tfolderName1: { controllers, folders },\n\t * \t\tfolderName2: { controllers, folders }\n\t * \t\t...\n\t * \t}\n\t * }\n\t *\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {object}\n\t */\n\tsave( recursive = true ) {\n\n\t\tconst obj = {\n\t\t\tcontrollers: {},\n\t\t\tfolders: {}\n\t\t};\n\n\t\tthis.controllers.forEach( c => {\n\n\t\t\tif ( c instanceof FunctionController ) return;\n\n\t\t\tif ( c._name in obj.controllers ) {\n\t\t\t\tthrow new Error( `Cannot save GUI with duplicate property \"${c._name}\"` );\n\t\t\t}\n\n\t\t\tobj.controllers[ c._name ] = c.save();\n\n\t\t} );\n\n\t\tif ( recursive ) {\n\n\t\t\tthis.folders.forEach( f => {\n\n\t\t\t\tif ( f._title in obj.folders ) {\n\t\t\t\t\tthrow new Error( `Cannot save GUI with duplicate folder \"${f._title}\"` );\n\t\t\t\t}\n\n\t\t\t\tobj.folders[ f._title ] = f.save();\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn obj;\n\n\t}\n\n\t/**\n\t * Opens a GUI or folder. GUI and folders are open by default.\n\t * @param {boolean} open Pass false to close\n\t * @returns {this}\n\t * @example\n\t * gui.open(); // open\n\t * gui.open( false ); // close\n\t * gui.open( gui._closed ); // toggle\n\t */\n\topen( open = true ) {\n\n\t\tthis._closed = !open;\n\n\t\tthis.$title.setAttribute( 'aria-expanded', !this._closed );\n\t\tthis.domElement.classList.toggle( 'closed', this._closed );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Closes the GUI.\n\t * @returns {this}\n\t */\n\tclose() {\n\t\treturn this.open( false );\n\t}\n\n\t/**\n\t * Shows the GUI after it's been hidden.\n\t * @param {boolean} show\n\t * @returns {this}\n\t * @example\n\t * gui.show();\n\t * gui.show( false ); // hide\n\t * gui.show( gui._hidden ); // toggle\n\t */\n\tshow( show = true ) {\n\n\t\tthis._hidden = !show;\n\n\t\tthis.domElement.style.display = this._hidden ? 'none' : '';\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Hides the GUI.\n\t * @returns {this}\n\t */\n\thide() {\n\t\treturn this.show( false );\n\t}\n\n\topenAnimated( open = true ) {\n\n\t\t// set state immediately\n\t\tthis._closed = !open;\n\n\t\tthis.$title.setAttribute( 'aria-expanded', !this._closed );\n\n\t\t// wait for next frame to measure $children\n\t\trequestAnimationFrame( () => {\n\n\t\t\t// explicitly set initial height for transition\n\t\t\tconst initialHeight = this.$children.clientHeight;\n\t\t\tthis.$children.style.height = initialHeight + 'px';\n\n\t\t\tthis.domElement.classList.add( 'transition' );\n\n\t\t\tconst onTransitionEnd = e => {\n\t\t\t\tif ( e.target !== this.$children ) return;\n\t\t\t\tthis.$children.style.height = '';\n\t\t\t\tthis.domElement.classList.remove( 'transition' );\n\t\t\t\tthis.$children.removeEventListener( 'transitionend', onTransitionEnd );\n\t\t\t};\n\n\t\t\tthis.$children.addEventListener( 'transitionend', onTransitionEnd );\n\n\t\t\t// todo: this is wrong if children's scrollHeight makes for a gui taller than maxHeight\n\t\t\tconst targetHeight = !open ? 0 : this.$children.scrollHeight;\n\n\t\t\tthis.domElement.classList.toggle( 'closed', !open );\n\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tthis.$children.style.height = targetHeight + 'px';\n\t\t\t} );\n\n\t\t} );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Change the title of this GUI.\n\t * @param {string} title\n\t * @returns {this}\n\t */\n\ttitle( title ) {\n\t\t/**\n\t\t * Current title of the GUI. Use `gui.title( 'Title' )` to modify this value.\n\t\t * @type {string}\n\t\t */\n\t\tthis._title = title;\n\t\tthis.$title.innerHTML = title;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resets all controllers to their initial values.\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */\n\treset( recursive = true ) {\n\t\tconst controllers = recursive ? this.controllersRecursive() : this.controllers;\n\t\tcontrollers.forEach( c => c.reset() );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pass a function to be called whenever a controller in this GUI changes.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */\n\tonChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onChange = callback;\n\t\treturn this;\n\t}\n\n\t_callOnChange( controller ) {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnChange( controller );\n\t\t}\n\n\t\tif ( this._onChange !== undefined ) {\n\t\t\tthis._onChange.call( this, {\n\t\t\t\tobject: controller.object,\n\t\t\t\tproperty: controller.property,\n\t\t\t\tvalue: controller.getValue(),\n\t\t\t\tcontroller\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Pass a function to be called whenever a controller in this GUI has finished changing.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onFinishChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */\n\tonFinishChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onFinishChange = callback;\n\t\treturn this;\n\t}\n\n\t_callOnFinishChange( controller ) {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnFinishChange( controller );\n\t\t}\n\n\t\tif ( this._onFinishChange !== undefined ) {\n\t\t\tthis._onFinishChange.call( this, {\n\t\t\t\tobject: controller.object,\n\t\t\t\tproperty: controller.property,\n\t\t\t\tvalue: controller.getValue(),\n\t\t\t\tcontroller\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys all DOM elements and event listeners associated with this GUI\n\t */\n\tdestroy() {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent.children.splice( this.parent.children.indexOf( this ), 1 );\n\t\t\tthis.parent.folders.splice( this.parent.folders.indexOf( this ), 1 );\n\t\t}\n\n\t\tif ( this.domElement.parentElement ) {\n\t\t\tthis.domElement.parentElement.removeChild( this.domElement );\n\t\t}\n\n\t\tArray.from( this.children ).forEach( c => c.destroy() );\n\n\t}\n\n\t/**\n\t * Returns an array of controllers contained by this GUI and its descendents.\n\t * @returns {Controller[]}\n\t */\n\tcontrollersRecursive() {\n\t\tlet controllers = Array.from( this.controllers );\n\t\tthis.folders.forEach( f => {\n\t\t\tcontrollers = controllers.concat( f.controllersRecursive() );\n\t\t} );\n\t\treturn controllers;\n\t}\n\n\t/**\n\t * Returns an array of folders contained by this GUI and its descendents.\n\t * @returns {GUI[]}\n\t */\n\tfoldersRecursive() {\n\t\tlet folders = Array.from( this.folders );\n\t\tthis.folders.forEach( f => {\n\t\t\tfolders = folders.concat( f.foldersRecursive() );\n\t\t} );\n\t\treturn folders;\n\t}\n\n}\n\nexport default GUI;\nexport { BooleanController, ColorController, Controller, FunctionController, GUI, NumberController, OptionController, StringController };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAMA,UAAN,CAAiB;EAEhBC,WAAW,CAAEC,MAAF,EAAUC,MAAV,EAAkBC,QAAlB,EAA4BC,SAA5B,EAA2D;IAAA,IAApBC,SAAoB,uEAAR,KAAQ;;IAErE;AACF;AACA;AACA;IACE,KAAKJ,MAAL,GAAcA,MAAd;IAEA;AACF;AACA;AACA;;IACE,KAAKC,MAAL,GAAcA,MAAd;IAEA;AACF;AACA;AACA;;IACE,KAAKC,QAAL,GAAgBA,QAAhB;IAEA;AACF;AACA;AACA;AACA;;IACE,KAAKG,SAAL,GAAiB,KAAjB;IAEA;AACF;AACA;AACA;;IACE,KAAKC,YAAL,GAAoB,KAAKC,QAAL,EAApB;IAEA;AACF;AACA;AACA;;IACE,KAAKC,UAAL,GAAkBC,QAAQ,CAACC,aAAT,CAAwB,KAAxB,CAAlB;IACA,KAAKF,UAAL,CAAgBG,SAAhB,CAA0BC,GAA1B,CAA+B,YAA/B;IACA,KAAKJ,UAAL,CAAgBG,SAAhB,CAA0BC,GAA1B,CAA+BT,SAA/B;IAEA;AACF;AACA;AACA;;IACE,KAAKU,KAAL,GAAaJ,QAAQ,CAACC,aAAT,CAAwB,KAAxB,CAAb;IACA,KAAKG,KAAL,CAAWF,SAAX,CAAqBC,GAArB,CAA0B,MAA1B;IAEAd,UAAU,CAACgB,UAAX,GAAwBhB,UAAU,CAACgB,UAAX,IAAyB,CAAjD;IACA,KAAKD,KAAL,CAAWE,EAAX,GAAiB,gBAAe,EAAEjB,UAAU,CAACgB,UAAW,EAAxD;IAEA;AACF;AACA;AACA;;IACE,KAAKE,OAAL,GAAeP,QAAQ,CAACC,aAAT,CAAwBN,SAAxB,CAAf;IACA,KAAKY,OAAL,CAAaL,SAAb,CAAuBC,GAAvB,CAA4B,QAA5B;IAEA;AACF;AACA;AACA;;IACE,KAAKK,QAAL,GAAgB,KAAKD,OAArB;IAEA,KAAKR,UAAL,CAAgBU,WAAhB,CAA6B,KAAKL,KAAlC;IACA,KAAKL,UAAL,CAAgBU,WAAhB,CAA6B,KAAKF,OAAlC;IAEA,KAAKhB,MAAL,CAAYmB,QAAZ,CAAqBC,IAArB,CAA2B,IAA3B;IACA,KAAKpB,MAAL,CAAYqB,WAAZ,CAAwBD,IAAxB,CAA8B,IAA9B;IAEA,KAAKpB,MAAL,CAAYsB,SAAZ,CAAsBJ,WAAtB,CAAmC,KAAKV,UAAxC;IAEA,KAAKe,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA2B,IAA3B,CAAvB;IAEA,KAAKC,IAAL,CAAWvB,QAAX;EAEA;EAED;AACD;AACA;AACA;AACA;;;EACCuB,IAAI,CAAEA,IAAF,EAAS;IACZ;AACF;AACA;AACA;IACE,KAAKC,KAAL,GAAaD,IAAb;IACA,KAAKZ,KAAL,CAAWc,SAAX,GAAuBF,IAAvB;IACA,OAAO,IAAP;EACA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACCG,QAAQ,CAAEC,QAAF,EAAa;IACpB;AACF;AACA;AACA;AACA;IACE,KAAKC,SAAL,GAAiBD,QAAjB;IACA,OAAO,IAAP;EACA;EAED;AACD;AACA;AACA;;;EACCE,aAAa,GAAG;IAEf,KAAK/B,MAAL,CAAY+B,aAAZ,CAA2B,IAA3B;;IAEA,IAAK,KAAKD,SAAL,KAAmBE,SAAxB,EAAoC;MACnC,KAAKF,SAAL,CAAeG,IAAf,CAAqB,IAArB,EAA2B,KAAK1B,QAAL,EAA3B;IACA;;IAED,KAAK2B,QAAL,GAAgB,IAAhB;EAEA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACCC,cAAc,CAAEN,QAAF,EAAa;IAC1B;AACF;AACA;AACA;AACA;IACE,KAAKO,eAAL,GAAuBP,QAAvB;IACA,OAAO,IAAP;EACA;EAED;AACD;AACA;AACA;;;EACCQ,mBAAmB,GAAG;IAErB,IAAK,KAAKH,QAAV,EAAqB;MAEpB,KAAKlC,MAAL,CAAYqC,mBAAZ,CAAiC,IAAjC;;MAEA,IAAK,KAAKD,eAAL,KAAyBJ,SAA9B,EAA0C;QACzC,KAAKI,eAAL,CAAqBH,IAArB,CAA2B,IAA3B,EAAiC,KAAK1B,QAAL,EAAjC;MACA;IAED;;IAED,KAAK2B,QAAL,GAAgB,KAAhB;EAEA;EAED;AACD;AACA;AACA;;;EACCI,KAAK,GAAG;IACP,KAAKC,QAAL,CAAe,KAAKjC,YAApB;;IACA,KAAK+B,mBAAL;;IACA,OAAO,IAAP;EACA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACCG,MAAM,GAAmB;IAAA,IAAjBC,OAAiB,uEAAP,IAAO;IACxB,OAAO,KAAKC,OAAL,CAAc,CAACD,OAAf,CAAP;EACA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACCC,OAAO,GAAoB;IAAA,IAAlBC,QAAkB,uEAAP,IAAO;IAE1B,IAAKA,QAAQ,KAAK,KAAKtC,SAAvB,EAAmC,OAAO,IAAP;IAEnC,KAAKA,SAAL,GAAiBsC,QAAjB;IAEA,KAAKnC,UAAL,CAAgBG,SAAhB,CAA0BiC,MAA1B,CAAkC,UAAlC,EAA8CD,QAA9C;IACA,KAAK1B,QAAL,CAAc4B,eAAd,CAA+B,UAA/B,EAA2CF,QAA3C;IAEA,OAAO,IAAP;EAEA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACCG,OAAO,CAAEA,OAAF,EAAY;IAClB,MAAMC,UAAU,GAAG,KAAK/C,MAAL,CAAYY,GAAZ,CAAiB,KAAKX,MAAtB,EAA8B,KAAKC,QAAnC,EAA6C4C,OAA7C,CAAnB;IACAC,UAAU,CAACtB,IAAX,CAAiB,KAAKC,KAAtB;IACA,KAAKsB,OAAL;IACA,OAAOD,UAAP;EACA;EAED;AACD;AACA;AACA;AACA;;;EACCE,GAAG,CAAEA,GAAF,EAAQ;IACV,OAAO,IAAP;EACA;EAED;AACD;AACA;AACA;AACA;;;EACCC,GAAG,CAAEA,GAAF,EAAQ;IACV,OAAO,IAAP;EACA;EAED;AACD;AACA;AACA;AACA;;;EACCC,IAAI,CAAEA,IAAF,EAAS;IACZ,OAAO,IAAP;EACA;EAED;AACD;AACA;AACA;AACA;;;EACCC,MAAM,GAAkB;IAAA,IAAhBA,MAAgB,uEAAP,IAAO;;IAEvB;AACF;AACA;AACA;AACA;IACE,KAAKC,UAAL,GAAkBD,MAAlB;;IAEA,IAAK,KAAKE,iBAAL,KAA2BtB,SAAhC,EAA4C;MAC3CuB,oBAAoB,CAAE,KAAKD,iBAAP,CAApB;MACA,KAAKA,iBAAL,GAAyBtB,SAAzB;IACA;;IAED,IAAK,KAAKqB,UAAV,EAAuB;MACtB,KAAK9B,eAAL;IACA;;IAED,OAAO,IAAP;EAEA;;EAEDA,eAAe,GAAG;IAEjB,KAAK+B,iBAAL,GAAyBE,qBAAqB,CAAE,KAAKjC,eAAP,CAA9C,CAFiB,CAIjB;IACA;IACA;;IAEA,MAAMkC,QAAQ,GAAG,KAAKC,IAAL,EAAjB;;IAEA,IAAKD,QAAQ,KAAK,KAAKE,gBAAvB,EAA0C;MACzC,KAAKC,aAAL;IACA;;IAED,KAAKD,gBAAL,GAAwBF,QAAxB;EAEA;EAED;AACD;AACA;AACA;;;EACClD,QAAQ,GAAG;IACV,OAAO,KAAKN,MAAL,CAAa,KAAKC,QAAlB,CAAP;EACA;EAED;AACD;AACA;AACA;AACA;;;EACCqC,QAAQ,CAAEsB,KAAF,EAAU;IACjB,KAAK5D,MAAL,CAAa,KAAKC,QAAlB,IAA+B2D,KAA/B;;IACA,KAAK9B,aAAL;;IACA,KAAK6B,aAAL;IACA,OAAO,IAAP;EACA;EAED;AACD;AACA;AACA;AACA;;;EACCA,aAAa,GAAG;IACf,OAAO,IAAP;EACA;;EAEDE,IAAI,CAAED,KAAF,EAAU;IACb,KAAKtB,QAAL,CAAesB,KAAf;;IACA,KAAKxB,mBAAL;;IACA,OAAO,IAAP;EACA;;EAEDqB,IAAI,GAAG;IACN,OAAO,KAAKnD,QAAL,EAAP;EACA;EAED;AACD;AACA;;;EACCyC,OAAO,GAAG;IACT,KAAKI,MAAL,CAAa,KAAb;IACA,KAAKpD,MAAL,CAAYmB,QAAZ,CAAqB4C,MAArB,CAA6B,KAAK/D,MAAL,CAAYmB,QAAZ,CAAqB6C,OAArB,CAA8B,IAA9B,CAA7B,EAAmE,CAAnE;IACA,KAAKhE,MAAL,CAAYqB,WAAZ,CAAwB0C,MAAxB,CAAgC,KAAK/D,MAAL,CAAYqB,WAAZ,CAAwB2C,OAAxB,CAAiC,IAAjC,CAAhC,EAAyE,CAAzE;IACA,KAAKhE,MAAL,CAAYsB,SAAZ,CAAsB2C,WAAtB,CAAmC,KAAKzD,UAAxC;EACA;;AAvXe;;AA2XjB,MAAM0D,iBAAN,SAAgCpE,UAAhC,CAA2C;EAE1CC,WAAW,CAAEC,MAAF,EAAUC,MAAV,EAAkBC,QAAlB,EAA6B;IAEvC,MAAOF,MAAP,EAAeC,MAAf,EAAuBC,QAAvB,EAAiC,SAAjC,EAA4C,OAA5C;IAEA,KAAKiE,MAAL,GAAc1D,QAAQ,CAACC,aAAT,CAAwB,OAAxB,CAAd;IACA,KAAKyD,MAAL,CAAYC,YAAZ,CAA0B,MAA1B,EAAkC,UAAlC;IACA,KAAKD,MAAL,CAAYC,YAAZ,CAA0B,iBAA1B,EAA6C,KAAKvD,KAAL,CAAWE,EAAxD;IAEA,KAAKC,OAAL,CAAaE,WAAb,CAA0B,KAAKiD,MAA/B;IAEA,KAAKA,MAAL,CAAYE,gBAAZ,CAA8B,QAA9B,EAAwC,MAAM;MAC7C,KAAK9B,QAAL,CAAe,KAAK4B,MAAL,CAAYG,OAA3B;;MACA,KAAKjC,mBAAL;IACA,CAHD;IAKA,KAAKpB,QAAL,GAAgB,KAAKkD,MAArB;IAEA,KAAKP,aAAL;EAEA;;EAEDA,aAAa,GAAG;IACf,KAAKO,MAAL,CAAYG,OAAZ,GAAsB,KAAK/D,QAAL,EAAtB;IACA,OAAO,IAAP;EACA;;AA1ByC;;AA8B3C,SAASgE,oBAAT,CAA+BC,MAA/B,EAAwC;EAEvC,IAAIC,KAAJ,EAAWC,MAAX;;EAEA,IAAKD,KAAK,GAAGD,MAAM,CAACC,KAAP,CAAc,uBAAd,CAAb,EAAuD;IAEtDC,MAAM,GAAGD,KAAK,CAAE,CAAF,CAAd;EAEA,CAJD,MAIO,IAAKA,KAAK,GAAGD,MAAM,CAACC,KAAP,CAAc,4CAAd,CAAb,EAA4E;IAElFC,MAAM,GAAGC,QAAQ,CAAEF,KAAK,CAAE,CAAF,CAAP,CAAR,CAAuBG,QAAvB,CAAiC,EAAjC,EAAsCC,QAAtC,CAAgD,CAAhD,EAAmD,CAAnD,IACNF,QAAQ,CAAEF,KAAK,CAAE,CAAF,CAAP,CAAR,CAAuBG,QAAvB,CAAiC,EAAjC,EAAsCC,QAAtC,CAAgD,CAAhD,EAAmD,CAAnD,CADM,GAENF,QAAQ,CAAEF,KAAK,CAAE,CAAF,CAAP,CAAR,CAAuBG,QAAvB,CAAiC,EAAjC,EAAsCC,QAAtC,CAAgD,CAAhD,EAAmD,CAAnD,CAFH;EAIA,CANM,MAMA,IAAKJ,KAAK,GAAGD,MAAM,CAACC,KAAP,CAAc,qCAAd,CAAb,EAAqE;IAE3EC,MAAM,GAAGD,KAAK,CAAE,CAAF,CAAL,GAAaA,KAAK,CAAE,CAAF,CAAlB,GAA0BA,KAAK,CAAE,CAAF,CAA/B,GAAuCA,KAAK,CAAE,CAAF,CAA5C,GAAoDA,KAAK,CAAE,CAAF,CAAzD,GAAiEA,KAAK,CAAE,CAAF,CAA/E;EAEA;;EAED,IAAKC,MAAL,EAAc;IACb,OAAO,MAAMA,MAAb;EACA;;EAED,OAAO,KAAP;AAEA;;AAED,MAAMI,MAAM,GAAG;EACdC,WAAW,EAAE,IADC;EAEdN,KAAK,EAAEO,CAAC,IAAI,OAAOA,CAAP,KAAa,QAFX;EAGdC,aAAa,EAAEV,oBAHD;EAIdW,WAAW,EAAEX;AAJC,CAAf;AAOA,MAAMY,GAAG,GAAG;EACXJ,WAAW,EAAE,IADF;EAEXN,KAAK,EAAEO,CAAC,IAAI,OAAOA,CAAP,KAAa,QAFd;EAGXC,aAAa,EAAET,MAAM,IAAIG,QAAQ,CAAEH,MAAM,CAACY,SAAP,CAAkB,CAAlB,CAAF,EAAyB,EAAzB,CAHtB;EAIXF,WAAW,EAAErB,KAAK,IAAI,MAAMA,KAAK,CAACe,QAAN,CAAgB,EAAhB,EAAqBC,QAArB,CAA+B,CAA/B,EAAkC,CAAlC;AAJjB,CAAZ;AAOA,MAAMQ,KAAK,GAAG;EACbN,WAAW,EAAE,KADA;EAEbN,KAAK,EAAEa,KAAK,CAACC,OAFA;;EAGbN,aAAa,CAAET,MAAF,EAAUgB,MAAV,EAAiC;IAAA,IAAfC,QAAe,uEAAJ,CAAI;IAE7C,MAAMC,GAAG,GAAGP,GAAG,CAACF,aAAJ,CAAmBT,MAAnB,CAAZ;IAEAgB,MAAM,CAAE,CAAF,CAAN,GAAc,CAAEE,GAAG,IAAI,EAAP,GAAY,GAAd,IAAsB,GAAtB,GAA4BD,QAA1C;IACAD,MAAM,CAAE,CAAF,CAAN,GAAc,CAAEE,GAAG,IAAI,CAAP,GAAW,GAAb,IAAqB,GAArB,GAA2BD,QAAzC;IACAD,MAAM,CAAE,CAAF,CAAN,GAAc,CAAEE,GAAG,GAAG,GAAR,IAAgB,GAAhB,GAAsBD,QAApC;EAEA,CAXY;;EAYbP,WAAW,OAA8B;IAAA,IAA5B,CAAES,CAAF,EAAKC,CAAL,EAAQC,CAAR,CAA4B;IAAA,IAAfJ,QAAe,uEAAJ,CAAI;IAExCA,QAAQ,GAAG,MAAMA,QAAjB;IAEA,MAAMC,GAAG,GAAKC,CAAC,GAAGF,QAAN,IAAoB,EAApB,GACTG,CAAC,GAAGH,QAAN,IAAoB,CADT,GAETI,CAAC,GAAGJ,QAAN,IAAoB,CAFrB;IAIA,OAAON,GAAG,CAACD,WAAJ,CAAiBQ,GAAjB,CAAP;EAEA;;AAtBY,CAAd;AAyBA,MAAMI,MAAM,GAAG;EACdf,WAAW,EAAE,KADC;EAEdN,KAAK,EAAEO,CAAC,IAAIe,MAAM,CAAEf,CAAF,CAAN,KAAgBA,CAFd;;EAGdC,aAAa,CAAET,MAAF,EAAUgB,MAAV,EAAiC;IAAA,IAAfC,QAAe,uEAAJ,CAAI;IAE7C,MAAMC,GAAG,GAAGP,GAAG,CAACF,aAAJ,CAAmBT,MAAnB,CAAZ;IAEAgB,MAAM,CAACG,CAAP,GAAW,CAAED,GAAG,IAAI,EAAP,GAAY,GAAd,IAAsB,GAAtB,GAA4BD,QAAvC;IACAD,MAAM,CAACI,CAAP,GAAW,CAAEF,GAAG,IAAI,CAAP,GAAW,GAAb,IAAqB,GAArB,GAA2BD,QAAtC;IACAD,MAAM,CAACK,CAAP,GAAW,CAAEH,GAAG,GAAG,GAAR,IAAgB,GAAhB,GAAsBD,QAAjC;EAEA,CAXa;;EAYdP,WAAW,QAA8B;IAAA,IAA5B;MAAES,CAAF;MAAKC,CAAL;MAAQC;IAAR,CAA4B;IAAA,IAAfJ,QAAe,uEAAJ,CAAI;IAExCA,QAAQ,GAAG,MAAMA,QAAjB;IAEA,MAAMC,GAAG,GAAKC,CAAC,GAAGF,QAAN,IAAoB,EAApB,GACTG,CAAC,GAAGH,QAAN,IAAoB,CADT,GAETI,CAAC,GAAGJ,QAAN,IAAoB,CAFrB;IAIA,OAAON,GAAG,CAACD,WAAJ,CAAiBQ,GAAjB,CAAP;EAEA;;AAtBa,CAAf;AAyBA,MAAMM,OAAO,GAAG,CAAElB,MAAF,EAAUK,GAAV,EAAeE,KAAf,EAAsBS,MAAtB,CAAhB;;AAEA,SAASG,cAAT,CAAyBpC,KAAzB,EAAiC;EAChC,OAAOmC,OAAO,CAACE,IAAR,CAAcC,MAAM,IAAIA,MAAM,CAAC1B,KAAP,CAAcZ,KAAd,CAAxB,CAAP;AACA;;AAED,MAAMuC,eAAN,SAA8BtG,UAA9B,CAAyC;EAExCC,WAAW,CAAEC,MAAF,EAAUC,MAAV,EAAkBC,QAAlB,EAA4BuF,QAA5B,EAAuC;IAEjD,MAAOzF,MAAP,EAAeC,MAAf,EAAuBC,QAAvB,EAAiC,OAAjC;IAEA,KAAKiE,MAAL,GAAc1D,QAAQ,CAACC,aAAT,CAAwB,OAAxB,CAAd;IACA,KAAKyD,MAAL,CAAYC,YAAZ,CAA0B,MAA1B,EAAkC,OAAlC;IACA,KAAKD,MAAL,CAAYC,YAAZ,CAA0B,UAA1B,EAAsC,CAAC,CAAvC;IACA,KAAKD,MAAL,CAAYC,YAAZ,CAA0B,iBAA1B,EAA6C,KAAKvD,KAAL,CAAWE,EAAxD;IAEA,KAAKsF,KAAL,GAAa5F,QAAQ,CAACC,aAAT,CAAwB,OAAxB,CAAb;IACA,KAAK2F,KAAL,CAAWjC,YAAX,CAAyB,MAAzB,EAAiC,MAAjC;IACA,KAAKiC,KAAL,CAAWjC,YAAX,CAAyB,YAAzB,EAAuC,OAAvC;IACA,KAAKiC,KAAL,CAAWjC,YAAX,CAAyB,iBAAzB,EAA4C,KAAKvD,KAAL,CAAWE,EAAvD;IAEA,KAAKuF,QAAL,GAAgB7F,QAAQ,CAACC,aAAT,CAAwB,KAAxB,CAAhB;IACA,KAAK4F,QAAL,CAAc3F,SAAd,CAAwBC,GAAxB,CAA6B,SAA7B;IAEA,KAAK0F,QAAL,CAAcpF,WAAd,CAA2B,KAAKiD,MAAhC;IACA,KAAKnD,OAAL,CAAaE,WAAb,CAA0B,KAAKoF,QAA/B;IACA,KAAKtF,OAAL,CAAaE,WAAb,CAA0B,KAAKmF,KAA/B;IAEA,KAAKE,OAAL,GAAeN,cAAc,CAAE,KAAK3F,YAAP,CAA7B;IACA,KAAKkG,SAAL,GAAiBf,QAAjB;IAEA,KAAKgB,sBAAL,GAA8B,KAAK/C,IAAL,EAA9B;IACA,KAAKgD,YAAL,GAAoB,KAApB;IAEA,KAAKvC,MAAL,CAAYE,gBAAZ,CAA8B,OAA9B,EAAuC,MAAM;MAC5C,KAAKsC,sBAAL,CAA6B,KAAKxC,MAAL,CAAYN,KAAzC;IACA,CAFD;IAIA,KAAKM,MAAL,CAAYE,gBAAZ,CAA8B,MAA9B,EAAsC,MAAM;MAC3C,KAAKhC,mBAAL;IACA,CAFD;IAIA,KAAKgE,KAAL,CAAWhC,gBAAX,CAA6B,OAA7B,EAAsC,MAAM;MAC3C,MAAMuC,QAAQ,GAAGrC,oBAAoB,CAAE,KAAK8B,KAAL,CAAWxC,KAAb,CAArC;;MACA,IAAK+C,QAAL,EAAgB;QACf,KAAKD,sBAAL,CAA6BC,QAA7B;MACA;IACD,CALD;IAOA,KAAKP,KAAL,CAAWhC,gBAAX,CAA6B,OAA7B,EAAsC,MAAM;MAC3C,KAAKqC,YAAL,GAAoB,IAApB;MACA,KAAKL,KAAL,CAAWQ,MAAX;IACA,CAHD;IAKA,KAAKR,KAAL,CAAWhC,gBAAX,CAA6B,MAA7B,EAAqC,MAAM;MAC1C,KAAKqC,YAAL,GAAoB,KAApB;MACA,KAAK9C,aAAL;;MACA,KAAKvB,mBAAL;IACA,CAJD;IAMA,KAAKpB,QAAL,GAAgB,KAAKoF,KAArB;IAEA,KAAKzC,aAAL;EAEA;;EAEDtB,KAAK,GAAG;IACP,KAAKqE,sBAAL,CAA6B,KAAKF,sBAAlC;;IACA,OAAO,IAAP;EACA;;EAEDE,sBAAsB,CAAE9C,KAAF,EAAU;IAE/B,IAAK,KAAK0C,OAAL,CAAaxB,WAAlB,EAAgC;MAE/B,MAAM+B,QAAQ,GAAG,KAAKP,OAAL,CAAatB,aAAb,CAA4BpB,KAA5B,CAAjB;;MACA,KAAKtB,QAAL,CAAeuE,QAAf;IAEA,CALD,MAKO;MAEN,KAAKP,OAAL,CAAatB,aAAb,CAA4BpB,KAA5B,EAAmC,KAAKtD,QAAL,EAAnC,EAAoD,KAAKiG,SAAzD;;MACA,KAAKzE,aAAL;;MACA,KAAK6B,aAAL;IAEA;EAED;;EAEDF,IAAI,GAAG;IACN,OAAO,KAAK6C,OAAL,CAAarB,WAAb,CAA0B,KAAK3E,QAAL,EAA1B,EAA2C,KAAKiG,SAAhD,CAAP;EACA;;EAED1C,IAAI,CAAED,KAAF,EAAU;IACb,KAAK8C,sBAAL,CAA6B9C,KAA7B;;IACA,KAAKxB,mBAAL;;IACA,OAAO,IAAP;EACA;;EAEDuB,aAAa,GAAG;IACf,KAAKO,MAAL,CAAYN,KAAZ,GAAoB,KAAK0C,OAAL,CAAarB,WAAb,CAA0B,KAAK3E,QAAL,EAA1B,EAA2C,KAAKiG,SAAhD,CAApB;;IACA,IAAK,CAAC,KAAKE,YAAX,EAA0B;MACzB,KAAKL,KAAL,CAAWxC,KAAX,GAAmB,KAAKM,MAAL,CAAYN,KAAZ,CAAkBuB,SAAlB,CAA6B,CAA7B,CAAnB;IACA;;IACD,KAAKkB,QAAL,CAAcS,KAAd,CAAoBC,eAApB,GAAsC,KAAK7C,MAAL,CAAYN,KAAlD;IACA,OAAO,IAAP;EACA;;AApGuC;;AAwGzC,MAAMoD,kBAAN,SAAiCnH,UAAjC,CAA4C;EAE3CC,WAAW,CAAEC,MAAF,EAAUC,MAAV,EAAkBC,QAAlB,EAA6B;IAEvC,MAAOF,MAAP,EAAeC,MAAf,EAAuBC,QAAvB,EAAiC,UAAjC,EAFuC,CAIvC;;IACA,KAAKgH,OAAL,GAAezG,QAAQ,CAACC,aAAT,CAAwB,QAAxB,CAAf;IACA,KAAKwG,OAAL,CAAahG,WAAb,CAA0B,KAAKL,KAA/B;IACA,KAAKG,OAAL,CAAaE,WAAb,CAA0B,KAAKgG,OAA/B;IAEA,KAAKA,OAAL,CAAa7C,gBAAb,CAA+B,OAA/B,EAAwC8C,CAAC,IAAI;MAC5CA,CAAC,CAACC,cAAF;MACA,KAAK7G,QAAL,GAAgB0B,IAAhB,CAAsB,KAAKhC,MAA3B;IACA,CAHD,EATuC,CAcvC;;IACA,KAAKiH,OAAL,CAAa7C,gBAAb,CAA+B,YAA/B,EAA6C,MAAM,CAAE,CAArD,EAAuD;MAAEgD,OAAO,EAAE;IAAX,CAAvD;IAEA,KAAKpG,QAAL,GAAgB,KAAKiG,OAArB;EAEA;;AArB0C;;AAyB5C,MAAMI,gBAAN,SAA+BxH,UAA/B,CAA0C;EAEzCC,WAAW,CAAEC,MAAF,EAAUC,MAAV,EAAkBC,QAAlB,EAA4B+C,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC,EAA6C;IAEvD,MAAOnD,MAAP,EAAeC,MAAf,EAAuBC,QAAvB,EAAiC,QAAjC;;IAEA,KAAKqH,UAAL;;IAEA,KAAKtE,GAAL,CAAUA,GAAV;IACA,KAAKC,GAAL,CAAUA,GAAV;IAEA,MAAMsE,YAAY,GAAGrE,IAAI,KAAKnB,SAA9B;IACA,KAAKmB,IAAL,CAAWqE,YAAY,GAAGrE,IAAH,GAAU,KAAKsE,gBAAL,EAAjC,EAA0DD,YAA1D;IAEA,KAAK5D,aAAL;EAEA;;EAEDX,GAAG,CAAEA,GAAF,EAAQ;IACV,KAAKyE,IAAL,GAAYzE,GAAZ;;IACA,KAAK0E,eAAL;;IACA,OAAO,IAAP;EACA;;EAEDzE,GAAG,CAAEA,GAAF,EAAQ;IACV,KAAK0E,IAAL,GAAY1E,GAAZ;;IACA,KAAKyE,eAAL;;IACA,OAAO,IAAP;EACA;;EAEDxE,IAAI,CAAEA,IAAF,EAA0B;IAAA,IAAlB0E,QAAkB,uEAAP,IAAO;IAC7B,KAAKC,KAAL,GAAa3E,IAAb;IACA,KAAK4E,aAAL,GAAqBF,QAArB;IACA,OAAO,IAAP;EACA;;EAEDjE,aAAa,GAAG;IAEf,MAAMC,KAAK,GAAG,KAAKtD,QAAL,EAAd;;IAEA,IAAK,KAAKyH,UAAV,EAAuB;MAEtB,IAAIC,OAAO,GAAG,CAAEpE,KAAK,GAAG,KAAK6D,IAAf,KAA0B,KAAKE,IAAL,GAAY,KAAKF,IAA3C,CAAd;MACAO,OAAO,GAAGC,IAAI,CAAChF,GAAL,CAAU,CAAV,EAAagF,IAAI,CAACjF,GAAL,CAAUgF,OAAV,EAAmB,CAAnB,CAAb,CAAV;MAEA,KAAKE,KAAL,CAAWpB,KAAX,CAAiBqB,KAAjB,GAAyBH,OAAO,GAAG,GAAV,GAAgB,GAAzC;IAEA;;IAED,IAAK,CAAC,KAAKI,aAAX,EAA2B;MAC1B,KAAKlE,MAAL,CAAYN,KAAZ,GAAoBA,KAApB;IACA;;IAED,OAAO,IAAP;EAEA;;EAED0D,UAAU,GAAG;IAEZ,KAAKpD,MAAL,GAAc1D,QAAQ,CAACC,aAAT,CAAwB,OAAxB,CAAd;IACA,KAAKyD,MAAL,CAAYC,YAAZ,CAA0B,MAA1B,EAAkC,QAAlC;IACA,KAAKD,MAAL,CAAYC,YAAZ,CAA0B,MAA1B,EAAkC,KAAlC;IACA,KAAKD,MAAL,CAAYC,YAAZ,CAA0B,iBAA1B,EAA6C,KAAKvD,KAAL,CAAWE,EAAxD;IAEA,KAAKC,OAAL,CAAaE,WAAb,CAA0B,KAAKiD,MAA/B;IAEA,KAAKlD,QAAL,GAAgB,KAAKkD,MAArB;;IAEA,MAAMmE,OAAO,GAAG,MAAM;MAErB,MAAMzE,KAAK,GAAG0E,UAAU,CAAE,KAAKpE,MAAL,CAAYN,KAAd,CAAxB;MAEA,IAAK2E,KAAK,CAAE3E,KAAF,CAAV,EAAsB;MAEtB,KAAKtB,QAAL,CAAe,KAAKkG,MAAL,CAAa5E,KAAb,CAAf;IAEA,CARD,CAXY,CAqBZ;IACA;;;IAEA,MAAM6E,SAAS,GAAGC,KAAK,IAAI;MAE1B,MAAM9E,KAAK,GAAG0E,UAAU,CAAE,KAAKpE,MAAL,CAAYN,KAAd,CAAxB;MAEA,IAAK2E,KAAK,CAAE3E,KAAF,CAAV,EAAsB;;MAEtB,KAAK+E,kBAAL,CAAyB/E,KAAK,GAAG8E,KAAjC,EAN0B,CAQ1B;;;MACA,KAAKxE,MAAL,CAAYN,KAAZ,GAAoB,KAAKtD,QAAL,EAApB;IAEA,CAXD;;IAaA,MAAMsI,SAAS,GAAG1B,CAAC,IAAI;MACtB,IAAKA,CAAC,CAAC2B,IAAF,KAAW,OAAhB,EAA0B;QACzB,KAAK3E,MAAL,CAAY4E,IAAZ;MACA;;MACD,IAAK5B,CAAC,CAAC2B,IAAF,KAAW,SAAhB,EAA4B;QAC3B3B,CAAC,CAACC,cAAF;QACAsB,SAAS,CAAE,KAAKZ,KAAL,GAAa,KAAKkB,mBAAL,CAA0B7B,CAA1B,CAAf,CAAT;MACA;;MACD,IAAKA,CAAC,CAAC2B,IAAF,KAAW,WAAhB,EAA8B;QAC7B3B,CAAC,CAACC,cAAF;QACAsB,SAAS,CAAE,KAAKZ,KAAL,GAAa,KAAKkB,mBAAL,CAA0B7B,CAA1B,CAAb,GAA6C,CAAC,CAAhD,CAAT;MACA;IACD,CAZD;;IAcA,MAAM8B,OAAO,GAAG9B,CAAC,IAAI;MACpB,IAAK,KAAKkB,aAAV,EAA0B;QACzBlB,CAAC,CAACC,cAAF;QACAsB,SAAS,CAAE,KAAKZ,KAAL,GAAa,KAAKoB,oBAAL,CAA2B/B,CAA3B,CAAf,CAAT;MACA;IACD,CALD,CAnDY,CA0DZ;IACA;;;IAEA,IAAIgC,sBAAsB,GAAG,KAA7B;IAAA,IACCC,WADD;IAAA,IAECC,WAFD;IAAA,IAGCC,WAHD;IAAA,IAICC,SAJD;IAAA,IAKCC,SALD,CA7DY,CAoEZ;IACA;;IACA,MAAMC,WAAW,GAAG,CAApB;;IAEA,MAAMC,WAAW,GAAGvC,CAAC,IAAI;MAExBiC,WAAW,GAAGjC,CAAC,CAACwC,OAAhB;MACAN,WAAW,GAAGC,WAAW,GAAGnC,CAAC,CAACyC,OAA9B;MACAT,sBAAsB,GAAG,IAAzB;MAEAI,SAAS,GAAG,KAAKhJ,QAAL,EAAZ;MACAiJ,SAAS,GAAG,CAAZ;MAEAK,MAAM,CAACxF,gBAAP,CAAyB,WAAzB,EAAsCyF,WAAtC;MACAD,MAAM,CAACxF,gBAAP,CAAyB,SAAzB,EAAoC0F,SAApC;IAEA,CAZD;;IAcA,MAAMD,WAAW,GAAG3C,CAAC,IAAI;MAExB,IAAKgC,sBAAL,EAA8B;QAE7B,MAAMa,EAAE,GAAG7C,CAAC,CAACwC,OAAF,GAAYP,WAAvB;QACA,MAAMa,EAAE,GAAG9C,CAAC,CAACyC,OAAF,GAAYP,WAAvB;;QAEA,IAAKnB,IAAI,CAACgC,GAAL,CAAUD,EAAV,IAAiBR,WAAtB,EAAoC;UAEnCtC,CAAC,CAACC,cAAF;UACA,KAAKjD,MAAL,CAAY4E,IAAZ;UACAI,sBAAsB,GAAG,KAAzB;;UACA,KAAKgB,iBAAL,CAAwB,IAAxB,EAA8B,UAA9B;QAEA,CAPD,MAOO,IAAKjC,IAAI,CAACgC,GAAL,CAAUF,EAAV,IAAiBP,WAAtB,EAAoC;UAE1CM,SAAS;QAET;MAED,CApBuB,CAsBxB;;;MACA,IAAK,CAACZ,sBAAN,EAA+B;QAE9B,MAAMc,EAAE,GAAG9C,CAAC,CAACyC,OAAF,GAAYN,WAAvB;QAEAE,SAAS,IAAIS,EAAE,GAAG,KAAKnC,KAAV,GAAkB,KAAKkB,mBAAL,CAA0B7B,CAA1B,CAA/B,CAJ8B,CAM9B;QACA;;QACA,IAAKoC,SAAS,GAAGC,SAAZ,GAAwB,KAAK5B,IAAlC,EAAyC;UACxC4B,SAAS,GAAG,KAAK5B,IAAL,GAAY2B,SAAxB;QACA,CAFD,MAEO,IAAKA,SAAS,GAAGC,SAAZ,GAAwB,KAAK9B,IAAlC,EAAyC;UAC/C8B,SAAS,GAAG,KAAK9B,IAAL,GAAY6B,SAAxB;QACA;;QAED,KAAKX,kBAAL,CAAyBW,SAAS,GAAGC,SAArC;MAEA;;MAEDF,WAAW,GAAGnC,CAAC,CAACyC,OAAhB;IAEA,CA3CD;;IA6CA,MAAMG,SAAS,GAAG,MAAM;MACvB,KAAKI,iBAAL,CAAwB,KAAxB,EAA+B,UAA/B;;MACA,KAAK9H,mBAAL;;MACAwH,MAAM,CAACO,mBAAP,CAA4B,WAA5B,EAAyCN,WAAzC;MACAD,MAAM,CAACO,mBAAP,CAA4B,SAA5B,EAAuCL,SAAvC;IACA,CALD,CAnIY,CA0IZ;IACA;;;IAEA,MAAMM,OAAO,GAAG,MAAM;MACrB,KAAKhC,aAAL,GAAqB,IAArB;IACA,CAFD;;IAIA,MAAMiC,MAAM,GAAG,MAAM;MACpB,KAAKjC,aAAL,GAAqB,KAArB;MACA,KAAKzE,aAAL;;MACA,KAAKvB,mBAAL;IACA,CAJD;;IAMA,KAAK8B,MAAL,CAAYE,gBAAZ,CAA8B,OAA9B,EAAuCiE,OAAvC;IACA,KAAKnE,MAAL,CAAYE,gBAAZ,CAA8B,SAA9B,EAAyCwE,SAAzC;IACA,KAAK1E,MAAL,CAAYE,gBAAZ,CAA8B,OAA9B,EAAuC4E,OAAvC,EAAgD;MAAE5B,OAAO,EAAE;IAAX,CAAhD;IACA,KAAKlD,MAAL,CAAYE,gBAAZ,CAA8B,WAA9B,EAA2CqF,WAA3C;IACA,KAAKvF,MAAL,CAAYE,gBAAZ,CAA8B,OAA9B,EAAuCgG,OAAvC;IACA,KAAKlG,MAAL,CAAYE,gBAAZ,CAA8B,MAA9B,EAAsCiG,MAAtC;EAEA;;EAEDC,WAAW,GAAG;IAEb,KAAKvC,UAAL,GAAkB,IAAlB,CAFa,CAIb;IACA;;IAEA,KAAKwC,OAAL,GAAe/J,QAAQ,CAACC,aAAT,CAAwB,KAAxB,CAAf;IACA,KAAK8J,OAAL,CAAa7J,SAAb,CAAuBC,GAAvB,CAA4B,QAA5B;IAEA,KAAKuH,KAAL,GAAa1H,QAAQ,CAACC,aAAT,CAAwB,KAAxB,CAAb;IACA,KAAKyH,KAAL,CAAWxH,SAAX,CAAqBC,GAArB,CAA0B,MAA1B;IAEA,KAAK4J,OAAL,CAAatJ,WAAb,CAA0B,KAAKiH,KAA/B;IACA,KAAKnH,OAAL,CAAayJ,YAAb,CAA2B,KAAKD,OAAhC,EAAyC,KAAKrG,MAA9C;IAEA,KAAK3D,UAAL,CAAgBG,SAAhB,CAA0BC,GAA1B,CAA+B,WAA/B,EAhBa,CAkBb;IACA;;IAEA,MAAM8J,GAAG,GAAG,CAAE1F,CAAF,EAAK2F,CAAL,EAAQ9E,CAAR,EAAW+E,CAAX,EAAcC,CAAd,KAAqB;MAChC,OAAO,CAAE7F,CAAC,GAAG2F,CAAN,KAAc9E,CAAC,GAAG8E,CAAlB,KAA0BE,CAAC,GAAGD,CAA9B,IAAoCA,CAA3C;IACA,CAFD;;IAIA,MAAME,aAAa,GAAGnB,OAAO,IAAI;MAChC,MAAMoB,IAAI,GAAG,KAAKP,OAAL,CAAaQ,qBAAb,EAAb;MACA,IAAInH,KAAK,GAAG6G,GAAG,CAAEf,OAAF,EAAWoB,IAAI,CAACE,IAAhB,EAAsBF,IAAI,CAACG,KAA3B,EAAkC,KAAKxD,IAAvC,EAA6C,KAAKE,IAAlD,CAAf;;MACA,KAAKgB,kBAAL,CAAyB/E,KAAzB;IACA,CAJD,CAzBa,CA+Bb;IACA;;;IAEA,MAAMsH,SAAS,GAAGhE,CAAC,IAAI;MACtB,KAAKgD,iBAAL,CAAwB,IAAxB;;MACAW,aAAa,CAAE3D,CAAC,CAACwC,OAAJ,CAAb;MACAE,MAAM,CAACxF,gBAAP,CAAyB,WAAzB,EAAsC+G,SAAtC;MACAvB,MAAM,CAACxF,gBAAP,CAAyB,SAAzB,EAAoCgH,OAApC;IACA,CALD;;IAOA,MAAMD,SAAS,GAAGjE,CAAC,IAAI;MACtB2D,aAAa,CAAE3D,CAAC,CAACwC,OAAJ,CAAb;IACA,CAFD;;IAIA,MAAM0B,OAAO,GAAG,MAAM;MACrB,KAAKhJ,mBAAL;;MACA,KAAK8H,iBAAL,CAAwB,KAAxB;;MACAN,MAAM,CAACO,mBAAP,CAA4B,WAA5B,EAAyCgB,SAAzC;MACAvB,MAAM,CAACO,mBAAP,CAA4B,SAA5B,EAAuCiB,OAAvC;IACA,CALD,CA7Ca,CAoDb;IACA;;;IAEA,IAAIC,gBAAgB,GAAG,KAAvB;IAAA,IAA8BC,WAA9B;IAAA,IAA2CjC,WAA3C;;IAEA,MAAMkC,cAAc,GAAGrE,CAAC,IAAI;MAC3BA,CAAC,CAACC,cAAF;;MACA,KAAK+C,iBAAL,CAAwB,IAAxB;;MACAW,aAAa,CAAE3D,CAAC,CAACsE,OAAF,CAAW,CAAX,EAAe9B,OAAjB,CAAb;MACA2B,gBAAgB,GAAG,KAAnB;IACA,CALD;;IAOA,MAAMI,YAAY,GAAGvE,CAAC,IAAI;MAEzB,IAAKA,CAAC,CAACsE,OAAF,CAAUE,MAAV,GAAmB,CAAxB,EAA4B,OAFH,CAIzB;MACA;;MACA,IAAK,KAAKC,aAAV,EAA0B;QAEzBL,WAAW,GAAGpE,CAAC,CAACsE,OAAF,CAAW,CAAX,EAAe9B,OAA7B;QACAL,WAAW,GAAGnC,CAAC,CAACsE,OAAF,CAAW,CAAX,EAAe7B,OAA7B;QACA0B,gBAAgB,GAAG,IAAnB;MAEA,CAND,MAMO;QAEN;QACAE,cAAc,CAAErE,CAAF,CAAd;MAEA;;MAED0C,MAAM,CAACxF,gBAAP,CAAyB,WAAzB,EAAsCwH,WAAtC;MACAhC,MAAM,CAACxF,gBAAP,CAAyB,UAAzB,EAAqCyH,UAArC;IAEA,CAtBD;;IAwBA,MAAMD,WAAW,GAAG1E,CAAC,IAAI;MAExB,IAAKmE,gBAAL,EAAwB;QAEvB,MAAMtB,EAAE,GAAG7C,CAAC,CAACsE,OAAF,CAAW,CAAX,EAAe9B,OAAf,GAAyB4B,WAApC;QACA,MAAMtB,EAAE,GAAG9C,CAAC,CAACsE,OAAF,CAAW,CAAX,EAAe7B,OAAf,GAAyBN,WAApC;;QAEA,IAAKpB,IAAI,CAACgC,GAAL,CAAUF,EAAV,IAAiB9B,IAAI,CAACgC,GAAL,CAAUD,EAAV,CAAtB,EAAuC;UAEtC;UACAuB,cAAc,CAAErE,CAAF,CAAd;QAEA,CALD,MAKO;UAEN;UACA0C,MAAM,CAACO,mBAAP,CAA4B,WAA5B,EAAyCyB,WAAzC;UACAhC,MAAM,CAACO,mBAAP,CAA4B,UAA5B,EAAwC0B,UAAxC;QAEA;MAED,CAlBD,MAkBO;QAEN3E,CAAC,CAACC,cAAF;QACA0D,aAAa,CAAE3D,CAAC,CAACsE,OAAF,CAAW,CAAX,EAAe9B,OAAjB,CAAb;MAEA;IAED,CA3BD;;IA6BA,MAAMmC,UAAU,GAAG,MAAM;MACxB,KAAKzJ,mBAAL;;MACA,KAAK8H,iBAAL,CAAwB,KAAxB;;MACAN,MAAM,CAACO,mBAAP,CAA4B,WAA5B,EAAyCyB,WAAzC;MACAhC,MAAM,CAACO,mBAAP,CAA4B,UAA5B,EAAwC0B,UAAxC;IACA,CALD,CArHa,CA4Hb;IACA;IAEA;IACA;;;IACA,MAAMC,kBAAkB,GAAG,KAAK1J,mBAAL,CAAyBb,IAAzB,CAA+B,IAA/B,CAA3B;;IACA,MAAMwK,mBAAmB,GAAG,GAA5B;IACA,IAAIC,wBAAJ;;IAEA,MAAMhD,OAAO,GAAG9B,CAAC,IAAI;MAEpB;MACA,MAAM+E,UAAU,GAAGhE,IAAI,CAACgC,GAAL,CAAU/C,CAAC,CAACgF,MAAZ,IAAuBjE,IAAI,CAACgC,GAAL,CAAU/C,CAAC,CAACiF,MAAZ,CAA1C;MACA,IAAKF,UAAU,IAAI,KAAKN,aAAxB,EAAwC;MAExCzE,CAAC,CAACC,cAAF,GANoB,CAQpB;;MACA,MAAMuB,KAAK,GAAG,KAAKO,oBAAL,CAA2B/B,CAA3B,IAAiC,KAAKW,KAApD;;MACA,KAAKc,kBAAL,CAAyB,KAAKrI,QAAL,KAAkBoI,KAA3C,EAVoB,CAYpB;;;MACA,KAAKxE,MAAL,CAAYN,KAAZ,GAAoB,KAAKtD,QAAL,EAApB,CAboB,CAepB;;MACA8L,YAAY,CAAEJ,wBAAF,CAAZ;MACAA,wBAAwB,GAAGK,UAAU,CAAEP,kBAAF,EAAsBC,mBAAtB,CAArC;IAEA,CAnBD;;IAqBA,KAAKxB,OAAL,CAAanG,gBAAb,CAA+B,WAA/B,EAA4C8G,SAA5C;IACA,KAAKX,OAAL,CAAanG,gBAAb,CAA+B,YAA/B,EAA6CqH,YAA7C,EAA2D;MAAErE,OAAO,EAAE;IAAX,CAA3D;IACA,KAAKmD,OAAL,CAAanG,gBAAb,CAA+B,OAA/B,EAAwC4E,OAAxC,EAAiD;MAAE5B,OAAO,EAAE;IAAX,CAAjD;EAEA;;EAED8C,iBAAiB,CAAEoC,MAAF,EAAgC;IAAA,IAAtBC,IAAsB,uEAAf,YAAe;;IAChD,IAAK,KAAKhC,OAAV,EAAoB;MACnB,KAAKA,OAAL,CAAa7J,SAAb,CAAuBiC,MAAvB,CAA+B,QAA/B,EAAyC2J,MAAzC;IACA;;IACD9L,QAAQ,CAACgM,IAAT,CAAc9L,SAAd,CAAwBiC,MAAxB,CAAgC,kBAAhC,EAAoD2J,MAApD;IACA9L,QAAQ,CAACgM,IAAT,CAAc9L,SAAd,CAAwBiC,MAAxB,CAAiC,WAAU4J,IAAK,EAAhD,EAAmDD,MAAnD;EACA;;EAED9E,gBAAgB,GAAG;IAElB,IAAK,KAAKiF,OAAL,IAAgB,KAAKC,OAA1B,EAAoC;MACnC,OAAO,CAAE,KAAK/E,IAAL,GAAY,KAAKF,IAAnB,IAA4B,IAAnC;IACA;;IAED,OAAO,GAAP;EAEA;;EAEDC,eAAe,GAAG;IAEjB,IAAK,CAAC,KAAKK,UAAN,IAAoB,KAAK0E,OAAzB,IAAoC,KAAKC,OAA9C,EAAwD;MAEvD;MACA;MACA;MACA,IAAK,CAAC,KAAK5E,aAAX,EAA2B;QAC1B,KAAK5E,IAAL,CAAW,KAAKsE,gBAAL,EAAX,EAAoC,KAApC;MACA;;MAED,KAAK8C,WAAL;;MACA,KAAK3G,aAAL;IAEA;EAED;;EAEDsF,oBAAoB,CAAE/B,CAAF,EAAM;IAEzB,IAAI;MAAEgF,MAAF;MAAUC;IAAV,IAAqBjF,CAAzB,CAFyB,CAIzB;IACA;IACA;;IACA,IAAKe,IAAI,CAAC0E,KAAL,CAAYzF,CAAC,CAACiF,MAAd,MAA2BjF,CAAC,CAACiF,MAA7B,IAAuCjF,CAAC,CAAC0F,UAA9C,EAA2D;MAC1DV,MAAM,GAAG,CAAT;MACAC,MAAM,GAAG,CAACjF,CAAC,CAAC0F,UAAH,GAAgB,GAAzB;MACAT,MAAM,IAAI,KAAKrE,aAAL,GAAqB,CAArB,GAAyB,EAAnC;IACA;;IAED,MAAM+E,KAAK,GAAGX,MAAM,GAAG,CAACC,MAAxB;IAEA,OAAOU,KAAP;EAEA;;EAED9D,mBAAmB,CAAE7B,CAAF,EAAM;IAExB,IAAI4F,IAAI,GAAG,KAAKhF,aAAL,GAAqB,CAArB,GAAyB,EAApC;;IAEA,IAAKZ,CAAC,CAAC6F,QAAP,EAAkB;MACjBD,IAAI,IAAI,EAAR;IACA,CAFD,MAEO,IAAK5F,CAAC,CAAC8F,MAAP,EAAgB;MACtBF,IAAI,IAAI,EAAR;IACA;;IAED,OAAOA,IAAP;EAEA;;EAEDG,KAAK,CAAErJ,KAAF,EAAU;IAEd;IACA;IAEA;IACA;IACA;IAEA;IACA,MAAM8B,CAAC,GAAGuC,IAAI,CAACiF,KAAL,CAAYtJ,KAAK,GAAG,KAAKiE,KAAzB,IAAmC,KAAKA,KAAlD;;IACA,OAAOS,UAAU,CAAE5C,CAAC,CAACyH,WAAF,CAAe,EAAf,CAAF,CAAjB;EAEA;;EAED3E,MAAM,CAAE5E,KAAF,EAAU;IACf;IACA,IAAKA,KAAK,GAAG,KAAK6D,IAAlB,EAAyB7D,KAAK,GAAG,KAAK6D,IAAb;IACzB,IAAK7D,KAAK,GAAG,KAAK+D,IAAlB,EAAyB/D,KAAK,GAAG,KAAK+D,IAAb;IACzB,OAAO/D,KAAP;EACA;;EAED+E,kBAAkB,CAAE/E,KAAF,EAAU;IAC3B,KAAKtB,QAAL,CAAe,KAAKkG,MAAL,CAAa,KAAKyE,KAAL,CAAYrJ,KAAZ,CAAb,CAAf;EACA;;EAEgB,IAAb+H,aAAa,GAAG;IACnB,MAAMyB,IAAI,GAAG,KAAKrN,MAAL,CAAYqN,IAAZ,CAAiB/L,SAA9B;IACA,OAAO+L,IAAI,CAACC,YAAL,GAAoBD,IAAI,CAACE,YAAhC;EACA;;EAEU,IAAPb,OAAO,GAAG;IACb,OAAO,KAAKhF,IAAL,KAAc1F,SAArB;EACA;;EAEU,IAAP2K,OAAO,GAAG;IACb,OAAO,KAAK/E,IAAL,KAAc5F,SAArB;EACA;;AAnewC;;AAue1C,MAAMwL,gBAAN,SAA+B1N,UAA/B,CAA0C;EAEzCC,WAAW,CAAEC,MAAF,EAAUC,MAAV,EAAkBC,QAAlB,EAA4B4C,OAA5B,EAAsC;IAEhD,MAAO9C,MAAP,EAAeC,MAAf,EAAuBC,QAAvB,EAAiC,QAAjC;IAEA,KAAKuN,OAAL,GAAehN,QAAQ,CAACC,aAAT,CAAwB,QAAxB,CAAf;IACA,KAAK+M,OAAL,CAAarJ,YAAb,CAA2B,iBAA3B,EAA8C,KAAKvD,KAAL,CAAWE,EAAzD;IAEA,KAAKuF,QAAL,GAAgB7F,QAAQ,CAACC,aAAT,CAAwB,KAAxB,CAAhB;IACA,KAAK4F,QAAL,CAAc3F,SAAd,CAAwBC,GAAxB,CAA6B,SAA7B;IAEA,KAAK8M,OAAL,GAAepI,KAAK,CAACC,OAAN,CAAezC,OAAf,IAA2BA,OAA3B,GAAqCiD,MAAM,CAAC4H,MAAP,CAAe7K,OAAf,CAApD;IACA,KAAK8K,MAAL,GAActI,KAAK,CAACC,OAAN,CAAezC,OAAf,IAA2BA,OAA3B,GAAqCiD,MAAM,CAAC8H,IAAP,CAAa/K,OAAb,CAAnD;;IAEA,KAAK8K,MAAL,CAAYE,OAAZ,CAAqBrM,IAAI,IAAI;MAC5B,MAAMsM,OAAO,GAAGtN,QAAQ,CAACC,aAAT,CAAwB,QAAxB,CAAhB;MACAqN,OAAO,CAACpM,SAAR,GAAoBF,IAApB;MACA,KAAKgM,OAAL,CAAavM,WAAb,CAA0B6M,OAA1B;IACA,CAJD;;IAMA,KAAKN,OAAL,CAAapJ,gBAAb,CAA+B,QAA/B,EAAyC,MAAM;MAC9C,KAAK9B,QAAL,CAAe,KAAKmL,OAAL,CAAc,KAAKD,OAAL,CAAaO,aAA3B,CAAf;;MACA,KAAK3L,mBAAL;IACA,CAHD;IAKA,KAAKoL,OAAL,CAAapJ,gBAAb,CAA+B,OAA/B,EAAwC,MAAM;MAC7C,KAAKiC,QAAL,CAAc3F,SAAd,CAAwBC,GAAxB,CAA6B,OAA7B;IACA,CAFD;IAIA,KAAK6M,OAAL,CAAapJ,gBAAb,CAA+B,MAA/B,EAAuC,MAAM;MAC5C,KAAKiC,QAAL,CAAc3F,SAAd,CAAwBsN,MAAxB,CAAgC,OAAhC;IACA,CAFD;IAIA,KAAKjN,OAAL,CAAaE,WAAb,CAA0B,KAAKuM,OAA/B;IACA,KAAKzM,OAAL,CAAaE,WAAb,CAA0B,KAAKoF,QAA/B;IAEA,KAAKrF,QAAL,GAAgB,KAAKwM,OAArB;IAEA,KAAK7J,aAAL;EAEA;;EAEDA,aAAa,GAAG;IACf,MAAMC,KAAK,GAAG,KAAKtD,QAAL,EAAd;;IACA,MAAM2N,KAAK,GAAG,KAAKR,OAAL,CAAa1J,OAAb,CAAsBH,KAAtB,CAAd;;IACA,KAAK4J,OAAL,CAAaO,aAAb,GAA6BE,KAA7B;IACA,KAAK5H,QAAL,CAAc3E,SAAd,GAA0BuM,KAAK,KAAK,CAAC,CAAX,GAAerK,KAAf,GAAuB,KAAK+J,MAAL,CAAaM,KAAb,CAAjD;IACA,OAAO,IAAP;EACA;;AAjDwC;;AAqD1C,MAAMC,gBAAN,SAA+BrO,UAA/B,CAA0C;EAEzCC,WAAW,CAAEC,MAAF,EAAUC,MAAV,EAAkBC,QAAlB,EAA6B;IAEvC,MAAOF,MAAP,EAAeC,MAAf,EAAuBC,QAAvB,EAAiC,QAAjC;IAEA,KAAKiE,MAAL,GAAc1D,QAAQ,CAACC,aAAT,CAAwB,OAAxB,CAAd;IACA,KAAKyD,MAAL,CAAYC,YAAZ,CAA0B,MAA1B,EAAkC,MAAlC;IACA,KAAKD,MAAL,CAAYC,YAAZ,CAA0B,iBAA1B,EAA6C,KAAKvD,KAAL,CAAWE,EAAxD;IAEA,KAAKoD,MAAL,CAAYE,gBAAZ,CAA8B,OAA9B,EAAuC,MAAM;MAC5C,KAAK9B,QAAL,CAAe,KAAK4B,MAAL,CAAYN,KAA3B;IACA,CAFD;IAIA,KAAKM,MAAL,CAAYE,gBAAZ,CAA8B,SAA9B,EAAyC8C,CAAC,IAAI;MAC7C,IAAKA,CAAC,CAAC2B,IAAF,KAAW,OAAhB,EAA0B;QACzB,KAAK3E,MAAL,CAAY4E,IAAZ;MACA;IACD,CAJD;IAMA,KAAK5E,MAAL,CAAYE,gBAAZ,CAA8B,MAA9B,EAAsC,MAAM;MAC3C,KAAKhC,mBAAL;IACA,CAFD;IAIA,KAAKrB,OAAL,CAAaE,WAAb,CAA0B,KAAKiD,MAA/B;IAEA,KAAKlD,QAAL,GAAgB,KAAKkD,MAArB;IAEA,KAAKP,aAAL;EAEA;;EAEDA,aAAa,GAAG;IACf,KAAKO,MAAL,CAAYN,KAAZ,GAAoB,KAAKtD,QAAL,EAApB;IACA,OAAO,IAAP;EACA;;AAnCwC;;AAuC1C,MAAM6N,UAAU,GAAI;AACpaA;;AAibA,SAASC,aAAT,CAAwBC,UAAxB,EAAqC;EACpC,MAAMC,QAAQ,GAAG9N,QAAQ,CAACC,aAAT,CAAwB,OAAxB,CAAjB;EACA6N,QAAQ,CAAC5M,SAAT,GAAqB2M,UAArB;EACA,MAAME,MAAM,GAAG/N,QAAQ,CAACgO,aAAT,CAAwB,uCAAxB,CAAf;;EACA,IAAKD,MAAL,EAAc;IACb/N,QAAQ,CAACiO,IAAT,CAAcjE,YAAd,CAA4B8D,QAA5B,EAAsCC,MAAtC;EACA,CAFD,MAEO;IACN/N,QAAQ,CAACiO,IAAT,CAAcxN,WAAd,CAA2BqN,QAA3B;EACA;AACD;;AAED,IAAII,cAAc,GAAG,KAArB;;AAEA,MAAMC,GAAN,CAAU;EAET;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC7O,WAAW,GAQF;IAAA,IARI;MACZC,MADY;MAEZ6O,SAAS,GAAG7O,MAAM,KAAKgC,SAFX;MAGZ8M,SAHY;MAIZ1G,KAJY;MAKZ2G,KAAK,GAAG,UALI;MAMZC,YAAY,GAAG,IANH;MAOZC,WAAW,GAAG;IAPF,CAQJ,uEAAL,EAAK;;IAER;AACF;AACA;AACA;IACE,KAAKjP,MAAL,GAAcA,MAAd;IAEA;AACF;AACA;AACA;;IACE,KAAKqN,IAAL,GAAYrN,MAAM,GAAGA,MAAM,CAACqN,IAAV,GAAiB,IAAnC;IAEA;AACF;AACA;AACA;;IACE,KAAKlM,QAAL,GAAgB,EAAhB;IAEA;AACF;AACA;AACA;;IACE,KAAKE,WAAL,GAAmB,EAAnB;IAEA;AACF;AACA;AACA;;IACE,KAAK6N,OAAL,GAAe,EAAf;IAEA;AACF;AACA;AACA;;IACE,KAAKC,OAAL,GAAe,KAAf;IAEA;AACF;AACA;AACA;;IACE,KAAKC,OAAL,GAAe,KAAf;IAEA;AACF;AACA;AACA;;IACE,KAAK5O,UAAL,GAAkBC,QAAQ,CAACC,aAAT,CAAwB,KAAxB,CAAlB;IACA,KAAKF,UAAL,CAAgBG,SAAhB,CAA0BC,GAA1B,CAA+B,SAA/B;IAEA;AACF;AACA;AACA;;IACE,KAAKyO,MAAL,GAAc5O,QAAQ,CAACC,aAAT,CAAwB,KAAxB,CAAd;IACA,KAAK2O,MAAL,CAAY1O,SAAZ,CAAsBC,GAAtB,CAA2B,OAA3B;IACA,KAAKyO,MAAL,CAAYjL,YAAZ,CAA0B,MAA1B,EAAkC,QAAlC;IACA,KAAKiL,MAAL,CAAYjL,YAAZ,CAA0B,eAA1B,EAA2C,IAA3C;IACA,KAAKiL,MAAL,CAAYjL,YAAZ,CAA0B,UAA1B,EAAsC,CAAtC;IAEA,KAAKiL,MAAL,CAAYhL,gBAAZ,CAA8B,OAA9B,EAAuC,MAAM,KAAKiL,YAAL,CAAmB,KAAKH,OAAxB,CAA7C;IACA,KAAKE,MAAL,CAAYhL,gBAAZ,CAA8B,SAA9B,EAAyC8C,CAAC,IAAI;MAC7C,IAAKA,CAAC,CAAC2B,IAAF,KAAW,OAAX,IAAsB3B,CAAC,CAAC2B,IAAF,KAAW,OAAtC,EAAgD;QAC/C3B,CAAC,CAACC,cAAF;QACA,KAAKiI,MAAL,CAAYE,KAAZ;MACA;IACD,CALD,EA9DQ,CAqER;;IACA,KAAKF,MAAL,CAAYhL,gBAAZ,CAA8B,YAA9B,EAA4C,MAAM,CAAE,CAApD,EAAsD;MAAEgD,OAAO,EAAE;IAAX,CAAtD;IAEA;AACF;AACA;AACA;;IACE,KAAK/F,SAAL,GAAiBb,QAAQ,CAACC,aAAT,CAAwB,KAAxB,CAAjB;IACA,KAAKY,SAAL,CAAeX,SAAf,CAAyBC,GAAzB,CAA8B,UAA9B;IAEA,KAAKJ,UAAL,CAAgBU,WAAhB,CAA6B,KAAKmO,MAAlC;IACA,KAAK7O,UAAL,CAAgBU,WAAhB,CAA6B,KAAKI,SAAlC;IAEA,KAAKyN,KAAL,CAAYA,KAAZ;;IAEA,IAAKE,WAAL,EAAmB;MAClB,KAAKzO,UAAL,CAAgBG,SAAhB,CAA0BC,GAA1B,CAA+B,oBAA/B;IACA;;IAED,IAAK,KAAKZ,MAAV,EAAmB;MAElB,KAAKA,MAAL,CAAYmB,QAAZ,CAAqBC,IAArB,CAA2B,IAA3B;MACA,KAAKpB,MAAL,CAAYkP,OAAZ,CAAoB9N,IAApB,CAA0B,IAA1B;MAEA,KAAKpB,MAAL,CAAYsB,SAAZ,CAAsBJ,WAAtB,CAAmC,KAAKV,UAAxC,EALkB,CAOlB;;MACA;IAEA;;IAED,KAAKA,UAAL,CAAgBG,SAAhB,CAA0BC,GAA1B,CAA+B,MAA/B,EApGQ,CAsGR;;IACA,IAAK,CAAC+N,cAAD,IAAmBK,YAAxB,EAAuC;MACtCX,aAAa,CAAED,UAAF,CAAb;;MACAO,cAAc,GAAG,IAAjB;IACA;;IAED,IAAKG,SAAL,EAAiB;MAEhBA,SAAS,CAAC5N,WAAV,CAAuB,KAAKV,UAA5B;IAEA,CAJD,MAIO,IAAKqO,SAAL,EAAiB;MAEvB,KAAKrO,UAAL,CAAgBG,SAAhB,CAA0BC,GAA1B,CAA+B,WAA/B;MACAH,QAAQ,CAACgM,IAAT,CAAcvL,WAAd,CAA2B,KAAKV,UAAhC;IAEA;;IAED,IAAK4H,KAAL,EAAa;MACZ,KAAK5H,UAAL,CAAgBuG,KAAhB,CAAsByI,WAAtB,CAAmC,SAAnC,EAA8CpH,KAAK,GAAG,IAAtD;IACA,CAzHO,CA2HR;;;IACA,KAAK5H,UAAL,CAAgB6D,gBAAhB,CAAkC,SAAlC,EAA6C8C,CAAC,IAAIA,CAAC,CAACsI,eAAF,EAAlD;IACA,KAAKjP,UAAL,CAAgB6D,gBAAhB,CAAkC,OAAlC,EAA2C8C,CAAC,IAAIA,CAAC,CAACsI,eAAF,EAAhD;EAEA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACC7O,GAAG,CAAEX,MAAF,EAAUC,QAAV,EAAoBwP,EAApB,EAAwBxM,GAAxB,EAA6BC,IAA7B,EAAoC;IAEtC,IAAK4C,MAAM,CAAE2J,EAAF,CAAN,KAAiBA,EAAtB,EAA2B;MAE1B,OAAO,IAAIlC,gBAAJ,CAAsB,IAAtB,EAA4BvN,MAA5B,EAAoCC,QAApC,EAA8CwP,EAA9C,CAAP;IAEA;;IAED,MAAMpP,YAAY,GAAGL,MAAM,CAAEC,QAAF,CAA3B;;IAEA,QAAS,OAAOI,YAAhB;MAEC,KAAK,QAAL;QAEC,OAAO,IAAIgH,gBAAJ,CAAsB,IAAtB,EAA4BrH,MAA5B,EAAoCC,QAApC,EAA8CwP,EAA9C,EAAkDxM,GAAlD,EAAuDC,IAAvD,CAAP;;MAED,KAAK,SAAL;QAEC,OAAO,IAAIe,iBAAJ,CAAuB,IAAvB,EAA6BjE,MAA7B,EAAqCC,QAArC,CAAP;;MAED,KAAK,QAAL;QAEC,OAAO,IAAIiO,gBAAJ,CAAsB,IAAtB,EAA4BlO,MAA5B,EAAoCC,QAApC,CAAP;;MAED,KAAK,UAAL;QAEC,OAAO,IAAI+G,kBAAJ,CAAwB,IAAxB,EAA8BhH,MAA9B,EAAsCC,QAAtC,CAAP;IAhBF;;IAoBAyP,OAAO,CAACC,KAAR,CAAgB;AAClB,WADE,EACW1P,QADX,EACsB;AACxB,SAFE,EAESD,MAFT,EAEkB;AACpB,QAHE,EAGQK,YAHR;EAKA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACCuP,QAAQ,CAAE5P,MAAF,EAAUC,QAAV,EAAmC;IAAA,IAAfuF,QAAe,uEAAJ,CAAI;IAC1C,OAAO,IAAIW,eAAJ,CAAqB,IAArB,EAA2BnG,MAA3B,EAAmCC,QAAnC,EAA6CuF,QAA7C,CAAP;EACA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACCqK,SAAS,CAAEf,KAAF,EAAU;IAClB,OAAO,IAAIH,GAAJ,CAAS;MAAE5O,MAAM,EAAE,IAAV;MAAgB+O;IAAhB,CAAT,CAAP;EACA;EAED;AACD;AACA;AACA;AACA;AACA;;;EACCjL,IAAI,CAAEiM,GAAF,EAA0B;IAAA,IAAnBC,SAAmB,uEAAP,IAAO;;IAE7B,IAAKD,GAAG,CAAC1O,WAAT,EAAuB;MAEtB,KAAKA,WAAL,CAAiByM,OAAjB,CAA0BlD,CAAC,IAAI;QAE9B,IAAKA,CAAC,YAAY3D,kBAAlB,EAAuC;;QAEvC,IAAK2D,CAAC,CAAClJ,KAAF,IAAWqO,GAAG,CAAC1O,WAApB,EAAkC;UACjCuJ,CAAC,CAAC9G,IAAF,CAAQiM,GAAG,CAAC1O,WAAJ,CAAiBuJ,CAAC,CAAClJ,KAAnB,CAAR;QACA;MAED,CARD;IAUA;;IAED,IAAKsO,SAAS,IAAID,GAAG,CAACb,OAAtB,EAAgC;MAE/B,KAAKA,OAAL,CAAapB,OAAb,CAAsBmC,CAAC,IAAI;QAE1B,IAAKA,CAAC,CAACC,MAAF,IAAYH,GAAG,CAACb,OAArB,EAA+B;UAC9Be,CAAC,CAACnM,IAAF,CAAQiM,GAAG,CAACb,OAAJ,CAAae,CAAC,CAACC,MAAf,CAAR;QACA;MAED,CAND;IAQA;;IAED,OAAO,IAAP;EAEA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACCxM,IAAI,GAAqB;IAAA,IAAnBsM,SAAmB,uEAAP,IAAO;IAExB,MAAMD,GAAG,GAAG;MACX1O,WAAW,EAAE,EADF;MAEX6N,OAAO,EAAE;IAFE,CAAZ;IAKA,KAAK7N,WAAL,CAAiByM,OAAjB,CAA0BlD,CAAC,IAAI;MAE9B,IAAKA,CAAC,YAAY3D,kBAAlB,EAAuC;;MAEvC,IAAK2D,CAAC,CAAClJ,KAAF,IAAWqO,GAAG,CAAC1O,WAApB,EAAkC;QACjC,MAAM,IAAI8O,KAAJ,CAAY,4CAA2CvF,CAAC,CAAClJ,KAAM,GAA/D,CAAN;MACA;;MAEDqO,GAAG,CAAC1O,WAAJ,CAAiBuJ,CAAC,CAAClJ,KAAnB,IAA6BkJ,CAAC,CAAClH,IAAF,EAA7B;IAEA,CAVD;;IAYA,IAAKsM,SAAL,EAAiB;MAEhB,KAAKd,OAAL,CAAapB,OAAb,CAAsBmC,CAAC,IAAI;QAE1B,IAAKA,CAAC,CAACC,MAAF,IAAYH,GAAG,CAACb,OAArB,EAA+B;UAC9B,MAAM,IAAIiB,KAAJ,CAAY,0CAAyCF,CAAC,CAACC,MAAO,GAA9D,CAAN;QACA;;QAEDH,GAAG,CAACb,OAAJ,CAAae,CAAC,CAACC,MAAf,IAA0BD,CAAC,CAACvM,IAAF,EAA1B;MAEA,CARD;IAUA;;IAED,OAAOqM,GAAP;EAEA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACCK,IAAI,GAAgB;IAAA,IAAdA,IAAc,uEAAP,IAAO;IAEnB,KAAKjB,OAAL,GAAe,CAACiB,IAAhB;IAEA,KAAKf,MAAL,CAAYjL,YAAZ,CAA0B,eAA1B,EAA2C,CAAC,KAAK+K,OAAjD;IACA,KAAK3O,UAAL,CAAgBG,SAAhB,CAA0BiC,MAA1B,CAAkC,QAAlC,EAA4C,KAAKuM,OAAjD;IAEA,OAAO,IAAP;EAEA;EAED;AACD;AACA;AACA;;;EACCkB,KAAK,GAAG;IACP,OAAO,KAAKD,IAAL,CAAW,KAAX,CAAP;EACA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACCE,IAAI,GAAgB;IAAA,IAAdA,IAAc,uEAAP,IAAO;IAEnB,KAAKlB,OAAL,GAAe,CAACkB,IAAhB;IAEA,KAAK9P,UAAL,CAAgBuG,KAAhB,CAAsBwJ,OAAtB,GAAgC,KAAKnB,OAAL,GAAe,MAAf,GAAwB,EAAxD;IAEA,OAAO,IAAP;EAEA;EAED;AACD;AACA;AACA;;;EACCoB,IAAI,GAAG;IACN,OAAO,KAAKF,IAAL,CAAW,KAAX,CAAP;EACA;;EAEDhB,YAAY,GAAgB;IAAA,IAAdc,IAAc,uEAAP,IAAO;IAE3B;IACA,KAAKjB,OAAL,GAAe,CAACiB,IAAhB;IAEA,KAAKf,MAAL,CAAYjL,YAAZ,CAA0B,eAA1B,EAA2C,CAAC,KAAK+K,OAAjD,EAL2B,CAO3B;;IACA3L,qBAAqB,CAAE,MAAM;MAE5B;MACA,MAAMiN,aAAa,GAAG,KAAKnP,SAAL,CAAeiM,YAArC;MACA,KAAKjM,SAAL,CAAeyF,KAAf,CAAqB2J,MAArB,GAA8BD,aAAa,GAAG,IAA9C;MAEA,KAAKjQ,UAAL,CAAgBG,SAAhB,CAA0BC,GAA1B,CAA+B,YAA/B;;MAEA,MAAM+P,eAAe,GAAGxJ,CAAC,IAAI;QAC5B,IAAKA,CAAC,CAAC3B,MAAF,KAAa,KAAKlE,SAAvB,EAAmC;QACnC,KAAKA,SAAL,CAAeyF,KAAf,CAAqB2J,MAArB,GAA8B,EAA9B;QACA,KAAKlQ,UAAL,CAAgBG,SAAhB,CAA0BsN,MAA1B,CAAkC,YAAlC;QACA,KAAK3M,SAAL,CAAe8I,mBAAf,CAAoC,eAApC,EAAqDuG,eAArD;MACA,CALD;;MAOA,KAAKrP,SAAL,CAAe+C,gBAAf,CAAiC,eAAjC,EAAkDsM,eAAlD,EAf4B,CAiB5B;;MACA,MAAMC,YAAY,GAAG,CAACR,IAAD,GAAQ,CAAR,GAAY,KAAK9O,SAAL,CAAegM,YAAhD;MAEA,KAAK9M,UAAL,CAAgBG,SAAhB,CAA0BiC,MAA1B,CAAkC,QAAlC,EAA4C,CAACwN,IAA7C;MAEA5M,qBAAqB,CAAE,MAAM;QAC5B,KAAKlC,SAAL,CAAeyF,KAAf,CAAqB2J,MAArB,GAA8BE,YAAY,GAAG,IAA7C;MACA,CAFoB,CAArB;IAIA,CA1BoB,CAArB;IA4BA,OAAO,IAAP;EAEA;EAED;AACD;AACA;AACA;AACA;;;EACC7B,KAAK,CAAEA,KAAF,EAAU;IACd;AACF;AACA;AACA;IACE,KAAKmB,MAAL,GAAcnB,KAAd;IACA,KAAKM,MAAL,CAAY1N,SAAZ,GAAwBoN,KAAxB;IACA,OAAO,IAAP;EACA;EAED;AACD;AACA;AACA;AACA;;;EACCzM,KAAK,GAAqB;IAAA,IAAnB0N,SAAmB,uEAAP,IAAO;IACzB,MAAM3O,WAAW,GAAG2O,SAAS,GAAG,KAAKa,oBAAL,EAAH,GAAiC,KAAKxP,WAAnE;IACAA,WAAW,CAACyM,OAAZ,CAAqBlD,CAAC,IAAIA,CAAC,CAACtI,KAAF,EAA1B;IACA,OAAO,IAAP;EACA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACCV,QAAQ,CAAEC,QAAF,EAAa;IACpB;AACF;AACA;AACA;AACA;IACE,KAAKC,SAAL,GAAiBD,QAAjB;IACA,OAAO,IAAP;EACA;;EAEDE,aAAa,CAAEgB,UAAF,EAAe;IAE3B,IAAK,KAAK/C,MAAV,EAAmB;MAClB,KAAKA,MAAL,CAAY+B,aAAZ,CAA2BgB,UAA3B;IACA;;IAED,IAAK,KAAKjB,SAAL,KAAmBE,SAAxB,EAAoC;MACnC,KAAKF,SAAL,CAAeG,IAAf,CAAqB,IAArB,EAA2B;QAC1BhC,MAAM,EAAE8C,UAAU,CAAC9C,MADO;QAE1BC,QAAQ,EAAE6C,UAAU,CAAC7C,QAFK;QAG1B2D,KAAK,EAAEd,UAAU,CAACxC,QAAX,EAHmB;QAI1BwC;MAJ0B,CAA3B;IAMA;EACD;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACCZ,cAAc,CAAEN,QAAF,EAAa;IAC1B;AACF;AACA;AACA;AACA;IACE,KAAKO,eAAL,GAAuBP,QAAvB;IACA,OAAO,IAAP;EACA;;EAEDQ,mBAAmB,CAAEU,UAAF,EAAe;IAEjC,IAAK,KAAK/C,MAAV,EAAmB;MAClB,KAAKA,MAAL,CAAYqC,mBAAZ,CAAiCU,UAAjC;IACA;;IAED,IAAK,KAAKX,eAAL,KAAyBJ,SAA9B,EAA0C;MACzC,KAAKI,eAAL,CAAqBH,IAArB,CAA2B,IAA3B,EAAiC;QAChChC,MAAM,EAAE8C,UAAU,CAAC9C,MADa;QAEhCC,QAAQ,EAAE6C,UAAU,CAAC7C,QAFW;QAGhC2D,KAAK,EAAEd,UAAU,CAACxC,QAAX,EAHyB;QAIhCwC;MAJgC,CAAjC;IAMA;EACD;EAED;AACD;AACA;;;EACCC,OAAO,GAAG;IAET,IAAK,KAAKhD,MAAV,EAAmB;MAClB,KAAKA,MAAL,CAAYmB,QAAZ,CAAqB4C,MAArB,CAA6B,KAAK/D,MAAL,CAAYmB,QAAZ,CAAqB6C,OAArB,CAA8B,IAA9B,CAA7B,EAAmE,CAAnE;MACA,KAAKhE,MAAL,CAAYkP,OAAZ,CAAoBnL,MAApB,CAA4B,KAAK/D,MAAL,CAAYkP,OAAZ,CAAoBlL,OAApB,CAA6B,IAA7B,CAA5B,EAAiE,CAAjE;IACA;;IAED,IAAK,KAAKxD,UAAL,CAAgBsQ,aAArB,EAAqC;MACpC,KAAKtQ,UAAL,CAAgBsQ,aAAhB,CAA8B7M,WAA9B,CAA2C,KAAKzD,UAAhD;IACA;;IAED8E,KAAK,CAACyL,IAAN,CAAY,KAAK5P,QAAjB,EAA4B2M,OAA5B,CAAqClD,CAAC,IAAIA,CAAC,CAAC5H,OAAF,EAA1C;EAEA;EAED;AACD;AACA;AACA;;;EACC6N,oBAAoB,GAAG;IACtB,IAAIxP,WAAW,GAAGiE,KAAK,CAACyL,IAAN,CAAY,KAAK1P,WAAjB,CAAlB;IACA,KAAK6N,OAAL,CAAapB,OAAb,CAAsBmC,CAAC,IAAI;MAC1B5O,WAAW,GAAGA,WAAW,CAAC2P,MAAZ,CAAoBf,CAAC,CAACY,oBAAF,EAApB,CAAd;IACA,CAFD;IAGA,OAAOxP,WAAP;EACA;EAED;AACD;AACA;AACA;;;EACC4P,gBAAgB,GAAG;IAClB,IAAI/B,OAAO,GAAG5J,KAAK,CAACyL,IAAN,CAAY,KAAK7B,OAAjB,CAAd;IACA,KAAKA,OAAL,CAAapB,OAAb,CAAsBmC,CAAC,IAAI;MAC1Bf,OAAO,GAAGA,OAAO,CAAC8B,MAAR,CAAgBf,CAAC,CAACgB,gBAAF,EAAhB,CAAV;IACA,CAFD;IAGA,OAAO/B,OAAP;EACA;;AAjlBQ;;AAqlBV,eAAeN,GAAf;AACA,SAAS1K,iBAAT,EAA4BkC,eAA5B,EAA6CtG,UAA7C,EAAyDmH,kBAAzD,EAA6E2H,GAA7E,EAAkFtH,gBAAlF,EAAoGkG,gBAApG,EAAsHW,gBAAtH"},"metadata":{},"sourceType":"module"}