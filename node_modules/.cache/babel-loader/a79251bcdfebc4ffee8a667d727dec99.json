{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/SJayc/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/SJayc/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _createClass from\"C:/Users/SJayc/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"C:/Users/SJayc/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _inherits from\"C:/Users/SJayc/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/SJayc/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createSuper.js\";// ScreenDirector Reference\nimport{Screenplay as _Screenplay,SceneAsset3D}from'../bin/ScreenDirector.js';// Support Library Reference\nimport GUI from'lil-gui';import*as THREE from'three';import{GLTFLoader}from'../lib/GLTFLoader.js';import{OrbitControls}from'../lib/OrbitControls.js';import{FirstPersonControls}from'../lib/FirstPersonControls.js';// Constant Definitions\nvar LIGHT={night:0x050505,evening:0x526079,theater:0x555555,indoor:0x999999,day:0xffffff,off:0x000000,green:0x00ff00,red:0xff0000,blue:0x0000ff};var VIEW={fov:45,aspect:window.innerWidth/window.innerHeight,near:0.1,far:10000};// Screenplay Implementation\nvar Screenplay=/*#__PURE__*/function(_Screenplay2){_inherits(Screenplay,_Screenplay2);var _super=_createSuper(Screenplay);function Screenplay(){var _this;_classCallCheck(this,Screenplay);_this=_super.call(this);// Camera & Controls Setup\n_this.actors={// Lazy Getters\n/*\r\n        The Screenplay contains ALL of the models which your site will EVER need to render.\r\n        Most applications will want to introduce models as needed, in order to optimize system resources.\r\n\r\n        asyncronous loaders are used to ensure that the system is not hung up on resource loading.\r\n        - ex: actors.jumping_cube()\r\n\r\n        syncronous loaders are used for loading any other assets.\r\n        - ex: lights.point_light()\r\n\r\n        Note: Delete the models initialization logic, replacing it with the initialized model object ( see any ).\r\n              This prevents the model from initializing multiple times.\r\n    */ // Jumping Cube\nget jumping_cube(){var _this2=this;var loading=new Promise(function(resolve,reject){var loader=new GLTFLoader().setPath('/models/');loader.load('jumping_cube.glb',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(gltf){var _jumping_cube,jumping_cube,keyAnimationClip;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_jumping_cube=gltf.scene.children[0];_jumping_cube.material=new THREE.MeshStandardMaterial({color:LIGHT.indoor});_jumping_cube.animations=gltf.animations;_jumping_cube.name=\"Jumping Cube\";jumping_cube=new SceneAsset3D(_jumping_cube);jumping_cube.directions.set('revolve',function(){jumping_cube.rotation.y+=.01;});jumping_cube.mixer=new THREE.AnimationMixer(jumping_cube);keyAnimationClip=THREE.AnimationClip.findByName(jumping_cube.animations,'CubeAction.Jump');//var action = jumping_cube.mixer.clipAction( keyAnimationClip );\n//action.play();\nresolve(jumping_cube);case 9:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}(),/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(xhr){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}(),/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(err){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.error(err);reject(err);case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}());});return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return loading.then(function(_jumping_cube){delete _this2.jumping_cube;return _this2.jumping_cube=_jumping_cube;});case 3:return _context4.abrupt(\"return\",_context4.sent);case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);return _context4.abrupt(\"return\",0);case 9:case\"end\":return _context4.stop();}}},_callee4,null,[[0,6]]);}))();}};_this.lights={get point_light(){delete this.point_light;return this.point_light=new THREE.PointLight(0xffffff,2.5,0,2);},get ambient_light(){delete this.ambient_light;return this.ambient_light=new THREE.AmbientLight(LIGHT.evening);}};_this.actions={change_cam:function(){var _change_cam=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(cam_name){return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:case\"end\":return _context5.stop();}}},_callee5);}));function change_cam(_x4){return _change_cam.apply(this,arguments);}return change_cam;}()};_this.active_cam=_this.cameras.camera_a=new THREE.PerspectiveCamera(VIEW.fov,VIEW.aspect,VIEW.near,VIEW.far);_this.cameras.camera_a.name='ActiveCam';return _this;}return _createClass(Screenplay);}(_Screenplay);export{Screenplay};","map":{"version":3,"names":["Screenplay","_Screenplay","SceneAsset3D","GUI","THREE","GLTFLoader","OrbitControls","FirstPersonControls","LIGHT","night","evening","theater","indoor","day","off","green","red","blue","VIEW","fov","aspect","window","innerWidth","innerHeight","near","far","actors","jumping_cube","loading","Promise","resolve","reject","loader","setPath","load","gltf","_jumping_cube","scene","children","material","MeshStandardMaterial","color","animations","name","directions","set","rotation","y","mixer","AnimationMixer","keyAnimationClip","AnimationClip","findByName","xhr","err","console","error","then","lights","point_light","PointLight","ambient_light","AmbientLight","actions","change_cam","cam_name","active_cam","cameras","camera_a","PerspectiveCamera"],"sources":["C:/Phox.Solutions/Workshop/GitHub-Repos/WeTheNetwork/scene-director/src/implementation/Screenplay.js"],"sourcesContent":["// ScreenDirector Reference\r\nimport { Screenplay as _Screenplay, SceneAsset3D } from '../bin/ScreenDirector.js';\r\n// Support Library Reference\r\nimport GUI from 'lil-gui';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from '../lib/GLTFLoader.js';\r\nimport { OrbitControls } from '../lib/OrbitControls.js';\r\nimport { FirstPersonControls } from '../lib/FirstPersonControls.js';\r\n\r\n// Constant Definitions\r\nconst LIGHT = {\r\n  night: 0x050505,\r\n  evening: 0x526079,\r\n  theater: 0x555555,\r\n  indoor: 0x999999,\r\n  day: 0xffffff,\r\n  off: 0x000000,\r\n  green: 0x00ff00,\r\n  red: 0xff0000,\r\n  blue: 0x0000ff\r\n};\r\nconst VIEW = {\r\n  fov: 45,\r\n  aspect: window.innerWidth / window.innerHeight,\r\n  near: 0.1,\r\n  far: 10000\r\n};\r\n\r\n// Screenplay Implementation\r\nclass Screenplay extends _Screenplay{\r\n  actors = {\r\n\r\n    // Lazy Getters\r\n    /*\r\n        The Screenplay contains ALL of the models which your site will EVER need to render.\r\n        Most applications will want to introduce models as needed, in order to optimize system resources.\r\n\r\n        asyncronous loaders are used to ensure that the system is not hung up on resource loading.\r\n        - ex: actors.jumping_cube()\r\n\r\n        syncronous loaders are used for loading any other assets.\r\n        - ex: lights.point_light()\r\n\r\n        Note: Delete the models initialization logic, replacing it with the initialized model object ( see any ).\r\n              This prevents the model from initializing multiple times.\r\n    */\r\n\r\n    // Jumping Cube\r\n    get jumping_cube(){\r\n      let loading = new Promise( (resolve, reject)=>{\r\n        const loader = new GLTFLoader().setPath( '/models/' );\r\n        loader.load( 'jumping_cube.glb',\r\n          async ( gltf )=>{\r\n            let _jumping_cube = gltf.scene.children[0];\r\n            _jumping_cube.material = new THREE.MeshStandardMaterial( { color: LIGHT.indoor } );\r\n            _jumping_cube.animations = gltf.animations;\r\n            _jumping_cube.name = \"Jumping Cube\";\r\n            let jumping_cube = new SceneAsset3D( _jumping_cube );\r\n            jumping_cube.directions.set( 'revolve', function(){\r\n              jumping_cube.rotation.y += .01;\r\n            });\r\n            jumping_cube.mixer = new THREE.AnimationMixer( jumping_cube );\r\n            var keyAnimationClip = THREE.AnimationClip.findByName( jumping_cube.animations, 'CubeAction.Jump' );\r\n            //var action = jumping_cube.mixer.clipAction( keyAnimationClip );\r\n            //action.play();\r\n            resolve( jumping_cube );\r\n          },\r\n          async function ( xhr ) {\r\n            // TODO: Repair progress functionality\r\n            //console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );\r\n          },\r\n          async ( err )=>{\r\n            console.error( err );\r\n            reject( err );\r\n          }\r\n        );\r\n      } );\r\n\r\n\r\n      return (async () => {\r\n      try {\r\n        return await loading.then(( _jumping_cube )=>{\r\n          delete this.jumping_cube;\r\n          return this.jumping_cube = _jumping_cube;\r\n        })\r\n      } catch(e) {\r\n        return 0; // fallback value;\r\n      }\r\n    })();\r\n    }\r\n  }\r\n  lights = {\r\n    get point_light(){\r\n      delete this.point_light;\r\n      return this.point_light = new THREE.PointLight( 0xffffff, 2.5, 0, 2 );\r\n    },\r\n    get ambient_light(){\r\n      delete this.ambient_light;\r\n      return this.ambient_light = new THREE.AmbientLight( LIGHT.evening ) ;\r\n    }\r\n  };\r\n  cameras;\r\n  actions = {\r\n    change_cam: async ( cam_name ) =>{\r\n\r\n    }\r\n  };\r\n\r\n\r\n  constructor( ){\r\n    super( );\r\n\r\n    // Camera & Controls Setup\r\n    this.active_cam = this.cameras.camera_a = new THREE.PerspectiveCamera( VIEW.fov, VIEW.aspect, VIEW.near, VIEW.far );\r\n    this.cameras.camera_a.name = 'ActiveCam';\r\n  }\r\n}\r\n\r\nexport { Screenplay }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}